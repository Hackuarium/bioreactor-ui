{"version":3,"sources":["services/devicesOptions.js","services/db.js","services/devicesService.js","services/mqttService.js","services/broadCastDeviceService.js","../node_modules/median-quickselect/lib/median-quickselect.min.js","../node_modules/spline-interpolator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/spline-interpolator/node_modules/d3-array/build/d3-array.js","../node_modules/fft.js/lib/fft.js","../node_modules/assign-deep/index.js","../node_modules/assign-symbols/index.js","pages/BroadcastDeviceDetails/deviceParameters.jsx","pages/BroadcastDeviceDetails/DataTable.jsx","pages/BroadcastDeviceDetails/ActualDetails.jsx","../node_modules/is-any-array/src/index.js","../node_modules/ml-array-min/lib-es6/index.js","../node_modules/ml-array-max/lib-es6/index.js","../node_modules/ml-peak-shape-generator/src/util/constants.js","../node_modules/ml-peak-shape-generator/src/util/erfinv.js","../node_modules/ml-peak-shape-generator/src/classes/Gaussian.js","../node_modules/ml-peak-shape-generator/src/classes/Lorentzian.js","../node_modules/ml-peak-shape-generator/src/classes/PseudoVoigt.js","../node_modules/ml-peak-shape-generator/src/classes/Gaussian2D.js","../node_modules/ml-array-rescale/lib-es6/index.js","../node_modules/ml-matrix/src/inspect.js","../node_modules/ml-matrix/src/util.js","../node_modules/ml-matrix/src/stat.js","../node_modules/ml-matrix/src/matrix.js","../node_modules/ml-matrix/src/mathOperations.js","pages/BroadcastDeviceDetails/DetailsPlot.jsx","pages/BroadcastDeviceDetails/Details.jsx","pages/BroadcastDeviceDetails/index.jsx"],"names":["DEVICES_DB","DEFAULT_PORT","window","location","protocol","DEFAULT_PROTOCOL","DEVICE_PROTOCOLS","DEVICE_TYPE","broadcast","interactive","local","COMMANDS","help","settings","compactSettings","runExperiment","kinetic","reset","sleep","setParameter","label","value","DEVICE_KINDS","Object","keys","legoinoDeviceInformation","filter","key","kind","map","events","parameters","DB","dbName","connect","PouchDB","revs_limit","auto_compaction","getInfo","Promise","resolve","reject","db","info","then","res","close","catch","err","getAll","options","a","allDocs","include_docs","get","docId","Error","put","doc","update","_id","resGet","_rev","resPut","errPut","remove","resRm","errRm","destroy","throwDbError","error","additionalMsg","console","log","message","name","concatDeviceId","type","id","getDevices","startkey","endkey","rows","i","e","getDevice","deviceId","updateDevice","deviceData","deleteDevice","deviceID","addDevice","url","port","topic","username","password","addDevice2","device","client","onSuccess","onError","connected","hostname","isFunction","brokerUrl","mqtt","keepalive","reconnectPeriod","on","stream","end","getClientInstance","subscribe","onMessageReceived","qos","payload","data","parseCurrentSettings","toString","unsubscribe","disconnect","callback","connectDevice","mqttClient","dbClient","onSubscribe","Date","now","getAllData","getLastData","descending","limit","getPageData","skip","getAllDataCount","total_rows","testDeviceConnection","d","f","length","g","h","j","c","b","_ref","module","exports","median","bisectRight","require","smoothingSpline","x","y","sigma","lambda","n","Array","r","p","q","u","v","w","params","pop","mu","quincunx","SplineInterpolator","xIn","yIn","indices","_","sort","this","Math","min","max","step","xStart","xStop","delta","maxValue","Infinity","interpolate","minValue","nInterval","domain","vals","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arr","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","TypeError","ascending","NaN","bisector","compare","ascendingComparator","left","lo","hi","mid","right","ascendingBisect","bisectLeft","number$1","variance","array","m","s","isNaN","deviation","sqrt","extent","constant","identity","range","start","stop","arguments","ceil","e10","e5","e2","ticks","count","tickStep","floor","step0","abs","step1","pow","LN10","sturges","values","LN2","number","histogram","threshold","xz","x0","x1","tz","shift","bin","bins","thresholds","prototype","call","quantile","freedmanDiaconis","scott","mean","numbers","merge","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","i0","i1","t","random","sum","transpose","matrix","row","zip","version","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","factory","FFT","size","_csize","table","angle","PI","cos","sin","power","_width","_bitrev","revShift","_out","_data","_inv","fromComplexArray","complex","storage","createComplexArray","toComplexArray","input","completeSpectrum","spectrum","half","transform","out","_transform4","realTransform","_realTransform4","inverseTransform","outOff","len","bitrev","off","_singleTransform2","_singleTransform4","inv","quarterLen","k","A","B","C","D","Ar","Ai","Br","Bi","Cr","Ci","Dr","Di","MAr","MAi","tableBr","tableBi","MBr","MBi","tableCr","tableCi","MCr","MCi","tableDr","tableDi","MDr","MDi","T0r","T0i","T1r","T1i","T2r","T2i","T3r","T3i","FAr","FAi","FCr","FCi","FBr","FBi","FDr","FDi","evenR","evenI","oddR","oddI","leftR","leftI","rightR","rightI","step2","step3","_singleRealTransform2","_singleRealTransform4","halfLen","hquarterLen","SFAr","SFAi","SFBr","SFBi","SA","SB","assignSymbols","isValidKey","assign","target","args","isPrimitive","isObject","val","isEnumerable","propertyIsEnumerable","getSymbols","getOwnPropertySymbols","arg","names","DEVICES_PARAMETERS","variable","description","factor","unit","writable","series","color","getParams","DataTable","props","useState","setParameters","useEffect","DetailType","EpochToDate","epoch","_epoch","getTimezoneOffset","className","Header","Tr","toLocaleString","previousData","pagination","itemsPerPage","onPageChange","page","setCurrentPage","currentPage","totalCount","withText","ActualDetails","index","title","isAnyArray","object","endsWith","_options$fromIndex","fromIndex","_options$toIndex","toIndex","Number","isInteger","GAUSSIAN_EXP_FACTOR","ROOT_PI_OVER_LN2","ROOT_THREE","ROOT_2LN2","ROOT_2LN2_MINUS_ONE","erfinv","ln1MinusXSqrd","lnEtcBy2Plus2","firstSqrt","Gaussian","fwhm","sd","widthToFWHM","height","getFactor","center","Float64Array","fct","area","getArea","width","fwhmToWidth","exp","Lorentzian","squareFWHM","tan","PseudoVoigt","axis","Gaussian2D","globalFWHM","xLength","xFactor","yLength","yFactor","xCenter","yCenter","volume","getVolume","axisLabel","axisName","toLowerCase","xFWHM","yFWHM","rescale","output","currentMin","currentMax","RangeError","_options$min","autoMinMax","_options$max","indent","repeat","indentData","inspectMatrixWithOptions","maxRows","maxColumns","maxNumSize","constructor","inspectData","columns","maxI","maxJ","result","line","formatNumber","join","num","numStr","String","padEnd","precise","toPrecision","exponential","toExponential","eIndex","indexOf","slice","checkRowIndex","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkRowIndices","rowIndices","some","from","checkColumnIndices","columnIndices","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","checkNonEmpty","isEmpty","varianceByRow","unbiased","cols","sum1","sum2","varianceByColumn","varianceAll","centerByRow","set","centerByColumn","centerAll","getScaleByRow","scale","scaleByRow","getScaleByColumn","scaleByColumn","getScaleAll","divider","scaleAll","AbstractMatrix","copy","to2DArray","isSquare","previousColumn","isEchelonForm","checked","isReducedEchelonForm","clone","iMax","swapRows","tmp","echelonForm","maxRow","pivot","Matrix","setSubMatrix","mulS","rowVector","getRow","row1","row2","temp","column","columnVector","getColumn","column1","column2","idx","diag","vector2","isMatrix","vector1","dot","other","checkMatrix","Bcolj","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","r1","c1","r2","c2","embed","mat","resultat","zeros","warn","blockMult","mmul","halfRows","parseInt","halfCols","subMatrix","add","sub","isFinite","newMatrix","setRow","setColumn","middle","first","last","l","AxI","kroneckerProduct","eye","IxB","compareFunction","compareNumbers","checkIndices","rowIndex","columnIndex","trace","by","sumByRow","sumByColumn","sumAll","productByRow","productByColumn","productAll","newRows","newColumns","newData","fill","interval","round","matrix1","matrix2","klass","for","rand","randomInt","randInt","diagonal","negate","neg","tensorProduct","nRows","nColumns","arrayData","splice","newRow","addS","addM","subS","subM","subtract","subtractS","subtractM","mul","mulM","multiply","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","acos","acosh","asin","asinh","atan","atanh","cbrt","clz32","cosh","expm1","fround","log1p","log10","log2","sign","sinh","tanh","trunc","arg0","powS","powM","DetailsPlot","setSeries","setData","allData","setAllData","lines","setLines","setType","pr","getSeries","forEach","getSeriesLines","dataItems","xAxis","yAxis","lineStyle","stroke","strokeWidth","displayMarker","markerShape","onSelect","margin","bottom","top","seriesViewportStyle","position","labelSpace","paddingEnd","paddingStart","Details","DeviceDetails","match","setCount","selected","setSelected","setPreviousData","deviceClient","setDeviceClient","deviceInfos","setDeviceInfos","deviceInfo","style","backgroundColor","borderRadius","option"],"mappings":"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","file":"static/js/9.c30b0253.chunk.js","sourcesContent":["import legoinoDeviceInformation from 'legoino-device-information';\n\n// Default Values\n\nexport const DEVICES_DB = 'BIOREACTOR-UI_devices';\nexport const DEFAULT_PORT =\n  window.location.protocol === 'https:' ? '443' : '80'; // old '8080'\nexport const DEFAULT_PROTOCOL =\n  window.location.protocol === 'https:' ? 'wss' : 'http'; // old tcp\n\n// Static Values\n\nexport const DEVICE_PROTOCOLS = ['http', 'tcp', 'wss'];\n\nexport const DEVICE_TYPE = {\n  broadcast: 'broadcast',\n  interactive: 'interactive',\n  local: 'local',\n};\n\nexport const COMMANDS = {\n  help: 'h',\n  settings: 'u',\n  compactSettings: 'uc',\n  runExperiment: 'r',\n  kinetic: 'k',\n  reset: 'ur1234',\n  sleep: 'l',\n  setParameter: (label, value) => `${label}${value}`,\n};\n\nexport const DEVICE_KINDS = Object.keys(legoinoDeviceInformation)\n  .filter((key) => legoinoDeviceInformation[key].kind)\n  .map((key) => {\n    const { events, parameters, ...info } = legoinoDeviceInformation[key];\n    return info;\n  });\n\nexport const DEVICE_STATUS = {\n  opening: 1,\n  opened: 2,\n  closed: 3,\n  missing: 9,\n  error: 10,\n};\n","import PouchDB from 'pouchdb';\n\n// Wrap Db interface in case of switching to another Db other than \"PouchDb\"\n\nconst DB = (dbName) => {\n  const connect = () =>\n    new PouchDB(dbName, { revs_limit: 1, auto_compaction: true });\n\n  // DB operations to return\n\n  const getInfo = () =>\n    new Promise((resolve, reject) => {\n      const db = connect();\n      db.info()\n        .then((res) => db.close(() => resolve(res)))\n        .catch((err) => db.close(() => reject(err)));\n    });\n\n  const getAll = async (options) =>\n    new Promise((resolve, reject) => {\n      const db = connect();\n      db.allDocs({\n        include_docs: true,\n        ...options,\n      })\n        .then((res) => db.close(() => resolve(res)))\n        .catch((err) => db.close(() => reject(err)));\n    });\n\n  const get = (docId) =>\n    new Promise((resolve, reject) => {\n      const db = connect();\n      docId\n        ? db\n            .get(docId)\n            .then((res) => db.close(() => resolve(res)))\n            .catch((err) => db.close(() => reject(err)))\n        : reject(new Error('Doc fetch : docId is required'));\n    });\n\n  const put = (doc) =>\n    new Promise((resolve, reject) => {\n      const db = connect();\n      !('_id' in doc)\n        ? reject(new Error('Doc create : _id is required in doc'))\n        : db\n            .put(doc)\n            .then((res) => db.close(() => resolve(res)))\n            .catch((err) => db.close(() => reject(err)));\n    });\n\n  const update = (doc) =>\n    new Promise((resolve, reject) => {\n      const db = connect();\n      !('_id' in doc)\n        ? reject(new Error('Doc update : _id is required in doc'))\n        : db\n            .get(doc._id)\n            .then((resGet) =>\n              db\n                .put({ ...doc, _rev: resGet._rev })\n                .then((resPut) => db.close(() => resolve(resPut)))\n                .catch((errPut) => reject(errPut)),\n            )\n            .catch((err) => db.close(() => reject(err)));\n    });\n\n  const remove = (docId) =>\n    new Promise((resolve, reject) => {\n      const db = connect();\n      docId\n        ? db\n            .get(docId)\n            .then((resGet) =>\n              db\n                .remove({ _id: docId, _rev: resGet._rev })\n                .then((resRm) => db.close(() => resolve(resRm)))\n                .catch((errRm) => reject(errRm)),\n            )\n            .catch((err) => db.close(() => reject(err)))\n        : reject(new Error('Doc remove : docId is required'));\n    });\n\n  const destroy = () => {\n    const db = connect();\n    return db.destroy();\n  };\n\n  return {\n    getInfo,\n    getAll,\n    get,\n    put,\n    update,\n    remove,\n    destroy,\n  };\n};\n\nexport default DB;\n","import DB from './db';\nimport { DEVICES_DB, DEFAULT_PORT, DEFAULT_PROTOCOL } from './devicesOptions';\n\n// Private Functions\n\nconst throwDbError = (error, additionalMsg) => {\n  console.log(error);\n  const err = new Error(`${additionalMsg} \\n${error?.message}`);\n  err.name = 'DATABASE_ERROR';\n  throw err;\n};\n\nexport const concatDeviceId = (type, kind, id) => `${type}_${kind}_${id}`;\n\nexport const getDevices = async (type) =>\n  DB(DEVICES_DB)\n    .getAll({ startkey: `${type}`, endkey: `${type}\\uffff` })\n    .then((res) => res.rows.map((i) => i.doc))\n    .catch((e) => throwDbError(e, `Get locally saved devices error`));\n\nexport const getDevicesByKind = async (type, kind) =>\n  DB(DEVICES_DB)\n    .getAll({ startkey: `${type}_${kind}`, endkey: `${type}_${kind}\\uffff` })\n    .then((res) => res.rows)\n    .catch((e) => throwDbError(e, `Get locally saved devices error`));\n\nexport const getDevice = async (deviceId) =>\n  DB(DEVICES_DB)\n    .get(deviceId)\n    .catch((e) => throwDbError(e, `Get device error`));\n\nexport const updateDevice = async (deviceData) =>\n  DB(DEVICES_DB)\n    .update(deviceData)\n    .catch((e) => throwDbError(e, `Update device error`));\n\nexport const deleteDevice = (deviceID) =>\n  DB(DEVICES_DB)\n    .remove(deviceID)\n    .catch((e) => throwDbError(e, `Delete device error`));\n\n// add device to devices DB\n\nexport const addDevice = (\n  type,\n  {\n    kind,\n    name,\n    url,\n    protocol = DEFAULT_PROTOCOL,\n    port = DEFAULT_PORT,\n    topic,\n    username,\n    password,\n  },\n) =>\n  DB(DEVICES_DB)\n    .put({\n      _id: `${type}_${kind}_${name}`,\n      name,\n      url,\n      protocol,\n      port,\n      topic,\n      kind,\n      username,\n      password,\n    })\n    .catch((e) =>\n      e.name === 'conflict'\n        ? throwDbError(e, `Device name must be unique`)\n        : throwDbError(e, `Insert device error`),\n    );\n\nexport const addDevice2 = (device) =>\n  DB(DEVICES_DB)\n    .put(device)\n    .catch((e) =>\n      e.name === 'conflict'\n        ? throwDbError(e, `Device name must be unique`)\n        : throwDbError(e, `Insert device error`),\n    );\n","import mqtt from 'mqtt';\nimport { isFunction } from 'lodash';\nimport { parseCurrentSettings } from 'legoino-util';\n\n// Private Functions\nlet client;\n\nconst getClientInstance = (\n  url,\n  protocol,\n  port,\n  username,\n  password,\n  onSuccess,\n  onError,\n) => {\n  // if client is already connected\n  if (client && client.connected && client.options.hostname === url)\n    isFunction(onSuccess) && onSuccess(client);\n\n  const brokerUrl = `${protocol}://${url}:${port}`;\n  client = mqtt.connect(brokerUrl, {\n    keepalive: 300,\n    reconnectPeriod: 5000,\n  });\n\n  client.on('connect', () => {\n    console.log(`connected to ${brokerUrl} : ${client.connected}`);\n    isFunction(onSuccess) && onSuccess(client);\n  });\n\n  client.stream.on('error', (err) => {\n    console.log(err);\n    const error = new Error(`Couldn't connect to BROKER \"${brokerUrl}\"`);\n    error.name = 'Mqtt Error';\n    client.end();\n    isFunction(onError) && onError(error);\n  });\n};\n\nconst parseToJson = (data) => {\n  return parseCurrentSettings(data.toString(), {});\n};\n\n// Public Functions\n\nexport const connect = (url, protocol, port, username, password) => {\n  const clientPromise = new Promise((resolve, reject) => {\n    getClientInstance(\n      url,\n      protocol,\n      port,\n      username,\n      password,\n      (client) => resolve(client),\n      (error) => reject(error),\n    );\n  });\n  return clientPromise;\n};\n\n// TO DO: update function\n\nexport const subscribe = (client, topic, onMessageReceived, onError) => {\n  client.subscribe(topic, { qos: 2 }, (err) => {\n    err\n      ? isFunction(onError) && onError(err)\n      : client.on('message', (topic, payload) => {\n          isFunction(onMessageReceived) &&\n            onMessageReceived(parseToJson(payload));\n        });\n  });\n\n  const unsubscribe = (onError) => client.unsubscribe(topic, {}, onError);\n\n  return unsubscribe;\n};\n\nexport const disconnect = (client, callback) =>\n  client.end(() => {\n    console.log(`mqtt broker \"${client.options.hostname}\" disconnected`);\n    isFunction(callback) && callback();\n  });\n","import DB from './db';\nimport { connect, subscribe, disconnect } from './mqttService';\nimport { DEFAULT_PORT, DEFAULT_PROTOCOL } from './devicesOptions';\n\n// Public Functions\n\n//\n// connect to broadcast device & return a client instance with {subscribe, disconnect, getAllData, getLastData}\nexport const connectDevice = ({\n  _id,\n  name,\n  kind,\n  deviceId = _id || `${kind}_${name}`,\n  url,\n  protocol = DEFAULT_PROTOCOL,\n  port = DEFAULT_PORT,\n  topic,\n  username,\n  password,\n}) => {\n  const clientPromise = new Promise(async (resolve, reject) => {\n    try {\n      const mqttClient = await connect(url, protocol, port, username, password);\n      const dbClient = DB(deviceId);\n\n      const _subscribe = (onSubscribe, onError) => {\n        const unsubscribe = subscribe(\n          mqttClient,\n          topic,\n          (payload) => {\n            dbClient.put({ _id: Date.now().toString(), ...payload });\n            onSubscribe(payload);\n          },\n          onError,\n        );\n        return unsubscribe;\n      };\n\n      const _disconnect = () => disconnect(mqttClient);\n\n      const getAllData = () =>\n        dbClient.getAll().then((res) => res.rows.map((i) => i.doc));\n\n      const getLastData = () =>\n        dbClient\n          .getAll({ descending: true, limit: 1 })\n          .then((res) => res.rows.map((i) => i.doc));\n\n      const getPageData = (skip, limit) =>\n        dbClient\n          .getAll({ descending: true, skip: skip, limit: limit })\n          .then((res) => res.rows.map((i) => i.doc));\n\n      const getAllDataCount = () =>\n        dbClient.getAll().then((res) => res.total_rows);\n\n      resolve({\n        subscribe: _subscribe,\n        disconnect: _disconnect,\n        getAllData,\n        getLastData,\n        getPageData,\n        getAllDataCount,\n      });\n    } catch (e) {\n      // connection error\n      reject(e);\n    }\n  });\n\n  return clientPromise;\n};\n\nexport const testDeviceConnection = ({\n  url,\n  protocol = DEFAULT_PROTOCOL,\n  port = DEFAULT_PORT,\n  topic,\n  username,\n  password,\n}) => {\n  const clientPromise = new Promise(async (resolve, reject) => {\n    try {\n      const mqttClient = await connect(url, protocol, port, username, password);\n      const unsubscribe = subscribe(\n        mqttClient,\n        topic,\n        (payload) => {\n          unsubscribe();\n          disconnect(mqttClient, () => resolve(payload));\n        },\n        reject,\n      );\n    } catch (e) {\n      // connection error\n      reject(e);\n    }\n  });\n\n  return clientPromise;\n};\n","(function(){function a(d){for(var e=0,f=d.length-1,g=void 0,h=void 0,i=void 0,j=c(e,f);!0;){if(f<=e)return d[j];if(f==e+1)return d[e]>d[f]&&b(d,e,f),d[j];for(g=c(e,f),d[g]>d[f]&&b(d,g,f),d[e]>d[f]&&b(d,e,f),d[g]>d[e]&&b(d,g,e),b(d,g,e+1),h=e+1,i=f;!0;){do h++;while(d[e]>d[h]);do i--;while(d[i]>d[e]);if(i<h)break;b(d,h,i)}b(d,e,i),i<=j&&(e=h),i>=j&&(f=i-1)}}var b=function b(d,e,f){var _ref;return _ref=[d[f],d[e]],d[e]=_ref[0],d[f]=_ref[1],_ref},c=function c(d,e){return~~((d+e)/2)};'undefined'!=typeof module&&module.exports?module.exports=a:window.median=a})();\n","const {bisectRight} = require('d3-array')\n\nconst quincunx = (u, v, w, q) => {\n  const n = u.length - 1\n\n  u[0] = 0\n  v[0] = 0\n  w[0] = 0\n  v[1] = v[1] / u[1]\n  w[1] = w[1] / u[1]\n  for (let i = 2; i < n; ++i) {\n    u[i] = u[i] - u[i - 2] * w[i - 2] * w[i - 2] - u[i - 1] * v[i - 1] * v[i - 1]\n    v[i] = (v[i] - u[i - 1] * v[i - 1] * w[i - 1]) / u[i]\n    w[i] = w[i] / u[i]\n  }\n\n  for (let i = 2; i < n; ++i) {\n    q[i] = q[i] - v[i - 1] * q[i - 1] - w[i - 2] * q[i - 2]\n  }\n  for (let i = 1; i < n; ++i) {\n    q[i] = q[i] / u[i]\n  }\n\n  q[n - 2] = q[n - 2] - v[n - 2] * q[n - 1]\n  for (let i = n - 3; i > 0; --i) {\n    q[i] = q[i] - v[i] * q[i + 1] - w[i] * q[i + 2]\n  }\n}\n\nconst smoothingSpline = (x, y, sigma, lambda) => {\n  const n = x.length - 1\n  const h = new Array(n + 1)\n  const r = new Array(n + 1)\n  const f = new Array(n + 1)\n  const p = new Array(n + 1)\n  const q = new Array(n + 1)\n  const u = new Array(n + 1)\n  const v = new Array(n + 1)\n  const w = new Array(n + 1)\n  const params = x.map(() => [0, 0, 0, 0])\n  params.pop()\n\n  const mu = 2 * (1 - lambda) / (3 * lambda)\n  for (let i = 0; i < n; ++i) {\n    h[i] = x[i + 1] - x[i]\n    r[i] = 3 / h[i]\n  }\n  q[0] = 0\n  for (let i = 1; i < n; ++i) {\n    f[i] = -(r[i - 1] + r[i])\n    p[i] = 2 * (x[i + 1] - x[i - 1])\n    q[i] = 3 * (y[i + 1] - y[i]) / h[i] - 3 * (y[i] - y[i - 1]) / h[i - 1]\n  }\n  q[n] = 0\n\n  for (let i = 1; i < n; ++i) {\n    u[i] = r[i - 1] * r[i - 1] * sigma[i - 1] + f[i] * f[i] * sigma[i] + r[i] * r[i] * sigma[i + 1]\n    u[i] = mu * u[i] + p[i]\n  }\n  for (let i = 1; i < n - 1; ++i) {\n    v[i] = f[i] * r[i] * sigma[i] + r[i] * f[i + 1] * sigma[i + 1]\n    v[i] = mu * v[i] + h[i]\n  }\n  for (let i = 1; i < n - 2; ++i) {\n    w[i] = mu * r[i] * r[i + 1] * sigma[i + 1]\n  }\n\n  quincunx(u, v, w, q)\n\n  params[0][3] = y[0] - mu * r[0] * q[1] * sigma[0]\n  params[1][3] = y[1] - mu * (f[1] * q[1] + r[1] * q[2]) * sigma[0]\n  params[0][0] = q[1] / (3 * h[0])\n  params[0][1] = 0\n  params[0][2] = (params[1][3] - params[0][3]) / h[0] - q[1] * h[0] / 3\n  r[0] = 0\n  for (let i = 1; i < n; ++i) {\n    params[i][0] = (q[i + 1] - q[i]) / (3 * h[i])\n    params[i][1] = q[i]\n    params[i][2] = (q[i] + q[i - 1]) * h[i - 1] + params[i - 1][2]\n    params[i][3] = r[i - 1] * q[i - 1] + f[i] * q[i] + r[i] * q[i + 1]\n    params[i][3] = y[i] - mu * params[i][3] * sigma[i]\n  }\n  return params\n}\n\nclass SplineInterpolator {\n  constructor (xIn, yIn, lambda = 1) {\n    const indices = xIn.map((_, i) => i)\n    indices.sort((i, j) => xIn[i] - xIn[j])\n    const x = indices.map((i) => xIn[i])\n    const y = indices.map((i) => yIn[i])\n    const n = indices.length\n    const sigma = indices.map(() => 1)\n    this.n = n\n    this.x = x\n    this.y = y\n    this.params = smoothingSpline(x, y, sigma, lambda)\n  }\n\n  interpolate (v) {\n    if (v === this.x[this.n - 1]) {\n      return this.y[this.n - 1]\n    }\n    const i = Math.min(Math.max(0, bisectRight(this.x, v) - 1), this.n - 2)\n    const [a, b, c, d] = this.params[i]\n    v = v - this.x[i]\n    return a * v * v * v + b * v * v + c * v + d\n  }\n\n  max (step = 100) {\n    const xStart = this.x[0]\n    const xStop = this.x[this.n - 1]\n    const delta = (xStop - xStart) / step\n    let maxValue = -Infinity\n    for (let i = 0, x = xStart; i < step; ++i, x += delta) {\n      const y = this.interpolate(x)\n      if (y > maxValue) {\n        maxValue = y\n      }\n    }\n    return maxValue\n  }\n\n  min (step = 100) {\n    const xStart = this.x[0]\n    const xStop = this.x[this.n - 1]\n    const delta = (xStop - xStart) / step\n    let minValue = Infinity\n    for (let i = 0, x = xStart; i < step; ++i, x += delta) {\n      const y = this.interpolate(x)\n      if (y < minValue) {\n        minValue = y\n      }\n    }\n    return minValue\n  }\n\n  domain () {\n    return [this.x[0], this.x[this.x.length - 1]]\n  }\n\n  range () {\n    return [this.min(), this.max()]\n  }\n\n  curve (nInterval, domain = null) {\n    domain = domain || this.domain()\n    const delta = (domain[1] - domain[0]) / (nInterval - 1)\n    const vals = new Array(nInterval)\n    for (let i = 0; i < nInterval; ++i) {\n      const x = delta * i + domain[0]\n      vals[i] = [x, this.interpolate(x)]\n    }\n    return vals\n  }\n}\n\nmodule.exports = SplineInterpolator\n","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3_array = {})));\n}(this, function (exports) { 'use strict';\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n    return {\n      left: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;\n          else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;\n          else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n\n  function ascendingComparator(f) {\n    return function(d, x) {\n      return ascending(f(d), x);\n    };\n  }\n\n  var ascendingBisect = bisector(ascending);\n  var bisectRight = ascendingBisect.right;\n  var bisectLeft = ascendingBisect.left;\n\n  function descending(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function number$1(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function variance(array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (f == null) {\n      while (++i < n) {\n        if (!isNaN(a = number$1(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    else {\n      while (++i < n) {\n        if (!isNaN(a = number$1(f(array[i], i, array)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  }\n\n  function deviation(array, f) {\n    var v = variance(array, f);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function extent(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    return [a, c];\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function identity(x) {\n    return x;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  var e10 = Math.sqrt(50);\n  var e5 = Math.sqrt(10);\n  var e2 = Math.sqrt(2);\n  function ticks(start, stop, count) {\n    var step = tickStep(start, stop, count);\n    return range(\n      Math.ceil(start / step) * step,\n      Math.floor(stop / step) * step + step / 2, // inclusive\n      step\n    );\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;\n    else if (error >= e5) step1 *= 5;\n    else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function sturges(values) {\n    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n  }\n\n  function number(x) {\n    return +x;\n  }\n\n  function histogram() {\n    var value = identity,\n        domain = extent,\n        threshold = sturges;\n\n    function histogram(data) {\n      var i,\n          n = data.length,\n          x,\n          values = new Array(n);\n\n      // Coerce values to numbers.\n      for (i = 0; i < n; ++i) {\n        values[i] = +value(data[i], i, data);\n      }\n\n      var xz = domain(values),\n          x0 = +xz[0],\n          x1 = +xz[1],\n          tz = threshold(values, x0, x1);\n\n      // Convert number of thresholds into uniform thresholds.\n      if (!Array.isArray(tz)) tz = ticks(x0, x1, +tz);\n\n      // Coerce thresholds to numbers, ignoring any outside the domain.\n      var m = tz.length;\n      for (i = 0; i < m; ++i) tz[i] = +tz[i];\n      while (tz[0] <= x0) tz.shift(), --m;\n      while (tz[m - 1] >= x1) tz.pop(), --m;\n\n      var bins = new Array(m + 1),\n          bin;\n\n      // Initialize bins.\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      }\n\n      // Assign data to bins by value, ignoring any outside the domain.\n      for (i = 0; i < n; ++i) {\n        x = values[i];\n        if (x0 <= x && x <= x1) {\n          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), histogram) : value;\n    };\n\n    histogram.domain = function(_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), histogram) : domain;\n    };\n\n    histogram.thresholds = function(_) {\n      if (!arguments.length) return threshold;\n      threshold = typeof _ === \"function\" ? _\n          : Array.isArray(_) ? constant(Array.prototype.map.call(_, number))\n          : constant(+_);\n      return histogram;\n    };\n\n    return histogram;\n  }\n\n  function quantile(array, p, f) {\n    if (f == null) f = number$1;\n    if (!(n = array.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n    if (p >= 1) return +f(array[n - 1], n - 1, array);\n    var n,\n        h = (n - 1) * p,\n        i = Math.floor(h),\n        a = +f(array[i], i, array),\n        b = +f(array[i + 1], i + 1, array);\n    return a + (b - a) * (h - i);\n  }\n\n  function freedmanDiaconis(values, min, max) {\n    values.sort(ascending);\n    return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function scott(values, min, max) {\n    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function max(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n\n    return a;\n  }\n\n  function mean(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number$1(array[i]))) s += a; else --j;\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) s += a; else --j;\n    }\n\n    if (j) return s / j;\n  }\n\n  function median(array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number$1(array[i]))) numbers.push(a);\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) numbers.push(a);\n    }\n\n    return quantile(numbers.sort(ascending), 0.5);\n  }\n\n  function merge(arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  }\n\n  function min(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n    }\n\n    return a;\n  }\n\n  function pairs(array) {\n    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [p, p = array[++i]];\n    return pairs;\n  }\n\n  function permute(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  }\n\n  function scan(array, compare) {\n    if (!(n = array.length)) return;\n    var i = 0,\n        n,\n        j = 0,\n        xi,\n        xj = array[j];\n\n    if (!compare) compare = ascending;\n\n    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n    if (compare(xj, xj) === 0) return j;\n  }\n\n  function shuffle(array, i0, i1) {\n    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n\n    return array;\n  }\n\n  function sum(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n    }\n\n    else {\n      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n    }\n\n    return s;\n  }\n\n  function transpose(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  }\n\n  function length(d) {\n    return d.length;\n  }\n\n  function zip() {\n    return transpose(arguments);\n  }\n\n  var version = \"0.7.1\";\n\n  exports.version = version;\n  exports.bisect = bisectRight;\n  exports.bisectRight = bisectRight;\n  exports.bisectLeft = bisectLeft;\n  exports.ascending = ascending;\n  exports.bisector = bisector;\n  exports.descending = descending;\n  exports.deviation = deviation;\n  exports.extent = extent;\n  exports.histogram = histogram;\n  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n  exports.thresholdScott = scott;\n  exports.thresholdSturges = sturges;\n  exports.max = max;\n  exports.mean = mean;\n  exports.median = median;\n  exports.merge = merge;\n  exports.min = min;\n  exports.pairs = pairs;\n  exports.permute = permute;\n  exports.quantile = quantile;\n  exports.range = range;\n  exports.scan = scan;\n  exports.shuffle = shuffle;\n  exports.sum = sum;\n  exports.ticks = ticks;\n  exports.tickStep = tickStep;\n  exports.transpose = transpose;\n  exports.variance = variance;\n  exports.zip = zip;\n\n}));","'use strict';\n\nfunction FFT(size) {\n  this.size = size | 0;\n  if (this.size <= 1 || (this.size & (this.size - 1)) !== 0)\n    throw new Error('FFT size must be a power of two and bigger than 1');\n\n  this._csize = size << 1;\n\n  // NOTE: Use of `var` is intentional for old V8 versions\n  var table = new Array(this.size * 2);\n  for (var i = 0; i < table.length; i += 2) {\n    const angle = Math.PI * i / this.size;\n    table[i] = Math.cos(angle);\n    table[i + 1] = -Math.sin(angle);\n  }\n  this.table = table;\n\n  // Find size's power of two\n  var power = 0;\n  for (var t = 1; this.size > t; t <<= 1)\n    power++;\n\n  // Calculate initial step's width:\n  //   * If we are full radix-4 - it is 2x smaller to give inital len=8\n  //   * Otherwise it is the same as `power` to give len=4\n  this._width = power % 2 === 0 ? power - 1 : power;\n\n  // Pre-compute bit-reversal patterns\n  this._bitrev = new Array(1 << this._width);\n  for (var j = 0; j < this._bitrev.length; j++) {\n    this._bitrev[j] = 0;\n    for (var shift = 0; shift < this._width; shift += 2) {\n      var revShift = this._width - shift - 2;\n      this._bitrev[j] |= ((j >>> shift) & 3) << revShift;\n    }\n  }\n\n  this._out = null;\n  this._data = null;\n  this._inv = 0;\n}\nmodule.exports = FFT;\n\nFFT.prototype.fromComplexArray = function fromComplexArray(complex, storage) {\n  var res = storage || new Array(complex.length >>> 1);\n  for (var i = 0; i < complex.length; i += 2)\n    res[i >>> 1] = complex[i];\n  return res;\n};\n\nFFT.prototype.createComplexArray = function createComplexArray() {\n  const res = new Array(this._csize);\n  for (var i = 0; i < res.length; i++)\n    res[i] = 0;\n  return res;\n};\n\nFFT.prototype.toComplexArray = function toComplexArray(input, storage) {\n  var res = storage || this.createComplexArray();\n  for (var i = 0; i < res.length; i += 2) {\n    res[i] = input[i >>> 1];\n    res[i + 1] = 0;\n  }\n  return res;\n};\n\nFFT.prototype.completeSpectrum = function completeSpectrum(spectrum) {\n  var size = this._csize;\n  var half = size >>> 1;\n  for (var i = 2; i < half; i += 2) {\n    spectrum[size - i] = spectrum[i];\n    spectrum[size - i + 1] = -spectrum[i + 1];\n  }\n};\n\nFFT.prototype.transform = function transform(out, data) {\n  if (out === data)\n    throw new Error('Input and output buffers must be different');\n\n  this._out = out;\n  this._data = data;\n  this._inv = 0;\n  this._transform4();\n  this._out = null;\n  this._data = null;\n};\n\nFFT.prototype.realTransform = function realTransform(out, data) {\n  if (out === data)\n    throw new Error('Input and output buffers must be different');\n\n  this._out = out;\n  this._data = data;\n  this._inv = 0;\n  this._realTransform4();\n  this._out = null;\n  this._data = null;\n};\n\nFFT.prototype.inverseTransform = function inverseTransform(out, data) {\n  if (out === data)\n    throw new Error('Input and output buffers must be different');\n\n  this._out = out;\n  this._data = data;\n  this._inv = 1;\n  this._transform4();\n  for (var i = 0; i < out.length; i++)\n    out[i] /= this.size;\n  this._out = null;\n  this._data = null;\n};\n\n// radix-4 implementation\n//\n// NOTE: Uses of `var` are intentional for older V8 version that do not\n// support both `let compound assignments` and `const phi`\nFFT.prototype._transform4 = function _transform4() {\n  var out = this._out;\n  var size = this._csize;\n\n  // Initial step (permute and transform)\n  var width = this._width;\n  var step = 1 << width;\n  var len = (size / step) << 1;\n\n  var outOff;\n  var t;\n  var bitrev = this._bitrev;\n  if (len === 4) {\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleTransform2(outOff, off, step);\n    }\n  } else {\n    // len === 8\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleTransform4(outOff, off, step);\n    }\n  }\n\n  // Loop through steps in decreasing order\n  var inv = this._inv ? -1 : 1;\n  var table = this.table;\n  for (step >>= 2; step >= 2; step >>= 2) {\n    len = (size / step) << 1;\n    var quarterLen = len >>> 2;\n\n    // Loop through offsets in the data\n    for (outOff = 0; outOff < size; outOff += len) {\n      // Full case\n      var limit = outOff + quarterLen;\n      for (var i = outOff, k = 0; i < limit; i += 2, k += step) {\n        const A = i;\n        const B = A + quarterLen;\n        const C = B + quarterLen;\n        const D = C + quarterLen;\n\n        // Original values\n        const Ar = out[A];\n        const Ai = out[A + 1];\n        const Br = out[B];\n        const Bi = out[B + 1];\n        const Cr = out[C];\n        const Ci = out[C + 1];\n        const Dr = out[D];\n        const Di = out[D + 1];\n\n        // Middle values\n        const MAr = Ar;\n        const MAi = Ai;\n\n        const tableBr = table[k];\n        const tableBi = inv * table[k + 1];\n        const MBr = Br * tableBr - Bi * tableBi;\n        const MBi = Br * tableBi + Bi * tableBr;\n\n        const tableCr = table[2 * k];\n        const tableCi = inv * table[2 * k + 1];\n        const MCr = Cr * tableCr - Ci * tableCi;\n        const MCi = Cr * tableCi + Ci * tableCr;\n\n        const tableDr = table[3 * k];\n        const tableDi = inv * table[3 * k + 1];\n        const MDr = Dr * tableDr - Di * tableDi;\n        const MDi = Dr * tableDi + Di * tableDr;\n\n        // Pre-Final values\n        const T0r = MAr + MCr;\n        const T0i = MAi + MCi;\n        const T1r = MAr - MCr;\n        const T1i = MAi - MCi;\n        const T2r = MBr + MDr;\n        const T2i = MBi + MDi;\n        const T3r = inv * (MBr - MDr);\n        const T3i = inv * (MBi - MDi);\n\n        // Final values\n        const FAr = T0r + T2r;\n        const FAi = T0i + T2i;\n\n        const FCr = T0r - T2r;\n        const FCi = T0i - T2i;\n\n        const FBr = T1r + T3i;\n        const FBi = T1i - T3r;\n\n        const FDr = T1r - T3i;\n        const FDi = T1i + T3r;\n\n        out[A] = FAr;\n        out[A + 1] = FAi;\n        out[B] = FBr;\n        out[B + 1] = FBi;\n        out[C] = FCr;\n        out[C + 1] = FCi;\n        out[D] = FDr;\n        out[D + 1] = FDi;\n      }\n    }\n  }\n};\n\n// radix-2 implementation\n//\n// NOTE: Only called for len=4\nFFT.prototype._singleTransform2 = function _singleTransform2(outOff, off,\n                                                             step) {\n  const out = this._out;\n  const data = this._data;\n\n  const evenR = data[off];\n  const evenI = data[off + 1];\n  const oddR = data[off + step];\n  const oddI = data[off + step + 1];\n\n  const leftR = evenR + oddR;\n  const leftI = evenI + oddI;\n  const rightR = evenR - oddR;\n  const rightI = evenI - oddI;\n\n  out[outOff] = leftR;\n  out[outOff + 1] = leftI;\n  out[outOff + 2] = rightR;\n  out[outOff + 3] = rightI;\n};\n\n// radix-4\n//\n// NOTE: Only called for len=8\nFFT.prototype._singleTransform4 = function _singleTransform4(outOff, off,\n                                                             step) {\n  const out = this._out;\n  const data = this._data;\n  const inv = this._inv ? -1 : 1;\n  const step2 = step * 2;\n  const step3 = step * 3;\n\n  // Original values\n  const Ar = data[off];\n  const Ai = data[off + 1];\n  const Br = data[off + step];\n  const Bi = data[off + step + 1];\n  const Cr = data[off + step2];\n  const Ci = data[off + step2 + 1];\n  const Dr = data[off + step3];\n  const Di = data[off + step3 + 1];\n\n  // Pre-Final values\n  const T0r = Ar + Cr;\n  const T0i = Ai + Ci;\n  const T1r = Ar - Cr;\n  const T1i = Ai - Ci;\n  const T2r = Br + Dr;\n  const T2i = Bi + Di;\n  const T3r = inv * (Br - Dr);\n  const T3i = inv * (Bi - Di);\n\n  // Final values\n  const FAr = T0r + T2r;\n  const FAi = T0i + T2i;\n\n  const FBr = T1r + T3i;\n  const FBi = T1i - T3r;\n\n  const FCr = T0r - T2r;\n  const FCi = T0i - T2i;\n\n  const FDr = T1r - T3i;\n  const FDi = T1i + T3r;\n\n  out[outOff] = FAr;\n  out[outOff + 1] = FAi;\n  out[outOff + 2] = FBr;\n  out[outOff + 3] = FBi;\n  out[outOff + 4] = FCr;\n  out[outOff + 5] = FCi;\n  out[outOff + 6] = FDr;\n  out[outOff + 7] = FDi;\n};\n\n// Real input radix-4 implementation\nFFT.prototype._realTransform4 = function _realTransform4() {\n  var out = this._out;\n  var size = this._csize;\n\n  // Initial step (permute and transform)\n  var width = this._width;\n  var step = 1 << width;\n  var len = (size / step) << 1;\n\n  var outOff;\n  var t;\n  var bitrev = this._bitrev;\n  if (len === 4) {\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleRealTransform2(outOff, off >>> 1, step >>> 1);\n    }\n  } else {\n    // len === 8\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleRealTransform4(outOff, off >>> 1, step >>> 1);\n    }\n  }\n\n  // Loop through steps in decreasing order\n  var inv = this._inv ? -1 : 1;\n  var table = this.table;\n  for (step >>= 2; step >= 2; step >>= 2) {\n    len = (size / step) << 1;\n    var halfLen = len >>> 1;\n    var quarterLen = halfLen >>> 1;\n    var hquarterLen = quarterLen >>> 1;\n\n    // Loop through offsets in the data\n    for (outOff = 0; outOff < size; outOff += len) {\n      for (var i = 0, k = 0; i <= hquarterLen; i += 2, k += step) {\n        var A = outOff + i;\n        var B = A + quarterLen;\n        var C = B + quarterLen;\n        var D = C + quarterLen;\n\n        // Original values\n        var Ar = out[A];\n        var Ai = out[A + 1];\n        var Br = out[B];\n        var Bi = out[B + 1];\n        var Cr = out[C];\n        var Ci = out[C + 1];\n        var Dr = out[D];\n        var Di = out[D + 1];\n\n        // Middle values\n        var MAr = Ar;\n        var MAi = Ai;\n\n        var tableBr = table[k];\n        var tableBi = inv * table[k + 1];\n        var MBr = Br * tableBr - Bi * tableBi;\n        var MBi = Br * tableBi + Bi * tableBr;\n\n        var tableCr = table[2 * k];\n        var tableCi = inv * table[2 * k + 1];\n        var MCr = Cr * tableCr - Ci * tableCi;\n        var MCi = Cr * tableCi + Ci * tableCr;\n\n        var tableDr = table[3 * k];\n        var tableDi = inv * table[3 * k + 1];\n        var MDr = Dr * tableDr - Di * tableDi;\n        var MDi = Dr * tableDi + Di * tableDr;\n\n        // Pre-Final values\n        var T0r = MAr + MCr;\n        var T0i = MAi + MCi;\n        var T1r = MAr - MCr;\n        var T1i = MAi - MCi;\n        var T2r = MBr + MDr;\n        var T2i = MBi + MDi;\n        var T3r = inv * (MBr - MDr);\n        var T3i = inv * (MBi - MDi);\n\n        // Final values\n        var FAr = T0r + T2r;\n        var FAi = T0i + T2i;\n\n        var FBr = T1r + T3i;\n        var FBi = T1i - T3r;\n\n        out[A] = FAr;\n        out[A + 1] = FAi;\n        out[B] = FBr;\n        out[B + 1] = FBi;\n\n        // Output final middle point\n        if (i === 0) {\n          var FCr = T0r - T2r;\n          var FCi = T0i - T2i;\n          out[C] = FCr;\n          out[C + 1] = FCi;\n          continue;\n        }\n\n        // Do not overwrite ourselves\n        if (i === hquarterLen)\n          continue;\n\n        // In the flipped case:\n        // MAi = -MAi\n        // MBr=-MBi, MBi=-MBr\n        // MCr=-MCr\n        // MDr=MDi, MDi=MDr\n        var ST0r = T1r;\n        var ST0i = -T1i;\n        var ST1r = T0r;\n        var ST1i = -T0i;\n        var ST2r = -inv * T3i;\n        var ST2i = -inv * T3r;\n        var ST3r = -inv * T2i;\n        var ST3i = -inv * T2r;\n\n        var SFAr = ST0r + ST2r;\n        var SFAi = ST0i + ST2i;\n\n        var SFBr = ST1r + ST3i;\n        var SFBi = ST1i - ST3r;\n\n        var SA = outOff + quarterLen - i;\n        var SB = outOff + halfLen - i;\n\n        out[SA] = SFAr;\n        out[SA + 1] = SFAi;\n        out[SB] = SFBr;\n        out[SB + 1] = SFBi;\n      }\n    }\n  }\n};\n\n// radix-2 implementation\n//\n// NOTE: Only called for len=4\nFFT.prototype._singleRealTransform2 = function _singleRealTransform2(outOff,\n                                                                     off,\n                                                                     step) {\n  const out = this._out;\n  const data = this._data;\n\n  const evenR = data[off];\n  const oddR = data[off + step];\n\n  const leftR = evenR + oddR;\n  const rightR = evenR - oddR;\n\n  out[outOff] = leftR;\n  out[outOff + 1] = 0;\n  out[outOff + 2] = rightR;\n  out[outOff + 3] = 0;\n};\n\n// radix-4\n//\n// NOTE: Only called for len=8\nFFT.prototype._singleRealTransform4 = function _singleRealTransform4(outOff,\n                                                                     off,\n                                                                     step) {\n  const out = this._out;\n  const data = this._data;\n  const inv = this._inv ? -1 : 1;\n  const step2 = step * 2;\n  const step3 = step * 3;\n\n  // Original values\n  const Ar = data[off];\n  const Br = data[off + step];\n  const Cr = data[off + step2];\n  const Dr = data[off + step3];\n\n  // Pre-Final values\n  const T0r = Ar + Cr;\n  const T1r = Ar - Cr;\n  const T2r = Br + Dr;\n  const T3r = inv * (Br - Dr);\n\n  // Final values\n  const FAr = T0r + T2r;\n\n  const FBr = T1r;\n  const FBi = -T3r;\n\n  const FCr = T0r - T2r;\n\n  const FDr = T1r;\n  const FDi = T3r;\n\n  out[outOff] = FAr;\n  out[outOff + 1] = 0;\n  out[outOff + 2] = FBr;\n  out[outOff + 3] = FBi;\n  out[outOff + 4] = FCr;\n  out[outOff + 5] = 0;\n  out[outOff + 6] = FDr;\n  out[outOff + 7] = FDi;\n};\n","/*!\n * assign-deep <https://github.com/jonschlinkert/assign-deep>\n *\n * Copyright (c) 2017-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nconst toString = Object.prototype.toString;\nconst assignSymbols = require('assign-symbols');\n\nconst isValidKey = key => {\n  return key !== '__proto__' && key !== 'constructor' && key !== 'prototype';\n};\n\nconst assign = module.exports = (target, ...args) => {\n  let i = 0;\n  if (isPrimitive(target)) target = args[i++];\n  if (!target) target = {};\n  for (; i < args.length; i++) {\n    if (isObject(args[i])) {\n      for (const key of Object.keys(args[i])) {\n        if (isValidKey(key)) {\n          if (isObject(target[key]) && isObject(args[i][key])) {\n            assign(target[key], args[i][key]);\n          } else {\n            target[key] = args[i][key];\n          }\n        }\n      }\n      assignSymbols(target, args[i]);\n    }\n  }\n  return target;\n};\n\nfunction isObject(val) {\n  return typeof val === 'function' || toString.call(val) === '[object Object]';\n}\n\nfunction isPrimitive(val) {\n  return typeof val === 'object' ? val === null : typeof val !== 'function';\n}\n","/*!\n * assign-symbols <https://github.com/jonschlinkert/assign-symbols>\n *\n * Copyright (c) 2015-present, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nconst toString = Object.prototype.toString;\nconst isEnumerable = Object.prototype.propertyIsEnumerable;\nconst getSymbols = Object.getOwnPropertySymbols;\n\nmodule.exports = (target, ...args) => {\n  if (!isObject(target)) {\n    throw new TypeError('expected the first argument to be an object');\n  }\n\n  if (args.length === 0 || typeof Symbol !== 'function' || typeof getSymbols !== 'function') {\n    return target;\n  }\n\n  for (let arg of args) {\n    let names = getSymbols(arg);\n\n    for (let key of names) {\n      if (isEnumerable.call(arg, key)) {\n        target[key] = arg[key];\n      }\n    }\n  }\n  return target;\n};\n\nfunction isObject(val) {\n  return typeof val === 'function' || toString.call(val) === '[object Object]' || Array.isArray(val);\n}\n","export const DEVICES_PARAMETERS = [\n    {\n        label:'Temperature',\n        parameters:[\n            {\n                label: 'Date',\n                variable: 'date',\n                name: 'Date',\n                description: '',\n                factor: 1,\n                unit: '',\n                writable: false,\n                series:false\n            },\n            {\n                label: 'A',\n                variable: 'cpuTemperature',\n                name: 'CPU Temperature',\n                description: '',\n                factor: 1,\n                unit: '°C',\n                writable: false,\n                series:true,\n                color:'red'\n            }\n        ]\n    },\n    {\n        label:'Load',\n        parameters:[\n            {\n                label: 'Date',\n                variable: 'cpuTemperature',\n                name: 'Date',\n                description: '',\n                factor: 1,\n                unit: '',\n                writable: false,\n            },\n            {\n                label: 'H',\n                variable: 'load',\n                name: 'Load',\n                description: 'Total load',\n                factor: 1,\n                unit: '%',\n                writable: false,\n                series:true,\n                color:'red'\n              },\n          \n              {\n                label: 'I',\n                variable: 'userLoad',\n                name: 'User load',\n                description: 'Load from user',\n                factor: 1,\n                unit: '%',\n                writable: false,\n                series:true,\n                color:'blue'\n              },\n          \n              {\n                label: 'J',\n                variable: 'systemLoad',\n                name: 'System load',\n                description: 'Load from system',\n                factor: 1,\n                unit: '%',\n                writable: false,\n                series:true,\n                color:'green'\n              },\n          \n              {\n                label: 'K',\n                variable: 'niceLoad',\n                name: 'Nice load',\n                description: 'Load for Nice',\n                factor: 1,\n                unit: '%',\n                writable: false,\n                series:false,\n                color:'red'\n              },\n          \n              {\n                label: 'L',\n                variable: 'idleLoad',\n                name: 'Idle load',\n                description: 'Idle percent of time',\n                factor: 1,\n                unit: '%',\n                writable: false,\n                series:false,\n                color:'red'\n              },\n          \n              {\n                label: 'M',\n                variable: 'irqLoad',\n                name: 'IRQ load',\n                description: 'Load due to IRQ',\n                factor: 1,\n                unit: '%',\n                writable: false,\n                series:false,\n                color:'red'\n              },\n        ]\n    },\n    {\n        label:'FS',\n        parameters:[\n            {\n                label: 'Date',\n                variable: 'cpuTemperature',\n                name: 'Date',\n                description: '',\n                factor: 1,\n                unit: '',\n                writable: false,\n                series:false,\n                color:'red'\n            },\n            {\n                label: 'N',\n                variable: 'fsMinimalUse',\n                name: 'FS minimal use',\n                description: 'Minimal percent spaced used in a filesystem',\n                factor: 1,\n                unit: '%',\n                writable: false,\n                series:true,\n                color:'green'\n              },\n              {\n                label: 'O',\n                variable: 'fsMaximalUse',\n                name: 'FS maximal use',\n                description: 'Maximal percent spaced used in a filesystem',\n                factor: 1,\n                unit: '%',\n                writable: false,\n                series:true,\n                color:'red'\n              }\n        ]\n    },\n    {\n        label:'I/O',\n        parameters:[\n            {\n                label: 'Date',\n                variable: 'cpuTemperature',\n                name: 'Date',\n                description: '',\n                factor: 1,\n                unit: '',\n                writable: false,\n                series:false,\n                color:'red'\n            },\n            {\n                label: 'D',\n                variable: 'fsRead',\n                name: 'FS Read',\n                description: 'File system read in kb',\n                factor: 1,\n                unit: 'kb',\n                writable: false,\n                series:true,\n                color:'blue'\n              },\n          \n              {\n                label: 'E',\n                variable: 'fsWrite',\n                name: 'FS Write',\n                description: 'File system read in kb',\n                factor: 1,\n                unit: 'kb',\n                writable: false,\n                series:true,\n                color:'black'\n              },\n          \n              {\n                label: 'F',\n                variable: 'networkRead',\n                name: 'Network Read',\n                description: 'File system read in kb',\n                factor: 1,\n                unit: 'kb',\n                writable: false,\n                series:true,\n                color:'red'\n              },\n          \n              {\n                label: 'G',\n                variable: 'networkWrite',\n                name: 'Network Write',\n                description: 'File system read in kb',\n                factor: 1,\n                unit: 'kb',\n                writable: false,\n                series:true,\n                color:'green'\n              },\n        ]\n    }\n];\n\nexport const getParams=(type)=>{\n    return DEVICES_PARAMETERS.filter(p=>p.label===type)[0]? DEVICES_PARAMETERS.filter(p=>p.label===type)[0].parameters:[]\n}\n\nexport const getSeries=(type)=>{\n    return DEVICES_PARAMETERS.filter(p=>p.label===type)[0]? DEVICES_PARAMETERS.filter(p=>p.label===type)[0].parameters.filter(pr=>pr.series===true):[]\n}","import { useState, useEffect } from 'react';\n\nimport { Table } from '../../components/tailwind-ui';\nimport { getParams } from './deviceParameters';\n\nconst DataTable = (props) => {\n  // const [currentPage, setCurrentPage] = useState(1);\n  // const [count, setCount] = useState(50);\n  const [parameters, setParameters] = useState([]);\n\n  useEffect(() => {\n    if (props.DetailType) {\n      const params = getParams(props.DetailType);\n      setParameters(params);\n    }\n    // setCount(props.previousData.length);\n  }, [props]);\n\n  const EpochToDate = (epoch) => {\n    if (epoch < 10000000000) epoch *= 1000; // convert to milliseconds (Epoch is usually expressed in seconds, but Javascript uses Milliseconds)\n    let _epoch = epoch + new Date().getTimezoneOffset() * -1; //for timeZone\n    return new Date(_epoch);\n  };\n\n  return (\n    <div className=\"my-1 overflow-scroll w-24 min-w-full md:min-w-0  bg-white w-full rounded-lg \">\n      <div className=\"flex space-x-100 m-4\">\n        <div className=\"flex-1\">\n          <h2 className=\"text-2xl \">Previous Details</h2>\n          <p className=\"text-sm text-gray-500\">\n            Previous details of the device.\n          </p>\n        </div>\n      </div>\n      <Table\n        className=\"min-w-full table-auto \"\n        Header={() =>\n          parameters.length !== 0 ? (\n            <tr className=\"bg-primary-900\">\n              {parameters.map((p, key) => (\n                <th key={key} className=\"px-4 py-2\">\n                  <span className=\"text-white\">{p.name + ' ' + p.unit}</span>\n                </th>\n              ))}\n            </tr>\n          ) : null\n        }\n        Tr={({ value }) =>\n          value && value.parameters ? (\n            <tr className=\"bg-white border-4 border-gray-200 text-center\">\n              {parameters.map((p, key) => {\n                return p.name === 'Date' ? (\n                  <td className=\"px-4 py-2\" key={key}>\n                    <span>{EpochToDate(value.epoch).toLocaleString()}</span>\n                  </td>\n                ) : (\n                  <td className=\"px-4 py-2\" key={key}>\n                    <span>{value.parameters[p.label]}</span>\n                  </td>\n                );\n              })}\n            </tr>\n          ) : null\n        }\n        data={props.previousData}\n        pagination={{\n          itemsPerPage: 100,\n          onPageChange: (page) => {\n            props.setCurrentPage(page);\n          },\n          page: props.currentPage,\n          totalCount: props.count,\n          withText: true,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default DataTable;\n","import { useState, useEffect } from 'react';\n\nimport { getParams } from './deviceParameters';\nimport { CardValue } from '../../components';\n\nconst ActualDetails = (props) => {\n  const [parameters, setParameters] = useState([]);\n\n  useEffect(() => {\n    if (props.DetailType) {\n      //   console.log(props.data);\n      const params = getParams(props.DetailType);\n      setParameters(params);\n    }\n  }, [props]);\n\n  return (\n    <div>\n      {parameters.length !== 0 ? (\n        <div className=\"flex flex-row justify-start flex-wrap\">\n          {parameters.map((p, index) =>\n            p.name !== 'Date' && props.data[0] ? (\n              <CardValue\n                key={index}\n                title={p.name}\n                value={props.data[0].parameters[p.label]}\n                unit={p.unit}\n                info={p.description}\n                className=\"w-full flex sm:w-1/3 md:w-1/4 lg:w-1/5 \"\n              />\n            ) : null,\n          )}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ActualDetails;\n","const toString = Object.prototype.toString;\r\n\r\nexport default function isAnyArray(object) {\r\n  return toString.call(object).endsWith('Array]');\r\n}\r\n","import isArray from 'is-any-array';\n\nfunction min(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var minValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\n\nfunction max(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var maxValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","export const GAUSSIAN_EXP_FACTOR = -4 * Math.LN2;\nexport const ROOT_PI_OVER_LN2 = Math.sqrt(Math.PI / Math.LN2);\nexport const ROOT_THREE = Math.sqrt(3);\nexport const ROOT_2LN2 = Math.sqrt(2 * Math.LN2);\nexport const ROOT_2LN2_MINUS_ONE = Math.sqrt(2 * Math.LN2) - 1;\n","// https://en.wikipedia.org/wiki/Error_function#Inverse_functions\n// This code yields to a good approximation\n\n// If needed a better implementation using polynomial can be found on https://en.wikipedia.org/wiki/Error_function#Inverse_functions\n\nexport default function erfinv(x) {\n  let a = 0.147;\n  if (x === 0) return 0;\n  let ln1MinusXSqrd = Math.log(1 - x * x);\n  let lnEtcBy2Plus2 = ln1MinusXSqrd / 2 + 2 / (Math.PI * a);\n  let firstSqrt = Math.sqrt(lnEtcBy2Plus2 ** 2 - ln1MinusXSqrd / a);\n  let secondSqrt = Math.sqrt(firstSqrt - lnEtcBy2Plus2);\n  return secondSqrt * (x > 0 ? 1 : -1);\n}\n","import {\n  ROOT_2LN2,\n  GAUSSIAN_EXP_FACTOR,\n  ROOT_PI_OVER_LN2,\n} from '../util/constants';\nimport erfinv from '../util/erfinv';\n\nexport class Gaussian {\n  /**\n   * @param {object} [options = {}]\n   * @param {number} [options.height=4*LN2/(PI*FWHM)] Define the height of the peak, by default area=1 (normalized)\n   * @param {number} [options.fwhm = 500] - Full Width at Half Maximum in the number of points in FWHM.\n   * @param {number} [options.sd] - Standard deviation, if it's defined options.fwhm will be ignored and the value will be computed sd * Math.sqrt(8 * Math.LN2);\n   */\n  constructor(options = {}) {\n    this.fwhm = options.sd\n      ? Gaussian.widthToFWHM(2 * options.sd)\n      : options.fwhm\n      ? options.fwhm\n      : 500;\n    this.height =\n      options.height === undefined\n        ? Math.sqrt(-GAUSSIAN_EXP_FACTOR / Math.PI) / this.fwhm\n        : options.height;\n  }\n  /**\n   * Calculate a gaussian shape\n   * @param {object} [options = {}]\n   * @param {number} [options.factor = 6] - Number of time to take fwhm to calculate length. Default covers 99.99 % of area.\n   * @param {number} [options.length = fwhm * factor + 1] - total number of points to calculate\n   * @return {Float64Array} y values\n   */\n\n  getData(options = {}) {\n    let { length, factor = this.getFactor() } = options;\n\n    if (!length) {\n      length = Math.min(Math.ceil(this.fwhm * factor), Math.pow(2, 25) - 1);\n      if (length % 2 === 0) length++;\n    }\n\n    const center = (length - 1) / 2;\n    const data = new Float64Array(length);\n    for (let i = 0; i <= center; i++) {\n      data[i] = this.fct(i - center) * this.height;\n      data[length - 1 - i] = data[i];\n    }\n\n    return data;\n  }\n\n  /**\n   * Return a parameterized function of a gaussian shape (see README for equation).\n   * @param {number} x - x value to calculate.\n   * @returns {number} - the y value of gaussian with the current parameters.\n   */\n  fct(x) {\n    return Gaussian.fct(x, this.fwhm);\n  }\n\n  /**\n   * Calculate the number of times FWHM allows to reach a specific area coverage\n   * @param {number} [area=0.9999]\n   * @returns {number}\n   */\n  getFactor(area = 0.9999) {\n    return Gaussian.getFactor(area);\n  }\n\n  /**\n   * Calculate the area of the shape.\n   * @returns {number} - returns the area.\n   */\n\n  getArea() {\n    return Gaussian.getArea(this.fwhm, { height: this.height });\n  }\n\n  /**\n   * Compute the value of Full Width at Half Maximum (FWHM) from the width between the inflection points.\n   * //https://mathworld.wolfram.com/GaussianFunction.html\n   * @param {number} width - Width between the inflection points\n   * @returns {number} fwhm\n   */\n  widthToFWHM(width) {\n    //https://mathworld.wolfram.com/GaussianFunction.html\n    return Gaussian.widthToFWHM(width);\n  }\n\n  /**\n   * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n   * //https://mathworld.wolfram.com/GaussianFunction.html\n   * @param {number} fwhm - Full Width at Half Maximum.\n   * @returns {number} width\n   */\n  fwhmToWidth(fwhm = this.fwhm) {\n    return Gaussian.fwhmToWidth(fwhm);\n  }\n\n  /**\n   * set a new full width at half maximum\n   * @param {number} fwhm - full width at half maximum\n   */\n  setFWHM(fwhm) {\n    this.fwhm = fwhm;\n  }\n\n  /**\n   * set a new height\n   * @param {number} height - The maximal intensity of the shape.\n   */\n  setHeight(height) {\n    this.height = height;\n  }\n}\n\n/**\n * Return a parameterized function of a gaussian shape (see README for equation).\n * @param {number} x - x value to calculate.\n * @param {number} fwhm - full width half maximum\n * @returns {number} - the y value of gaussian with the current parameters.\n */\nGaussian.fct = function fct(x, fwhm = 500) {\n  return Math.exp(GAUSSIAN_EXP_FACTOR * Math.pow(x / fwhm, 2));\n};\n\n/**\n * Compute the value of Full Width at Half Maximum (FWHM) from the width between the inflection points.\n * //https://mathworld.wolfram.com/GaussianFunction.html\n * @param {number} width - Width between the inflection points\n * @returns {number} fwhm\n */\nGaussian.widthToFWHM = function widthToFWHM(width) {\n  return width * ROOT_2LN2;\n};\n\n/**\n * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n * //https://mathworld.wolfram.com/GaussianFunction.html\n * @param {number} fwhm - Full Width at Half Maximum.\n * @returns {number} width\n */\nGaussian.fwhmToWidth = function fwhmToWidth(fwhm) {\n  return fwhm / ROOT_2LN2;\n};\n\n/**\n * Calculate the area of a specific shape.\n * @param {number} fwhm - Full width at half maximum.\n * @param {object} [options = {}] - options.\n * @param {number} [options.height = 1] - Maximum y value of the shape.\n * @returns {number} - returns the area of the specific shape and parameters.\n */\n\nGaussian.getArea = function getArea(fwhm, options = {}) {\n  let { height = 1 } = options;\n  return (height * ROOT_PI_OVER_LN2 * fwhm) / 2;\n};\n\n/**\n * Calculate the number of times FWHM allows to reach a specific area coverage.\n * @param {number} [area=0.9999]\n * @returns {number}\n */\nGaussian.getFactor = function getFactor(area = 0.9999) {\n  return Math.sqrt(2) * erfinv(area);\n};\n","import { ROOT_THREE } from '../util/constants';\n\nexport class Lorentzian {\n  /**\n   * @param {object} [options = {}]\n   * @param {number} [options.height=2/(PI*FWHM)] Define the height of the peak, by default area=1 (normalized)\n   * @param {number} [options.fwhm = 500] - Full Width at Half Maximum in the number of points in FWHM.\n   * @param {number} [options.sd] - Standard deviation, if it's defined options.fwhm will be ignored and the value will be computed sd * Math.sqrt(8 * Math.LN2);\n   */\n  constructor(options = {}) {\n    this.fwhm = options.fwhm === undefined ? 500 : options.fwhm;\n    this.height =\n      options.height === undefined ? 2 / Math.PI / this.fwhm : options.height;\n  }\n  /**\n   * Calculate a lorentzian shape\n   * @param {object} [options = {}]\n   * @param {number} [options.factor = Math.tan(Math.PI * (0.9999 - 0.5))] - Number of time to take fwhm to calculate length. Default covers 99.99 % of area.\n   * @param {number} [options.length = fwhm * factor + 1] - total number of points to calculate\n   * @return {Float64Array} y values\n   */\n  getData(options = {}) {\n    let { length, factor = this.getFactor() } = options;\n\n    if (!length) {\n      length = Math.min(Math.ceil(this.fwhm * factor), Math.pow(2, 25) - 1);\n      if (length % 2 === 0) length++;\n    }\n\n    const center = (length - 1) / 2;\n    const data = new Float64Array(length);\n    for (let i = 0; i <= center; i++) {\n      data[i] = this.fct(i - center) * this.height;\n      data[length - 1 - i] = data[i];\n    }\n    return data;\n  }\n\n  /**\n   * Return a parameterized function of a lorentzian shape (see README for equation).\n   * @param {number} x - x value to calculate.\n   * @returns {number} - the y value of lorentzian with the current parameters.\n   */\n  fct(x) {\n    return Lorentzian.fct(x, this.fwhm);\n  }\n\n  /**\n   * Calculate the number of times FWHM allows to reach a specific area coverage\n   * @param {number} [area=0.9999]\n   * @returns {number}\n   */\n  getFactor(area = 0.9999) {\n    return Lorentzian.getFactor(area);\n  }\n\n  /**\n   * Calculate the area of the shape.\n   * @returns {number} - returns the area.\n   */\n\n  getArea() {\n    return Lorentzian.getArea(this.fwhm, { height: this.height });\n  }\n\n  /**\n   * Compute the value of width between the inflection points of a specific shape from Full Width at Half Maximum (FWHM).\n   * //https://mathworld.wolfram.com/LorentzianFunction.html\n   * @param {number} [fwhm] - Full Width at Half Maximum.\n   * @returns {number} width between the inflection points\n   */\n  fwhmToWidth(fwhm = this.fwhm) {\n    return Lorentzian.fwhmToWidth(fwhm);\n  }\n\n  /**\n   * Compute the value of Full Width at Half Maximum (FWHM) of a specific shape from the width between the inflection points.\n   * //https://mathworld.wolfram.com/LorentzianFunction.html\n   * @param {number} [width] Width between the inflection points\n   * @returns {number} fwhm\n   */\n  widthToFWHM(width) {\n    return Lorentzian.widthToFWHM(width);\n  }\n  /**\n   * set a new full width at half maximum\n   * @param {number} fwhm - full width at half maximum\n   */\n  setFWHM(fwhm) {\n    this.fwhm = fwhm;\n  }\n\n  /**\n   * set a new height\n   * @param {number} height - The maximal intensity of the shape.\n   */\n  setHeight(height) {\n    this.height = height;\n  }\n}\n\n/**\n * Return a parameterized function of a gaussian shape (see README for equation).\n * @param {number} x - x value to calculate.\n * @param {number} fwhm - full width half maximum\n * @returns {number} - the y value of gaussian with the current parameters.\n */\nLorentzian.fct = function fct(x, fwhm) {\n  const squareFWHM = fwhm * fwhm;\n  return squareFWHM / (4 * Math.pow(x, 2) + squareFWHM);\n};\n\n/**\n * Compute the value of width between the inflection points of a specific shape from Full Width at Half Maximum (FWHM).\n * //https://mathworld.wolfram.com/LorentzianFunction.html\n * @param {number} [fwhm] - Full Width at Half Maximum.\n * @returns {number} width between the inflection points\n */\nLorentzian.fwhmToWidth = function fwhmToWidth(fwhm) {\n  return fwhm / ROOT_THREE;\n};\n\n/**\n * Compute the value of Full Width at Half Maximum (FWHM) of a specific shape from the width between the inflection points.\n * //https://mathworld.wolfram.com/LorentzianFunction.html\n * @param {number} [width] Width between the inflection points\n * @returns {number} fwhm\n */\nLorentzian.widthToFWHM = function widthToFWHM(width) {\n  return width * ROOT_THREE;\n};\n\n/**\n * Calculate the area of a specific shape.\n * @param {number} fwhm - Full width at half maximum.\n * @param {*} [options = {}] - options.\n * @param {number} [options.height = 1] - Maximum y value of the shape.\n * @returns {number} - returns the area of the specific shape and parameters.\n */\nLorentzian.getArea = function getArea(fwhm, options = {}) {\n  let { height = 1 } = options;\n\n  return (height * Math.PI * fwhm) / 2;\n};\n\n/**\n * Calculate the number of times FWHM allows to reach a specific area coverage\n * @param {number} [area=0.9999]\n * @returns {number}\n */\nLorentzian.getFactor = function getFactor(area = 0.9999) {\n  return 2 * Math.tan(Math.PI * (area - 0.5));\n};\n","import {\n  GAUSSIAN_EXP_FACTOR,\n  ROOT_2LN2_MINUS_ONE,\n  ROOT_PI_OVER_LN2,\n} from '../util/constants';\n\nimport { Gaussian } from './Gaussian';\nimport { Lorentzian } from './Lorentzian';\n\nexport class PseudoVoigt {\n  /**\n   * @param {object} [options={}]\n   * @param {number} [options.height=1/(mu*FWHM/sqrt(4*LN2/PI)+(1-mu)*fwhm*PI*0.5)] Define the height of the peak, by default area=1 (normalized)\n   * @param {number} [options.fwhm=500] - Full Width at Half Maximum in the number of points in FWHM.\n   * @param {number} [options.mu=0.5] - ratio of gaussian contribution.\n   */\n\n  constructor(options = {}) {\n    this.mu = options.mu === undefined ? 0.5 : options.mu;\n    this.fwhm = options.fwhm === undefined ? 500 : options.fwhm;\n    this.height =\n      options.height === undefined\n        ? 1 /\n          ((this.mu / Math.sqrt(-GAUSSIAN_EXP_FACTOR / Math.PI)) * this.fwhm +\n            ((1 - this.mu) * this.fwhm * Math.PI) / 2)\n        : options.height;\n  }\n\n  /**\n   * Calculate a linear combination of gaussian and lorentzian function width an same full width at half maximum\n   * @param { object } [options = {}]\n   * @param { number } [options.factor = 2 * Math.tan(Math.PI * (0.9999 - 0.5))] - Number of time to take fwhm in the calculation of the length.Default covers 99.99 % of area.\n   * @param { number } [options.length = fwhm * factor + 1] - total number of points to calculate\n   * @return { object } - { fwhm, data<Float64Array>} - An with the number of points at half maximum and the array of y values covering the 99.99 % of the area.\n   */\n\n  getData(options = {}) {\n    let { length, factor = this.getFactor() } = options;\n    if (!length) {\n      length = Math.ceil(this.fwhm * factor);\n      if (length % 2 === 0) length++;\n    }\n\n    const center = (length - 1) / 2;\n\n    let data = new Float64Array(length);\n    for (let i = 0; i <= center; i++) {\n      data[i] = this.fct(i - center) * this.height;\n      data[length - 1 - i] = data[i];\n    }\n\n    return data;\n  }\n\n  /**\n   * Return a parameterized function of a linear combination of Gaussian and Lorentzian shapes where the full width at half maximum are the same for both kind of shapes (see README for equation).\n   * @param {number} [x] x value to calculate.\n   * @returns {number} - the y value of a pseudo voigt with the current parameters.\n   */\n\n  fct(x) {\n    return PseudoVoigt.fct(x, this.fwhm, this.mu);\n  }\n\n  /**\n   * Calculate the number of times FWHM allows to reach a specific area coverage\n   * @param {number} [area=0.9999] - required area to be coverage\n   * @param {number} [mu=this.mu] - ratio of gaussian contribution.\n   * @returns {number}\n   */\n  getFactor(area = 0.9999, mu = this.mu) {\n    return PseudoVoigt.getFactor(area, mu);\n  }\n\n  /**\n   * Calculate the area of the shape.\n   * @returns {number} - returns the area.\n   */\n  getArea() {\n    return PseudoVoigt.getArea(this.fwhm, { height: this.height, mu: this.mu });\n  }\n\n  /**\n   * Compute the value of Full Width at Half Maximum (FMHM) from width between the inflection points.\n   * @param {number} width - width between the inflection points\n   * @param {number} [mu = 0.5] - ratio of gaussian contribution.\n   * @returns {number} Full Width at Half Maximum (FMHM).\n   */\n  widthToFWHM(width, mu) {\n    return PseudoVoigt.widthToFWHM(width, mu);\n  }\n  /**\n   * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n   * @param {number} fwhm - Full Width at Half Maximum.\n   * @param {number} [mu] - ratio of gaussian contribution.\n   * @returns {number} width between the inflection points.\n   */\n  fwhmToWidth(fwhm = this.fwhm, mu = this.mu) {\n    return PseudoVoigt.fwhmToWidth(fwhm, mu);\n  }\n\n  /**\n   * set a new full width at half maximum\n   * @param {number} fwhm - full width at half maximum\n   */\n  setFWHM(fwhm) {\n    this.fwhm = fwhm;\n  }\n\n  /**\n   * set a new height\n   * @param {number} height - The maximal intensity of the shape.\n   */\n  setHeight(height) {\n    this.height = height;\n  }\n\n  /**\n   * set a new mu\n   * @param {number} mu - ratio of gaussian contribution.\n   */\n  setMu(mu) {\n    this.mu = mu;\n  }\n}\n\n/**\n * Return a parameterized function of a gaussian shape (see README for equation).\n * @param {number} x - x value to calculate.\n * @param {number} fwhm - full width half maximum\n * @param {number} [mu=0.5] - ratio of gaussian contribution.\n * @returns {number} - the y value of gaussian with the current parameters.\n */\nPseudoVoigt.fct = function fct(x, fwhm, mu = 0.5) {\n  return (1 - mu) * Lorentzian.fct(x, fwhm) + mu * Gaussian.fct(x, fwhm);\n};\n\n/**\n * Compute the value of Full Width at Half Maximum (FMHM) from width between the inflection points.\n * @param {number} width - width between the inflection points\n * @param {number} [mu = 0.5] - ratio of gaussian contribution.\n * @returns {number} Full Width at Half Maximum (FMHM).\n */\nPseudoVoigt.widthToFWHM = function widthToFWHM(width, mu = 0.5) {\n  return width * (mu * ROOT_2LN2_MINUS_ONE + 1);\n};\n/**\n * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n * @param {number} fwhm - Full Width at Half Maximum.\n * @param {number} [mu = 0.5] - ratio of gaussian contribution.\n * @returns {number} width between the inflection points.\n */\nPseudoVoigt.fwhmToWidth = function fwhmToWidth(fwhm, mu = 0.5) {\n  return fwhm / (mu * ROOT_2LN2_MINUS_ONE + 1);\n};\n\n/**\n * Calculate the area of a specific shape.\n * @param {number} fwhm - Full width at half maximum.\n * @param {*} [options = {}] - options.\n * @param {number} [options.height = 1] - Maximum y value of the shape.\n * @param {number} [options.mu = 0.5] - ratio of gaussian contribution.\n * @returns {number} - returns the area of the specific shape and parameters.\n */\nPseudoVoigt.getArea = function getArea(fwhm, options = {}) {\n  let { height = 1, mu = 0.5 } = options;\n  return (fwhm * height * (mu * ROOT_PI_OVER_LN2 + (1 - mu) * Math.PI)) / 2;\n};\n\n/**\n * Calculate the number of times FWHM allows to reach a specific area coverage\n * @param {number} [area=0.9999] - required area to be coverage\n * @param {number} [mu=this.mu] - ratio of gaussian contribution.\n * @returns {number}\n */\nPseudoVoigt.getFactor = function getFactor(area = 0.9999, mu = 0.5) {\n  return mu < 1 ? Lorentzian.getFactor(area) : Gaussian.getFactor(area);\n};\n","import { ROOT_2LN2, GAUSSIAN_EXP_FACTOR } from '../util/constants';\nimport erfinv from '../util/erfinv';\n\nlet axis = ['x', 'y'];\n\nexport class Gaussian2D {\n  /**\n   * @param {object} [options = {}]\n   * @param {number} [options.height=4*LN2/(PI*xFWHM*yFWHM)] Define the height of the peak, by default area=1 (normalized).\n   * @param {number} [options.fwhm = 500] - Full Width at Half Maximum in the number of points in FWHM used if x or y has not the fwhm property.\n   * @param {object} [options.x] - Options for x axis.\n   * @param {number} [options.x.fwhm = fwhm] - Full Width at Half Maximum in the number of points in FWHM for x axis.\n   * @param {number} [options.x.sd] - Standard deviation for x axis, if it's defined options.x.fwhm will be ignored and the value will be computed sd * Math.sqrt(8 * Math.LN2);\n   * @param {object} [options.y] - Options for y axis.\n   * @param {number} [options.y.fwhm = fwhm] - Full Width at Half Maximum in the number of points in FWHM for y axis.\n   * @param {number} [options.y.sd] - Standard deviation for y axis, if it's defined options.y.fwhm will be ignored and the value will be computed sd * Math.sqrt(8 * Math.LN2);\n   */\n  constructor(options = {}) {\n    let { fwhm: globalFWHM = 500 } = options;\n\n    for (let i of axis) {\n      let fwhm;\n      if (!options[i]) {\n        fwhm = globalFWHM;\n      } else {\n        fwhm = options[i].sd\n          ? Gaussian2D.widthToFWHM(2 * options[i].sd)\n          : options[i].fwhm || globalFWHM;\n      }\n      this[i] = { fwhm };\n    }\n\n    this.height =\n      options.height === undefined\n        ? -GAUSSIAN_EXP_FACTOR / Math.PI / this.x.fwhm / this.y.fwhm\n        : options.height;\n  }\n  /**\n   * Calculate a Gaussian2D shape\n   * @param {object} [options = {}]\n   * @param {number} [options.factor] - Number of time to take fwhm to calculate length. Default covers 99.99 % of area.\n   * @param {object} [options.x] - parameter for x axis.\n   * @param {number} [options.x.length=fwhm*factor+1] - length on x axis.\n   * @param {number} [options.x.factor=factor] - Number of time to take fwhm to calculate length. Default covers 99.99 % of area.\n   * @param {object} [options.y] - parameter for y axis.\n   * @param {number} [options.y.length=fwhm*factor+1] - length on y axis.\n   * @param {number} [options.y.factor=factor] - Number of time to take fwhm to calculate length. Default covers 99.99 % of area.\n   * @return {Array<Float64Array>} - z values.\n   */\n\n  getData(options = {}) {\n    let { x = {}, y = {}, factor = this.getFactor(), length } = options;\n\n    let xLength = x.length || length;\n    if (!xLength) {\n      let { factor: xFactor = factor } = x;\n      xLength = Math.min(Math.ceil(this.x.fwhm * xFactor), Math.pow(2, 25) - 1);\n      if (xLength % 2 === 0) xLength++;\n    }\n\n    let yLength = y.length || length;\n    if (!yLength) {\n      let { factor: yFactor = factor } = y;\n      yLength = Math.min(Math.ceil(this.y.fwhm * yFactor), Math.pow(2, 25) - 1);\n      if (yLength % 2 === 0) yLength++;\n    }\n\n    const xCenter = (xLength - 1) / 2;\n    const yCenter = (yLength - 1) / 2;\n    const data = new Array(xLength);\n    for (let i = 0; i < xLength; i++) {\n      data[i] = new Array(yLength);\n    }\n\n    for (let i = 0; i < xLength; i++) {\n      for (let j = 0; j < yLength; j++) {\n        data[i][j] = this.fct(i - xCenter, j - yCenter) * this.height;\n      }\n    }\n\n    return data;\n  }\n\n  /**\n   * Return the intensity value of a 2D gaussian shape (see README for equation).\n   * @param {number} x - x value to calculate.\n   * @param {number} y - y value to calculate.\n   * @returns {number} - the z value of bi-dimensional gaussian with the current parameters.\n   */\n  fct(x, y) {\n    return Gaussian2D.fct(x, y, this.x.fwhm, this.y.fwhm);\n  }\n\n  /**\n   * Calculate the number of times FWHM allows to reach a specific volume coverage.\n   * @param {number} [volume=0.9999]\n   * @returns {number}\n   */\n  getFactor(volume = 0.9999) {\n    return Gaussian2D.getFactor(volume);\n  }\n\n  /**\n   * Calculate the volume of the shape.\n   * @returns {number} - returns the volume.\n   */\n\n  getVolume() {\n    return Gaussian2D.getVolume(this.x.fwhm, this.y.fwhm, {\n      height: this.height,\n    });\n  }\n\n  /**\n   * Compute the value of Full Width at Half Maximum (FWHM) from the width between the inflection points.\n   * //https://mathworld.wolfram.com/Gaussian2DFunction.html\n   * @param {number} width - Width between the inflection points\n   * @returns {number} fwhm\n   */\n  widthToFWHM(width) {\n    //https://mathworld.wolfram.com/Gaussian2DFunction.html\n    return Gaussian2D.widthToFWHM(width);\n  }\n\n  /**\n   * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n   * //https://mathworld.wolfram.com/Gaussian2DFunction.html\n   * @param {number} fwhm - Full Width at Half Maximum.\n   * @returns {number} width\n   */\n  fwhmToWidth(fwhm = this.x.fwhm) {\n    return Gaussian2D.fwhmToWidth(fwhm);\n  }\n\n  /**\n   * set a new full width at half maximum\n   * @param {number} fwhm - full width at half maximum\n   * @param {string|Array<string>} axisLabel - label of axis, if it is undefined fwhm is set to both axis.\n   */\n  setFWHM(fwhm, axisLabel) {\n    if (!axisLabel) axisLabel = axis;\n    if (!Array.isArray(axisLabel)) axisLabel = [axisLabel];\n    for (let i of axisLabel) {\n      let axisName = i.toLowerCase();\n      if (axisName !== 'y' && axisName !== 'x') {\n        throw new Error('axis label should be x or y');\n      }\n      this[axisName].fwhm = fwhm;\n    }\n  }\n\n  /**\n   * set a new height\n   * @param {number} height - The maximal intensity of the shape.\n   */\n  setHeight(height) {\n    this.height = height;\n  }\n}\n\n/**\n * Return a parameterized function of a Gaussian2D shape (see README for equation).\n * @param {number} x - x value to calculate.\n * @param {number} y - y value to calculate.\n * @param {number} fwhmX - full width half maximum in the x axis.\n * @param {number} fwhmY - full width half maximum in the y axis.\n * @returns {number} - the z value of bi-dimensional gaussian with the current parameters.\n */\nGaussian2D.fct = function fct(x, y, xFWHM = 500, yFWHM = 500) {\n  return Math.exp(\n    GAUSSIAN_EXP_FACTOR * (Math.pow(x / xFWHM, 2) + Math.pow(y / yFWHM, 2)),\n  );\n};\n\n/**\n * Compute the value of Full Width at Half Maximum (FWHM) from the width between the inflection points.\n * //https://mathworld.wolfram.com/Gaussian2DFunction.html\n * @param {number} width - Width between the inflection points\n * @returns {number} fwhm\n */\nGaussian2D.widthToFWHM = function widthToFWHM(width) {\n  return width * ROOT_2LN2;\n};\n\n/**\n * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n * //https://mathworld.wolfram.com/Gaussian2DFunction.html\n * @param {number} fwhm - Full Width at Half Maximum.\n * @returns {number} width\n */\nGaussian2D.fwhmToWidth = function fwhmToWidth(fwhm) {\n  return fwhm / ROOT_2LN2;\n};\n\n/**\n * Calculate the volume of a specific shape.\n * @param {number} xFWHM - Full width at half maximum for x axis.\n * @param {number} yFWHM - Full width at half maximum for y axis.\n * @param {object} [options = {}] - options.\n * @param {number} [options.height = 1] - Maximum z value of the shape.\n * @returns {number} - returns the area of the specific shape and parameters.\n */\n\nGaussian2D.getVolume = function getVolume(xFWHM, yFWHM, options = {}) {\n  let { height = 1 } = options;\n  return (height * Math.PI * xFWHM * yFWHM) / Math.LN2 / 4;\n};\n\n/**@TODO look for a better factor\n * Calculate the number of times FWHM allows to reach a specific volume coverage.\n * @param {number} [volume=0.9999]\n * @returns {number}\n */\nGaussian2D.getFactor = function getFactor(volume = 0.9999) {\n  return Math.sqrt(2) * erfinv(volume);\n};\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","const indent = ' '.repeat(2);\nconst indentData = ' '.repeat(4);\n\nexport function inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\n\nexport function inspectMatrixWithOptions(matrix, options = {}) {\n  const { maxRows = 15, maxColumns = 10, maxNumSize = 8 } = options;\n  return `${matrix.constructor.name} {\n${indent}[\n${indentData}${inspectData(matrix, maxRows, maxColumns, maxNumSize)}\n${indent}]\n${indent}rows: ${matrix.rows}\n${indent}columns: ${matrix.columns}\n}`;\n}\n\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j), maxNumSize));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indentData}`);\n}\n\nfunction formatNumber(num, maxNumSize) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.slice(eIndex);\n  return exponential.slice(0, maxNumSize - e.length) + e;\n}\n","/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices),\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  let rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  let columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n\nexport function checkNonEmpty(matrix) {\n  if (matrix.isEmpty()) {\n    throw new Error('Empty matrix has no elements to index');\n  }\n}\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","import rescale from 'ml-array-rescale';\n\nimport { inspectMatrix, inspectMatrixWithOptions } from './inspect';\nimport { installMathOperations } from './mathOperations';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkIndices,\n  checkNonEmpty,\n} from './util';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isEmpty() {\n    return this.rows === 0 || this.columns === 0;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      if (row.length > 0) {\n        rescale(row, { min, max, output: row });\n      }\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      if (column.length) {\n        rescale(column, {\n          min: min,\n          max: max,\n          output: column,\n        });\n      }\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  kroneckerSum(other) {\n    other = Matrix.checkMatrix(other);\n    if (!this.isSquare() || !other.isSquare()) {\n      throw new Error('Kronecker Sum needs two Square Matrices');\n    }\n    let m = this.rows;\n    let n = other.rows;\n    let AxI = this.kroneckerProduct(Matrix.eye(n, n));\n    let IxB = Matrix.eye(m, m).kroneckerProduct(other);\n    return AxI.add(IxB);\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (matrix.isEmpty()) {\n      return this;\n    }\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    let indices = checkIndices(this, rowIndices, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < indices.row.length; i++) {\n      let rowIndex = indices.row[i];\n      for (let j = 0; j < indices.column.length; j++) {\n        let columnIndex = indices.column[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  toString(options) {\n    return inspectMatrixWithOptions(this, options);\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[\n    Symbol.for('nodejs.util.inspect.custom')\n  ] = inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      // eslint-disable-next-line no-constructor-return\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows >= 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns >= 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = nRows ? arrayData[0].length : 0;\n      if (typeof nColumns !== 'number') {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n","/* eslint-disable no-unused-vars */\nimport { useState, useEffect } from 'react';\nimport { Axis, LineSeries, Plot, Heading, Legend } from 'react-plot';\nimport { xBoxPlot } from 'ml-spectra-processing';\n\nimport { Dropdown } from '../../components/tailwind-ui';\nimport { getSeries } from './deviceParameters';\n\nconst DetailsPlot = (props) => {\n  const [series, setSeries] = useState([]);\n  const [data, setData] = useState([]);\n  const [allData, setAllData] = useState([]);\n  const [lines, setLines] = useState();\n  const [type, setType] = useState();\n  const [groupedBy, setGroupedBy] = useState('');\n\n  useEffect(() => {\n    setType(props.DetailType);\n  }, [props.DetailType]);\n\n  useEffect(() => {\n    /*var x = xBoxPlot([1,2,3,4,5,6])\n      console.log(x)\n      console.log(type)*/\n    if (type) {\n      setSeries([]);\n      setSeries(getSeries(type));\n    }\n  }, [type]);\n\n  useEffect(() => {\n    if (props.allData.length !== 0) {\n      setAllData(props.allData);\n    }\n  }, [props]);\n\n  const sameHour = (d1, d2) => {\n    console.log(d1.toLocaleString());\n    console.log(d2.toLocaleString());\n    console.log(\n      d1.getFullYear() === d2.getFullYear() &&\n        d1.getMonth() === d2.getMonth() &&\n        d1.getDate() === d2.getDate() &&\n        d1.getHours() === d2.getHours(),\n    );\n    return (\n      d1.getFullYear() === d2.getFullYear() &&\n      d1.getMonth() === d2.getMonth() &&\n      d1.getDate() === d2.getDate() &&\n      d1.getHours() === d2.getHours()\n    );\n  };\n\n  const sameDay = (d1, d2) => {\n    return (\n      d1.getFullYear() === d2.getFullYear() &&\n      d1.getMonth() === d2.getMonth() &&\n      d1.getDate() === d2.getDate()\n    );\n  };\n\n  const sameMonth = (d1, d2) => {\n    return (\n      d1.getFullYear() === d2.getFullYear() && d1.getMonth() === d2.getMonth()\n    );\n  };\n\n  const sameYear = (d1, d2) => {\n    return d1.getFullYear() === d2.getFullYear();\n  };\n\n  const EpochToDate = (epoch) => {\n    if (epoch < 10000000000) epoch *= 1000; // convert to milliseconds (Epoch is usually expressed in seconds, but Javascript uses Milliseconds)\n    let _epoch = epoch + new Date().getTimezoneOffset() * -1; //for timeZone\n    return new Date(_epoch);\n  };\n\n  useEffect(() => {\n    console.log(series);\n    var t = [];\n    if (series && series.length !== 0)\n      series.forEach((s) => {\n        var table = [];\n        allData.forEach((d, key) => {\n          console.log(key /*EpochToDate(d.epoch).toLocaleString()*/);\n          if (d.parameters)\n            table.push({\n              x: key /*EpochToDate(d.epoch)*/,\n              y: d.parameters[s.label],\n            });\n        });\n\n        console.log(table);\n        return t.push({ label: s.name, data: table });\n      });\n    setData(t);\n    console.log(t[0]);\n  }, [series, allData]);\n\n  useEffect(() => {\n    setLines(getSeriesLines());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, type]);\n\n  const getDataOfSeries = (label) => {\n    var seriesData = data.filter((d) => d.label === label)[0]\n      ? data.filter((d) => d.label === label)[0].data\n      : null;\n\n    /*if(seriesData.length!==0){\n        var groupedDataTable=[]\n        var minimalDate = /*EpochToDate(*/ //seriesData[0].x//)\n    /*var maximalDate = /*EpochToDate(*/ //seriesData[seriesData.length-1].x//)\n\n    //if(groupedBy==='Hour'){\n    /*var lastDate = minimalDate\n          var stop = false\n          while( lastDate.getTime()!==maximalDate.getTime() && !stop){\n            console.log('')\n            \n            var dataTable = []\n            seriesData.map(\n              d=>{\n                console.log(sameHour(d.x,lastDate))\n                if(sameHour(d.x,lastDate)) {\n                  dataTable.push(d)\n                }\n              })\n            console.log(dataTable)\n            if(dataTable.length >= 5){\n              var t = dataTable.map(d=>d.y)\n              groupedDataTable.push(xBoxPlot(t))\n            } \n            if(dataTable.length===0){\n              stop=true\n            }\n            console.log(lastDate)\n            var next = seriesData.filter(\n              (d)=>{\n                 return !sameHour(d.x,lastDate) && sameDay(d.x,lastDate)\n              })[0]\n\n              var xd= new Date()\n            if(next){\n              console.log(next.x)\n              lastDate = seriesData.filter(d=>\n                (d.x.getHours()>lastDate.getHours()) && (sameDay(d.x,lastDate) )\n              )[0]?seriesData.filter(d=>\n                (d.x.getHours()>lastDate.getHours()) && (sameDay(d.x,lastDate) )\n              )[0].x:xd\n              console.log(lastDate)\n            }\n              if(lastDate instanceof Date && lastDate===xd){\n                stop=true\n              }\n            //lastDate=new Date(lastDate.getFullYear(),lastDate.getMonth(),lastDate.getDate(),lastDate.getHours()+1)\n          }\n\n          console.log(groupedDataTable)\n          \n        //}\n      }*/\n\n    if (groupedBy === 'Day') {\n    }\n    if (groupedBy === 'Month') {\n    }\n    if (groupedBy === 'Year') {\n    }\n\n    var fullSeries = [\n      {\n        x: '',\n        min: '',\n        max: '',\n        Q1: '',\n        Q2: '',\n        Q3: '',\n      },\n    ];\n    return seriesData;\n  };\n\n  const getSeriesLines = () => {\n    var lines = [];\n\n    if (series && series.length !== 0) {\n      series.forEach((s, key) => {\n        var dataItems = getDataOfSeries(s.name);\n\n        lines.push(\n          <LineSeries\n            key={key}\n            data={dataItems}\n            xAxis=\"x\"\n            yAxis=\"y\"\n            lineStyle={{ stroke: s.color, strokeWidth: 2 }}\n            label={s.name}\n            displayMarker\n            markerShape=\"circle\"\n          />,\n        );\n      });\n    }\n    return lines;\n  };\n\n  //console.log(lines)\n\n  const data1 = [\n    { x: 0, y: 0 },\n    { x: 1, y: 2 },\n    { x: 2, y: 5 },\n    { x: 3, y: 9 },\n    { x: 4, y: 16 },\n    { x: 5, y: 22 },\n    { x: 6, y: 26 },\n    { x: 7, y: 28 },\n    { x: 10, y: 28 },\n  ];\n\n  return (\n    <div>\n      <div className=\"flex space-x-100 m-4\">\n        <div className=\"flex-1\">\n          <h2 className=\"text-2xl \">Variations Chart</h2>\n          <p className=\"text-sm text-gray-500\">\n            Chart of variations of the device.\n          </p>\n        </div>\n        <div className=\"flex-2 object-right\">\n          <Dropdown\n            onSelect={function noRefCheck() {}}\n            options={[\n              [\n                {\n                  label: '1 hour',\n                  type: 'option',\n                },\n                {\n                  label: '1 day',\n                  type: 'option',\n                },\n                {\n                  label: '1 month',\n                  type: 'option',\n                },\n                {\n                  label: '1 year',\n                  type: 'option',\n                },\n              ],\n            ]}\n            title=\"Display per\"\n          />\n        </div>\n      </div>\n\n      <div className=\"h-max flex justify-center items-center rounded-md bg-white shadow\">\n        <Plot\n          width={900}\n          height={500}\n          //margin={{ bottom: 45, left: 90, top: 40, right: 20 }}\n          margin={{ bottom: 50, left: 55, top: 20, right: 20 }}\n          seriesViewportStyle={{\n            stroke: 'black',\n            strokeWidth: 0.4,\n          }}\n        >\n          <Heading title={props.Header} />\n\n          <Axis\n            id=\"x\"\n            position=\"bottom\"\n            label=\"Time\"\n            labelSpace={25}\n            paddingEnd={0.1}\n            paddingStart={0.1}\n          />\n          <Axis\n            id=\"y\"\n            position=\"left\"\n            label=\"%\"\n            scale=\"log\"\n            labelSpace={65}\n            paddingStart={0.1}\n            paddingEnd={0.1}\n          />\n\n          {lines}\n\n          <Legend position=\"embedded\" bottom=\"80\" left=\"0\"></Legend>\n        </Plot>\n      </div>\n    </div>\n  );\n};\n\nexport default DetailsPlot;\n","import { useEffect } from 'react';\nimport DataTable from './DataTable';\nimport ActualDetails from './ActualDetails';\nimport DetailsPlot from './DetailsPlot';\n\nconst Details = (props) => {\n  useEffect(() => {\n    //console.log(props.data)\n  }, [props]);\n\n  return (\n    <div className=\"m-2 \">\n      <ActualDetails DetailType={props.DetailType} data={props.data} />\n\n      <DetailsPlot\n        allData={props.allData}\n        previousData={props.previousData}\n        DetailType={props.DetailType}\n        Header={props.DetailType + ' Variation Chart'}\n      />\n\n      <DataTable\n        currentPage={props.currentPage}\n        setCurrentPage={(p) => props.setCurrentPage(p)}\n        count={props.count}\n        previousData={props.previousData}\n        DetailType={props.DetailType}\n      />\n    </div>\n  );\n};\n\nexport default Details;\n","import { useState, useEffect } from 'react';\nimport { HorizontalNavigation } from '../../components/tailwind-ui';\n\nimport { connectDevice } from '../../services/broadCastDeviceService';\nimport { getDevice } from '../../services/devicesService';\nimport Details from './Details';\n\nconst DeviceDetails = ({ match }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const [count, setCount] = useState(0);\n\n  const [selected, setSelected] = useState({ value: 'Load', label: 'Load' });\n\n  const [data, setData] = useState([]);\n  // const [allData, setAllData] = useState([]);\n  const [previousData, setPreviousData] = useState([]);\n\n  const [deviceClient, setDeviceClient] = useState();\n  const [deviceInfos, setDeviceInfos] = useState();\n  const deviceId = `${match.params.id}`;\n\n  useEffect(() => {\n    if (deviceId) {\n      getDevice(deviceId).then((deviceInfo) => {\n        console.log(deviceInfo);\n        setDeviceInfos(deviceInfo);\n        connectDevice(deviceInfo).then((deviceClient) =>\n          setDeviceClient(deviceClient),\n        );\n      });\n    }\n    return () => deviceClient?.disconnect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [deviceId]);\n\n  useEffect(() => {\n    if (deviceClient) {\n      //getAllDataCount\n      deviceClient.getAllDataCount().then((result) => {\n        console.log('data count');\n        console.log(result);\n        setCount(result);\n      });\n      deviceClient.subscribe(\n        (message) => setData([message, ...data]),\n        (error) => console.log(error),\n      );\n      //console.log(data);\n      deviceClient.getPageData(currentPage * 10, 10).then((result) => {\n        //console.log(result);\n        setPreviousData(result);\n      });\n      // deviceClient.getAllData().then((result) => {\n      //   //console.log(result);\n      //   setAllData(result);\n      // });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [deviceClient]);\n\n  useEffect(() => {\n    if (deviceClient) {\n      deviceClient.getPageData(currentPage * 10, 10).then((result) => {\n        //console.log(result);\n        setPreviousData(result);\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPage]);\n\n  return (\n    <div\n      className=\"m-4 p-2 shadow-lg \"\n      style={{ backgroundColor: 'white', borderRadius: '10px' }}\n    >\n      <div className=\"m-4\">\n        <div className=\"p-4 border-b\">\n          <h2 className=\"text-2xl \">Device Information</h2>\n          <p className=\"text-sm text-gray-500\">Device connection details.</p>\n        </div>\n\n        <div>\n          <div className=\"md:grid md:grid-cols-2 hover:bg-gray-50 md:space-y-0 space-y-1 p-4 border-b\">\n            <p className=\"text-gray-600\">Device Name</p>\n            <p>{deviceInfos ? deviceInfos.name : ''}</p>\n          </div>\n        </div>\n        <div>\n          <div className=\"md:grid md:grid-cols-2 hover:bg-gray-50 md:space-y-0 space-y-1 p-4 border-b\">\n            <p className=\"text-gray-600\">Url</p>\n            <p>{deviceInfos ? deviceInfos.url : ''}</p>\n          </div>\n        </div>\n        <div>\n          <div className=\"md:grid md:grid-cols-2 hover:bg-gray-50 md:space-y-0 space-y-1 p-4 border-b\">\n            <p className=\"text-gray-600\">Device kind</p>\n            <p>{deviceInfos ? deviceInfos.kind : ''}</p>\n          </div>\n        </div>\n        <div>\n          <div className=\"md:grid md:grid-cols-2 hover:bg-gray-50 md:space-y-0 space-y-1 p-4 border-b\">\n            <p className=\"text-gray-600\">Topic</p>\n            <p>{deviceInfos ? deviceInfos.topic : ''}</p>\n          </div>\n        </div>\n      </div>\n\n      <HorizontalNavigation\n        onSelect={(option) => {\n          setSelected(option);\n          setCurrentPage(1);\n        }}\n        selected={selected}\n        options={['Load', 'I/O', 'FS', 'Temperature'].map((value) => ({\n          value: String(value),\n          label: String(value) + ' Details',\n        }))}\n      />\n\n      <Details\n        allData={previousData}\n        currentPage={currentPage}\n        count={count}\n        data={data}\n        previousData={previousData}\n        DetailType={selected.value}\n        setCurrentPage={(p) => setCurrentPage(p)}\n      />\n    </div>\n  );\n};\n\nexport default DeviceDetails;\n"],"sourceRoot":""}