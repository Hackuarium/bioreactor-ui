{"version":3,"sources":["assets/icons/treeDots.svg","pages/LocalDeviceDetails/GeneralTab.jsx","pages/LocalDeviceDetails/HistoryTab.jsx","pages/LocalDeviceDetails/ConfigTab.jsx","pages/LocalDeviceDetails/AdvancedTab.jsx","pages/LocalDeviceDetails/DeviceCardInfo.jsx","pages/LocalDeviceDetails/index.jsx"],"names":["_path","GeneralTab","data","className","epoch","msToTime","parametersArray","map","param","index","title","name","label","value","factor","unit","info","description","HistoryTab","device","refreshInterval","useState","headers","setHeaders","setData","useEffect","_id","getSavedData","then","rows","initHeaders","connected","timeout","setInterval","clearInterval","dataArray","length","heads","h","Row","useCallback","val","classnames","compact","p","headerValues","useTable","itemsPerPage","withText","pagination","sliceData","size","variant","onClick","clearSavedData","d","id","Header","Tr","intervals","v","type","ConfigTab","setRefreshInterval","refreshData","writableParams","setWritableParams","_refreshInterval","_setRefreshInterval","useNotification","addInfoNotification","addErrorNotification","parameters","values","Object","keys","filter","key","writable","onSaveValue","console","log","sendCommand","COMMANDS","setParameter","message","onReset","a","reset","resultMsg","document","activeElement","blur","onSleep","sleep","options","onSelect","option","initialValue","placeholder","onSave","_excluded","_extends","assign","bind","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgTreeDots","_ref","svgRef","titleId","props","viewBox","ref","ForwardRef","AdvancedTab","deviceId","setDeviceId","command","setCommand","results","setResults","init","help","onSend","onHelp","setTimeout","onSettings","settings","style","fontFamily","onChange","event","onKeyDown","fill","disabled","DeviceCardInfo","goBack","onOpenModel","onRequest","dot","rounded","BadgeSize","SMALL","color","kind","tabs","LocalDevices","match","history","currentDevice","setCurrentDevice","selectedTab","setSelectedTab","isModalOpen","setIsModalOpen","forceRender","setForceRender","currentData","setCurrentData","addWarningNotification","params","getDevice","_device","getCurrentData","compactSettings","compressedResults","parseCurrentSettings","parameterInfo","saveDataRow","getLastSavedData","row","setDeviceConnectivity","cleanUp","continuousUpdateDevices","connectedDevices","isConnected","intervalId","getConnectedDevices","requestDevices","onSaveDevice","deviceInfo","updateDevice","selected","tab","renderTabContent","LocalDeviceModal","isOpen","onClose","initialValues"],"mappings":"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","file":"static/js/12.9b30d94e.chunk.js","sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgTreeDots(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 20 20\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTreeDots);\nexport default __webpack_public_path__ + \"static/media/treeDots.68360f32.svg\";\nexport { ForwardRef as ReactComponent };","import { CardValue } from '../../components';\nimport { msToTime } from '../../services/util';\n\nconst GeneralTab = ({ data }) => {\n  return (\n    <div className=\"flex flex-col\">\n      {data?.epoch && (\n        <p className=\"mx-2 my-2 text-base font-medium text-black self-end\">\n          Awake time:\n          <span className=\"mx-1 text-sm text-neutral-500\">\n            {msToTime(data?.epoch)}\n          </span>\n        </p>\n      )}\n      <div className=\" flex flex-row justify-around flex-wrap\">\n        {data?.parametersArray?.map((param, index) => (\n          <CardValue\n            key={index}\n            title={param.name || param.label}\n            value={param.value * param.factor}\n            unit={param.unit}\n            info={param.description}\n            className=\"w-full sm:w-1/2  md:w-1/4 lg:w-1/5 flex\"\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default GeneralTab;\n","import { useCallback, useState, useEffect } from 'react';\nimport { Button, Table, Td, Th, useTable } from '../../components/tailwind-ui';\nimport { getSavedData, clearSavedData } from '../../services/devicesService';\nimport { msToTime } from '../../services/util';\n\nconst ROWS_BY_PAGE = 10;\n\nconst HistoryTab = ({ device, refreshInterval }) => {\n  const [headers, setHeaders] = useState([]);\n  const [data, setData] = useState([]);\n\n  // extract headers from the first element on data\n  useEffect(() => {\n    if (device?._id) {\n      getSavedData(device?._id).then((rows) => {\n        initHeaders(rows);\n        setData(rows);\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [device?._id]);\n\n  useEffect(() => {\n    if (device?._id && device?.connected) {\n      const timeout = setInterval(\n        () =>\n          getSavedData(device?._id).then((rows) => {\n            initHeaders(rows);\n            setData(rows);\n          }),\n        refreshInterval,\n      );\n      return () => clearInterval(timeout);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [device?._id, device?.connected, refreshInterval]);\n\n  const initHeaders = (dataArray) => {\n    if (headers.length === 0 && dataArray && dataArray.length > 0) {\n      const heads = dataArray[0].parametersArray?.map((h) => h.name || h.label);\n      setHeaders(['Time', ...heads]);\n    }\n  };\n\n  const onClear = () => {\n    clearSavedData(device?._id).then(() => setData([]));\n  };\n\n  const Row = useCallback((val) => {\n    const classnames = 'text-xs text-center p-2';\n    return (\n      <tr>\n        <Td compact={true} className={classnames + ' font-medium'}>\n          {msToTime(val.value.epoch)}\n        </Td>\n        {val.value.parametersArray?.map((p, index) => (\n          <Td key={index} compact={true} className={classnames}>\n            {p.value}\n          </Td>\n        ))}\n      </tr>\n    );\n  }, []);\n\n  const headerValues = useCallback(() => {\n    return (\n      <tr>\n        {headers?.map((h) => (\n          <Th\n            key={h}\n            className=\"p-2 text-center font-normal normal-case\"\n            compact={true}\n          >\n            {h}\n          </Th>\n        ))}\n      </tr>\n    );\n  }, [headers]);\n\n  const { pagination, data: sliceData } = useTable(data, {\n    itemsPerPage: ROWS_BY_PAGE,\n    withText: true,\n  });\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"w-full p-2 flex flex-row justify-end\">\n        <Button size=\"small\" variant=\"white\" onClick={onClear}>\n          Clear\n        </Button>\n      </div>\n      <div className=\"w-full p-1 pb-4 overflow-x-auto\">\n        <Table\n          pagination={pagination}\n          data={sliceData.map((d, index) => ({\n            ...d,\n            id: d.epoch + index,\n          }))}\n          Header={headerValues}\n          Tr={Row}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default HistoryTab;\n","import { useState, useEffect } from 'react';\n\nimport { Button, Dropdown } from '../../components/tailwind-ui';\nimport { CardInput, DividerCustom } from '../../components';\nimport useNotification from '../../hooks/useNotification';\nimport { sendCommand } from '../../services/localDeviceService';\nimport { COMMANDS } from '../../services/devicesOptions';\n\nconst intervals = [1, 2, 5, 10, 30, 60, 120, 300].map((v) => ({\n  label: v > 59 ? `${v / 60} m` : `${v} s`,\n  value: v * 1000,\n  type: 'option',\n}));\n\n/**\n *\n * @param {Object} device\n * @param {number} refreshInterval\n * @param {function} setRefreshInterval\n * @param {Object} data\n * @param {function} refreshData\n */\n\nconst ConfigTab = ({\n  device,\n  refreshInterval,\n  setRefreshInterval,\n  data,\n  refreshData,\n}) => {\n  const [writableParams, setWritableParams] = useState([]);\n  const [_refreshInterval, _setRefreshInterval] = useState({\n    label: refreshInterval / 1000 + ' s',\n    value: refreshInterval,\n    type: 'option',\n  });\n\n  const { addInfoNotification, addErrorNotification } = useNotification();\n\n  // get Writable params from data\n  useEffect(() => {\n    const parameters = data?.parameters;\n    const values =\n      parameters &&\n      Object.keys(parameters)\n        .filter((key) => parameters[key].writable)\n        .map((key) => ({ ...parameters[key], key })); // the key is used to send the update command\n    setWritableParams(values);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  const onSaveValue = async (key, value) => {\n    try {\n      console.log(key + ' is set to: ' + value);\n      await sendCommand(device.id, COMMANDS.setParameter(key, value));\n      refreshData();\n      addInfoNotification('saved', '', 1000);\n    } catch (e) {\n      addErrorNotification(e.message);\n    }\n  };\n\n  const OnRefreshIntervalChanged = (option) => {\n    _setRefreshInterval(option);\n    setRefreshInterval(option.value);\n    document.activeElement.blur();\n  };\n\n  const onReset = async () => {\n    try {\n      const resultMsg = await sendCommand(device.id, COMMANDS.reset);\n      addInfoNotification(resultMsg);\n      refreshData();\n    } catch (e) {\n      addErrorNotification(e.message);\n    }\n    document.activeElement.blur();\n  };\n\n  const onSleep = async () => {\n    try {\n      await sendCommand(device.id, COMMANDS.sleep);\n    } catch (e) {\n      addErrorNotification(e.message);\n    }\n    document.activeElement.blur();\n  };\n\n  return (\n    <div className=\"w-full flex flex-col \">\n      <div className=\"mt-2 flex flex-col sm:flex-row justify-between\">\n        <div className=\"my-1 mx-2 flex flex-row items-center justify-end\">\n          <p className=\"mx-1 text-sm font-medium text-neutral-700\">\n            Refresh interval :\n          </p>\n          <Dropdown\n            title={_refreshInterval.label}\n            options={[intervals]}\n            onSelect={OnRefreshIntervalChanged}\n          />\n        </div>\n        <div className=\"my-1 flex flex-row justify-end\">\n          <Button className=\"mx-2\" variant=\"white\" onClick={onSleep}>\n            Sleep\n          </Button>\n          <Button className=\"mx-2 \" variant=\"white\" onClick={onReset}>\n            Reset Device\n          </Button>\n        </div>\n      </div>\n\n      {writableParams?.length > 0 && (\n        <>\n          <DividerCustom title=\"Edit parameters\" />\n          <div className=\"flex flex-row justify-start flex-wrap\">\n            {writableParams.map((p, index) => (\n              <CardInput\n                key={index}\n                id={p.key}\n                title={p.name || p.label}\n                initialValue={p.value * p.factor}\n                placeholder={p.name}\n                unit={p.unit}\n                info={p.description}\n                onSave={onSaveValue}\n                className=\"w-full sm:w-1/2  md:w-1/4 lg:w-1/5 flex\"\n              />\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ConfigTab;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Dropdown } from '../../components/tailwind-ui';\nimport { ReactComponent as TreeDotsIcon } from '../../assets/icons/treeDots.svg';\nimport { sendCommand } from '../../services/localDeviceService';\nimport { COMMANDS } from '../../services/devicesOptions';\nimport useNotification from '../../hooks/useNotification';\n\nconst AdvancedTab = ({ device }) => {\n  const [deviceId, setDeviceId] = useState();\n  const [command, setCommand] = useState('');\n  const [results, setResults] = useState('');\n\n  const { addErrorNotification } = useNotification();\n\n  useEffect(() => {\n    setDeviceId(device?.id);\n    init();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [device?.id]);\n\n  const init = async () => {\n    if (device?.id && device?.connected) {\n      setCommand(COMMANDS.help);\n      const data = await sendCommand(device?.id, COMMANDS.help);\n      setResults(data);\n    }\n  };\n\n  const onSend = async () => {\n    if (command) {\n      try {\n        const data = await sendCommand(deviceId, command);\n        setResults(data);\n      } catch (e) {\n        addErrorNotification(\n          e.name,\n          !device?.connected ? `${device?.name} is disconnected` : e.message,\n        );\n      }\n    }\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      onSend();\n    }\n  };\n\n  const onHelp = async () => {\n    try {\n      setCommand(COMMANDS.help);\n      const data = await sendCommand(deviceId, COMMANDS.help);\n      setResults(data);\n    } catch (e) {\n      addErrorNotification(\n        e.name,\n        !device?.connected ? `${device?.name} is disconnected` : e.message,\n      );\n    }\n    setTimeout(() => document.activeElement.blur(), 100);\n  };\n\n  const onSettings = async () => {\n    try {\n      setCommand(COMMANDS.settings);\n      const data = await sendCommand(deviceId, COMMANDS.settings);\n      setResults(data);\n    } catch (e) {\n      addErrorNotification(\n        e.name,\n        !device?.connected ? `${device?.name} is disconnected` : e.message,\n      );\n    }\n    setTimeout(() => document.activeElement.blur(), 100);\n  };\n\n  const handleDropdownSelect = (option) =>\n    option.label === 'Help'\n      ? onHelp()\n      : option.label === 'Settings'\n      ? onSettings()\n      : null;\n\n  return (\n    <div className=\"w-full   \">\n      <div className=\"flex flex-col\">\n        <div className=\"w-full my-1 md:max-w-md flex flex-row\">\n          <input\n            className=\"w-full py-1 px-2 border rounded-md text-base\"\n            placeholder=\"h (for help)\"\n            style={{ fontFamily: 'monospace' }}\n            value={command}\n            onChange={(event) => setCommand(event.target.value)}\n            onKeyDown={handleKeyDown}\n          />\n          <Button\n            className=\"mx-2 md:mr-0\"\n            variant=\"primary\"\n            size=\"small\"\n            onClick={onSend}\n          >\n            Send\n          </Button>\n          {/* display just in small screens */}\n          <div className=\"flex ml-4 self-center md:hidden\">\n            <Dropdown\n              options={[\n                [\n                  { label: 'Help', type: 'option' },\n                  { label: 'Settings', type: 'option' },\n                ],\n              ]}\n              onSelect={handleDropdownSelect}\n            >\n              <TreeDotsIcon className=\"w-5 h-5\" fill=\"currentColor\" />\n            </Dropdown>\n          </div>\n        </div>\n        <div className=\"w-full mt-2 flex flex-col md:flex-row md:max-w-2xl\">\n          <div className=\"w-full h-96 md:mr-2 flex md:flex-1 border rounded-md overflow-auto overflow-x-auto\">\n            <textarea\n              className=\"w-full text-sm font-semibold text-success-400 bg-neutral-900\"\n              style={{ fontFamily: 'monospace' }}\n              value={results}\n              onChange={(event) => console.log(event.target.value)}\n              disabled\n            />\n          </div>\n          <div className=\"hidden flex-col md:flex\">\n            <Button\n              className=\"m-1\"\n              variant=\"white\"\n              size=\"xSmall\"\n              onClick={onHelp}\n            >\n              Help\n            </Button>\n            <Button\n              className=\"m-1\"\n              variant=\"white\"\n              size=\"xSmall\"\n              onClick={onSettings}\n            >\n              Settings\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdvancedTab;\n","import React from 'react';\nimport {\n  Badge,\n  BadgeSize,\n  Button,\n  SvgSolidArrowCircleLeft,\n  SvgSolidPencilAlt,\n} from '../../components/tailwind-ui';\n\nconst DeviceCardInfo = ({ device, goBack, onOpenModel, onRequest }) => {\n  return (\n    <div className=\"my-2 p-2 flex flex-row items-start rounded-md bg-white shadow\">\n      <SvgSolidArrowCircleLeft\n        className=\"my-3 mr-2 h-6 w-6 text-neutral-300 cursor-pointer\"\n        onClick={goBack}\n      />\n      <div className=\"w-full my-2 flex flex-col\">\n        <div className=\"flex flex-row items-center\">\n          <h1 className=\"mr-4 text-lg font-semibold truncate text-primary-800\">\n            {device?.name}\n          </h1>\n          <Badge\n            dot\n            rounded\n            label={device?.connected ? 'Active' : 'Inactive'}\n            size={BadgeSize.SMALL}\n            color={device?.connected ? 'success' : 'neutral'}\n            className=\"w-min h-min\"\n          />\n        </div>\n        <div className=\"flex flex-row flex-wrap justify-between items-center\">\n          <h3 className=\"mt-2 text-xs font-italic text-neutral-600 font-semibold truncate\">\n            {`${device?.kind?.name} (${device?.kind?.kind})`}\n          </h3>\n          <div className=\"flex flex-row mt-2 \">\n            <Button\n              size=\"small\"\n              variant=\"white\"\n              className=\"mr-2 \"\n              onClick={() => onOpenModel(true)}\n            >\n              <SvgSolidPencilAlt className=\"text-gray-700\" />\n            </Button>\n            {!device?.connected && (\n              <Button size=\"xSmall\" onClick={onRequest}>\n                Request\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DeviceCardInfo;\n","import { useState, useEffect, useCallback } from 'react';\nimport { parseCurrentSettings } from 'legoino-util';\n\nimport GeneralTab from './GeneralTab';\nimport HistoryTab from './HistoryTab';\nimport ConfigTab from './ConfigTab';\nimport AdvancedTab from './AdvancedTab';\nimport DeviceCardInfo from './DeviceCardInfo';\nimport LocalDeviceModal from '../LocalDevices/LocalDeviceModal';\nimport useNotification from '../../hooks/useNotification';\nimport { COMMANDS } from '../../services/devicesOptions';\nimport { HorizontalNavigation } from '../../components/tailwind-ui';\nimport {\n  sendCommand,\n  requestDevices,\n  getConnectedDevices,\n  continuousUpdateDevices,\n} from '../../services/localDeviceService';\nimport {\n  getDevice,\n  updateDevice,\n  saveDataRow,\n  getLastSavedData,\n} from '../../services/devicesService';\n\nconst SCAN_INTERVAL = 1000;\n\nconst tabs = ['General', 'History', 'Advanced', 'Configuration'].map((v) => ({\n  value: v,\n  label: v,\n}));\n\nconst LocalDevices = ({ match, history }) => {\n  const [currentDevice, setCurrentDevice] = useState();\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [forceRender, setForceRender] = useState(false);\n\n  const [currentData, setCurrentData] = useState({}); // data to display\n  const [refreshInterval, setRefreshInterval] = useState(2000);\n\n  const { addWarningNotification } = useNotification();\n\n  // get device from DB just in the first render\n  useEffect(() => {\n    const deviceId = `${match.params.id}`;\n    getDevice(deviceId).then((_device) => {\n      setCurrentDevice(_device);\n    });\n  }, [match.params.id]);\n\n  // get data from device\n  const getCurrentData = useCallback(async () => {\n    if (currentDevice?.id) {\n      if (currentDevice?.connected) {\n        try {\n          const compressedResults = await sendCommand(\n            currentDevice?.id,\n            COMMANDS.compactSettings,\n          );\n          const results = parseCurrentSettings(compressedResults, {\n            kind: currentDevice?.kind?.kind,\n            parameterInfo: true,\n            parametersArray: true,\n          });\n          setCurrentData(results);\n          saveDataRow(currentDevice._id, results);\n        } catch (e) {\n          //  console.log(e.message);\n        }\n      } else {\n        // get local saved data\n        getLastSavedData(currentDevice._id).then((row) => {\n          console.log(row);\n          if (row.length > 0) {\n            setCurrentData(row[0]);\n          }\n        });\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentDevice?.id, currentDevice?.connected]);\n\n  // get data immediately after getting device\n  useEffect(() => {\n    getCurrentData();\n  }, [getCurrentData]);\n\n  // Listen continuously to data from device every {refreshInterval}\n  useEffect(() => {\n    if (currentDevice?.id && currentDevice?.connected) {\n      const timeout = setInterval(() => getCurrentData(), refreshInterval);\n      return () => clearInterval(timeout);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getCurrentData, refreshInterval]);\n\n  // Listen continuously to device connectivity\n  useEffect(() => {\n    setDeviceConnectivity();\n    const cleanUp = continuousUpdateDevices((connectedDevices) => {\n      const isConnected =\n        connectedDevices.filter((d) => d.id === currentDevice?.id).length > 0;\n      if (isConnected && !currentDevice?.connected) {\n        setCurrentDevice({ ...currentDevice, connected: true });\n      } else if (!isConnected && currentDevice?.connected) {\n        addWarningNotification(`${currentDevice?.name} is disconnected`);\n        setCurrentDevice({ ...currentDevice, connected: false });\n      }\n    }, SCAN_INTERVAL);\n\n    return () => cleanUp.then((intervalId) => clearInterval(intervalId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentDevice?.id, currentDevice?.connected, forceRender]);\n\n  const setDeviceConnectivity = async () => {\n    const connectedDevices = await getConnectedDevices();\n    if (connectedDevices.filter((d) => d.id === currentDevice?.id).length > 0) {\n      setCurrentDevice({ ...currentDevice, connected: true });\n    }\n  };\n\n  const onRequest = async () => {\n    document.activeElement.blur();\n    await requestDevices();\n    setDeviceConnectivity();\n  };\n\n  const onSaveDevice = async (device) => {\n    const { connected, ...deviceInfo } = device;\n    updateDevice(deviceInfo).then(() => {\n      setCurrentDevice(device);\n      setForceRender(!forceRender);\n      setIsModalOpen(false);\n    });\n  };\n\n  const renderTabContent = (tab) => {\n    switch (tab.value) {\n      case 'General':\n        return <GeneralTab data={currentData} />;\n      case 'History':\n        return (\n          <HistoryTab\n            device={currentDevice}\n            refreshInterval={refreshInterval}\n          />\n        );\n      case 'Advanced':\n        return <AdvancedTab device={currentDevice} />;\n      case 'Configuration':\n        return (\n          <ConfigTab\n            device={currentDevice}\n            refreshInterval={refreshInterval}\n            setRefreshInterval={setRefreshInterval}\n            data={currentData}\n            refreshData={() => getCurrentData()}\n          />\n        );\n      default:\n        return <div />;\n    }\n  };\n\n  return (\n    <div className=\"mx-4 pb-4\">\n      <DeviceCardInfo\n        device={currentDevice}\n        goBack={() => history.goBack()}\n        onOpenModel={setIsModalOpen}\n        onRequest={onRequest}\n      />\n\n      <HorizontalNavigation\n        onSelect={setSelectedTab}\n        selected={selectedTab}\n        options={tabs}\n      />\n      <div className=\"p-3 mt-4 sm:m-0 flex flex-col items-center rounded-md sm:rounded-t-none bg-white shadow \">\n        {renderTabContent(selectedTab)}\n      </div>\n\n      <LocalDeviceModal\n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        initialValues={currentDevice}\n        onSave={onSaveDevice}\n      />\n    </div>\n  );\n};\n\nexport default LocalDevices;\n"],"sourceRoot":""}