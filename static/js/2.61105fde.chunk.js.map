{"version":3,"sources":["../node_modules/debug/src/browser.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/legoino-util/src/util/calculateCheckDigit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/legoino-util/src/index.js","../node_modules/legoino-util/src/util/hexToInt16.js","../node_modules/legoino-util/src/util/numberToLabel.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/legoino-util/src/parser/parseMultilogLine.js","../node_modules/legoino-util/src/util/checkCheckDigit.js","../node_modules/legoino-util/src/parser/parseParameters.js","../node_modules/legoino-util/src/util/deviceIdNumberToString.js","../node_modules/legoino-util/src/util/labelToNumber.js","../node_modules/debug/src/common.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/ms/index.js","../node_modules/legoino-util/src/parser/parseMultilog.js","../node_modules/legoino-util/src/parser/parseCurrentSettings.js","../node_modules/legoino-util/src/util/deviceIdStringToNumber.js","../node_modules/legoino-util/src/util/valueToRawNumber.js","../node_modules/legoino-util/src/creator/createCompactLog.js","../node_modules/legoino-util/src/util/int16ToHex.js"],"names":["exports","formatArgs","args","this","useColors","namespace","module","humanize","diff","c","color","splice","index","lastC","replace","match","save","namespaces","storage","setItem","removeItem","error","load","r","getItem","process","DEBUG","window","type","__nwjs","navigator","userAgent","toLowerCase","document","documentElement","style","WebkitAppearance","console","firebug","exception","table","parseInt","RegExp","$1","localStorage","localstorage","destroy","warned","warn","colors","log","debug","require","formatters","j","v","JSON","stringify","message","unsupportedIterableToArray","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","hexString","checkDigit","arrayLikeToArray","minLen","Object","prototype","toString","call","slice","constructor","name","from","test","parseMultilog","parseMultilogLine","parseCurrentSettings","deviceIdNumberToString","deviceIdStringToNumber","calculateCheckDigit","valueToRawNumber","createCompactLog","DevicesInfo","labelToNumber","numberToLabel","hexa","String","fromCharCode","Math","floor","arr","len","arr2","checkCheckDigit","hexToInt16","parseParameters","line","options","hasEvent","flatten","parametersArray","entry","Error","id","substr","epoch","parseResult","substring","assign","parameters","eventId","eventValue","deviceId","DeviceInformation","buffer","parameterLabel","parameterInfo","flagInfo","kind","undefined","deviceInformation","numberParameters","numberLogParameters","variable","label","factor","valueNumber","originalValue","flags","key","bit","push","idNumber","code","char","charCodeAt","env","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","enabled","self","curr","Number","Date","ms","prev","coerce","unshift","format","formatter","val","logFn","apply","selectColor","extend","defineProperty","enumerable","configurable","get","set","init","delimiter","newDebug","toNamespace","regexp","default","stack","disable","names","map","skips","join","enable","split","keys","forEach","hash","abs","arrayWithoutHoles","iterableToArray","nonIterableSpread","iter","m","h","d","w","y","plural","msAbs","isPlural","round","str","exec","parseFloat","parse","isFinite","long","fmtLong","fmtShort","lines","filter","entries","deviceCode","idString","int16ToHex","data","result","padStart","toUpperCase"],"mappings":"0GAAA,YAMAA,EAAQC,WA2IR,SAAoBC,GAQnB,GAPAA,EAAK,IAAMC,KAAKC,UAAY,KAAO,IAClCD,KAAKE,WACJF,KAAKC,UAAY,MAAQ,KAC1BF,EAAK,IACJC,KAAKC,UAAY,MAAQ,KAC1B,IAAME,EAAON,QAAQO,SAASJ,KAAKK,OAE/BL,KAAKC,UACT,OAGD,IAAMK,EAAI,UAAYN,KAAKO,MAC3BR,EAAKS,OAAO,EAAG,EAAGF,EAAG,kBAKrB,IAAIG,EAAQ,EACRC,EAAQ,EACZX,EAAK,GAAGY,QAAQ,eAAe,SAAAC,GAChB,OAAVA,IAGJH,IACc,OAAVG,IAGHF,EAAQD,OAIVV,EAAKS,OAAOE,EAAO,EAAGJ,IA1KvBT,EAAQgB,KA6LR,SAAcC,GACb,IACKA,EACHjB,EAAQkB,QAAQC,QAAQ,QAASF,GAEjCjB,EAAQkB,QAAQE,WAAW,SAE3B,MAAOC,MAnMVrB,EAAQsB,KA+MR,WACC,IAAIC,EACJ,IACCA,EAAIvB,EAAQkB,QAAQM,QAAQ,SAC3B,MAAOH,KAMJE,GAAwB,qBAAZE,GAA2B,QAASA,IACpDF,EAAIE,iJAAYC,OAGjB,OAAOH,GA5NRvB,EAAQI,UAyGR,WAIC,GAAsB,qBAAXuB,QAA0BA,OAAOF,UAAoC,aAAxBE,OAAOF,QAAQG,MAAuBD,OAAOF,QAAQI,QAC5G,OAAO,EAIR,GAAyB,qBAAdC,WAA6BA,UAAUC,WAAaD,UAAUC,UAAUC,cAAcjB,MAAM,yBACtG,OAAO,EAKR,MAA4B,qBAAbkB,UAA4BA,SAASC,iBAAmBD,SAASC,gBAAgBC,OAASF,SAASC,gBAAgBC,MAAMC,kBAEpH,qBAAXT,QAA0BA,OAAOU,UAAYV,OAAOU,QAAQC,SAAYX,OAAOU,QAAQE,WAAaZ,OAAOU,QAAQG,QAGrG,qBAAdV,WAA6BA,UAAUC,WAAaD,UAAUC,UAAUC,cAAcjB,MAAM,mBAAqB0B,SAASC,OAAOC,GAAI,KAAO,IAE9H,qBAAdb,WAA6BA,UAAUC,WAAaD,UAAUC,UAAUC,cAAcjB,MAAM,uBA9HtGf,EAAQkB,QAyOR,WACC,IAGC,OAAO0B,aACN,MAAOvB,KA9OQwB,GAClB7C,EAAQ8C,QAAW,WAClB,IAAIC,GAAS,EAEb,OAAO,WACDA,IACJA,GAAS,EACTV,QAAQW,KAAK,2IANG,GAenBhD,EAAQiD,OAAS,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAsFDjD,EAAQkD,IAAMb,QAAQc,OAASd,QAAQa,KAAQ,aAkE/C5C,EAAON,QAAUoD,EAAQ,IAARA,CAAoBpD,GAEhBM,EAAON,QAArBqD,WAMIC,EAAI,SAAUC,GACxB,IACC,OAAOC,KAAKC,UAAUF,GACrB,MAAOlC,GACR,MAAO,+BAAiCA,EAAMqC,Y,uCC1QhD,IAAIC,EAA6B,EAAQ,KA2DzCrD,EAAON,QAzDP,SAAoC4D,EAAGC,GACrC,IAAIC,EAEJ,GAAsB,qBAAXC,QAAgD,MAAtBH,EAAEG,OAAOC,UAAmB,CAC/D,GAAIC,MAAMC,QAAQN,KAAOE,EAAKH,EAA2BC,KAAOC,GAAkBD,GAAyB,kBAAbA,EAAEO,OAAqB,CAC/GL,IAAIF,EAAIE,GACZ,IAAIM,EAAI,EAEJC,EAAI,aAER,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAIH,GAAKR,EAAEO,OAAe,CACxBK,MAAM,GAED,CACLA,MAAM,EACNC,MAAOb,EAAEQ,OAGbM,EAAG,SAAWC,GACZ,MAAMA,GAERC,EAAGP,GAIP,MAAM,IAAIQ,UAAU,yIAGtB,IAEIC,EAFAC,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLV,EAAG,WACDR,EAAKF,EAAEG,OAAOC,aAEhBO,EAAG,WACD,IAAIU,EAAOnB,EAAGoB,OAEd,OADAH,EAAmBE,EAAKT,KACjBS,GAETP,EAAG,SAAWS,GACZH,GAAS,EACTF,EAAMK,GAERP,EAAG,WACD,IACOG,GAAoC,MAAhBjB,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIkB,EAAQ,MAAMF,O,iCCnD1BxE,EAAON,QAAU,SAA6BoF,GAE5C,IADA,IAAIC,EAAa,EACRjB,EAAI,EAAGA,EAAIgB,EAAUjB,OAAQC,GAAQ,EAC5CiB,GAAc5C,SAAS,GAAD,OAAI2C,EAAUhB,IAAd,OAAmBgB,EAAUhB,EAAI,IAAM,IAG/D,OAAOiB,I,oBCRT,IAAIC,EAAmB,EAAQ,KAW/BhF,EAAON,QATP,SAAqC4D,EAAG2B,GACtC,GAAK3B,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO0B,EAAiB1B,EAAG2B,GACtD,IAAIhB,EAAIiB,OAAOC,UAAUC,SAASC,KAAK/B,GAAGgC,MAAM,GAAI,GAEpD,MADU,WAANrB,GAAkBX,EAAEiC,cAAatB,EAAIX,EAAEiC,YAAYC,MAC7C,QAANvB,GAAqB,QAANA,EAAoBN,MAAM8B,KAAKnC,GACxC,cAANW,GAAqB,2CAA2CyB,KAAKzB,GAAWe,EAAiB1B,EAAG2B,QAAxG,K,iCCNFjF,EAAON,QAAU,CACfiG,cAAe7C,EAAQ,KACvB8C,kBAAmB9C,EAAQ,KAC3B+C,qBAAsB/C,EAAQ,KAC9BgD,uBAAwBhD,EAAQ,KAChCiD,uBAAwBjD,EAAQ,KAChCkD,oBAAqBlD,EAAQ,KAC7BmD,iBAAkBnD,EAAQ,KAC1BoD,iBAAkBpD,EAAQ,KAC1BqD,YAAarD,EAAQ,KACrBsD,cAAetD,EAAQ,KACvBuD,cAAevD,EAAQ,O,iCCXzB9C,EAAON,QAAU,SAAoB4G,GACnC,IAAInC,EAAQhC,SAAS,GAAD,OAAImE,GAAQ,IAChC,OAAInC,EAAQ,OACgB,GAAlB,MAAQA,GAEXA,I,iCCLTnE,EAAON,QAAU,SAAuByE,GACtC,OAAIA,EAAQ,GACHoC,OAAOC,aAAa,GAAKrC,GAEzBoC,OAAOC,aAAaC,KAAKC,MAAMvC,EAAQ,IAAM,GAAI,GAAMA,EAAQ,M,kBCI1EnE,EAAON,QAVP,SAA2BiH,EAAKC,IACnB,MAAPA,GAAeA,EAAMD,EAAI9C,UAAQ+C,EAAMD,EAAI9C,QAE/C,IAAK,IAAIC,EAAI,EAAG+C,EAAO,IAAIlD,MAAMiD,GAAM9C,EAAI8C,EAAK9C,IAC9C+C,EAAK/C,GAAK6C,EAAI7C,GAGhB,OAAO+C,I,iCCLT,IAAMhE,EAAQC,EAAQ,IAARA,CAAiB,sCAEzBgE,EAAkBhE,EAAQ,KAC1BiE,EAAajE,EAAQ,KAErBkE,EAAkBlE,EAAQ,KAiBhC9C,EAAON,QAAU,SAA2BuH,EAAMC,GAChD,MAAoEA,EAA9DC,gBAAN,WAAoED,EAA7CE,eAAvB,WAAoEF,EAA5BG,uBAAxC,SAGAJ,EAAOA,EAAKzG,QAAQ,cAAe,IAEnC,IAAM8G,EAAQ,GAEd,IAAIR,EAAgBG,GA2BlB,MADApE,EAAM,oBAAqBoE,GACrB,IAAIM,MAAM,qBA1BhBD,EAAME,GAAKrF,SAAS,GAAD,OAAI8E,EAAKQ,OAAO,EAAG,IAAM,IAC5CH,EAAMI,MAA+C,IAAvCvF,SAAS,GAAD,OAAI8E,EAAKQ,OAAO,EAAG,IAAM,IAC/C,IAAIE,EAAcX,EAChBC,EAAKW,UAAU,GAAIX,EAAKpD,OAAS,GAAKsD,EAAW,EAAI,IACrDD,GAiBF,GAfIE,EACFlC,OAAO2C,OAAOP,EAAOK,EAAYG,YAEjCR,EAAMQ,WAAaH,EAAYG,WAE7BT,IACFC,EAAMD,gBAAkBM,EAAYN,iBAGlCF,IACFG,EAAMS,QAAUhB,EAAWE,EAAKQ,OAAOR,EAAKpD,OAAS,GAAI,IACzDyD,EAAMU,WAAajB,EAAWE,EAAKQ,OAAOR,EAAKpD,OAAS,GAAI,KAG9DyD,EAAMW,SAAWlB,EAAWE,EAAKQ,OAAOR,EAAKpD,OAAS,EAAG,KACpDyD,EAAMW,SACT,MAAM,IAAIV,MAAM,oDAMpB,OAAOD,I,iCC3DT,IAAMtB,EAAsBlD,EAAQ,KAEpC9C,EAAON,QAAU,SAAyBuH,GACxC,OAAkC,IAA9BjB,EAAoBiB,K,iCCH1B,IAAMiB,EAAoBpF,EAAQ,KAE5BiE,EAAajE,EAAQ,KACrBuD,EAAgBvD,EAAQ,KAc9B9C,EAAON,QAAU,SAAyByI,GAAsB,IAAdjB,EAAc,uDAAJ,GAC1D,EAMIA,EALFkB,sBADF,WAMIlB,EAJFmB,qBAFF,WAMInB,EAHFoB,gBAHF,WAMIpB,EAFFqB,YAJF,WAISC,EAJT,IAMItB,EADFuB,yBALF,MAKsBP,EAAkBK,GALxC,EAQA,IAAsB,IAAlBF,IAAwC,IAAbC,EAC7B,MAAM,IAAIf,MAAM,oDAMlB,IAAIO,EAAa,GACbT,EAAkB,GAElBqB,EAAmBP,EAAOtE,OAAS,EACvC,GACE4E,GACAC,IAAqBD,EAAkBC,kBACvCA,IAAqBD,EAAkBE,oBAEvC,MAAM,IAAIpB,MACR,uFAICkB,IAAmBA,EAAoB,CAAEX,WAAY,KAE1D,IAAK,IAAIhE,EAAI,EAAGA,EAAI4E,EAAkB5E,IAAK,CACpC2E,EAAkBX,WAAWhE,KAChC2E,EAAkBX,WAAWhE,GAAK,CAChC8E,SAAUvC,EAAcvC,GACxB+E,MAAOxC,EAAcvC,GACrBgF,OAAQ,IAIZ,IAAIC,EAAchC,EAAWoB,EAAOP,UAAc,EAAJ9D,EAAW,EAAJA,EAAQ,KACxC,QAAjBiF,IAAwBA,OAAcP,GAE1C,IAAIK,EAAQT,EACRK,EAAkBX,WAAWhE,GAAG8E,UAChCH,EAAkBX,WAAWhE,GAAG0B,KAChCa,EAAcvC,GAElB,QAAc0E,IAAVK,EAAJ,CAEA,IAAI1E,OAAK,EACT,GAAIkE,GASF,GARAlE,EAAQe,OAAO2C,OAAO,GAAIY,EAAkBX,WAAWhE,GAAI,CACzDxD,MAAOwD,EACPkF,cAAeD,EACf5E,WACkBqE,IAAhBO,EACIA,EACAA,GAAeN,EAAkBX,WAAWhE,GAAGgF,QAAU,KAE7DR,EAAU,CACZ,IAAIW,EAAQR,EAAkBX,WAAWhE,GAAGmF,MAE5C,QAAcT,IAAVS,EAAqB,SACzB,IAAK,IAAIC,KAAOD,EACdA,EAAMC,GAAK/E,OACRA,EAAMA,MAAS,GAAK8E,EAAMC,GAAKC,MAASF,EAAMC,GAAKC,IAGxDhF,EAAM8E,MAAQA,QAGhB9E,OACkBqE,IAAhBO,EACIA,EACAA,GAAeN,EAAkBX,WAAWhE,GAAGgF,QAAU,QAGnDN,IAAVrE,IAAqB2D,EAAWe,GAAS1E,GAC7CkD,EAAgB+B,KAAKjF,IAGvB,MAAO,CAAE2D,aAAYT,qB,iCCpGvBrH,EAAON,QAAU,SAAgC2J,GAC/C,OACE9C,OAAOC,aAAc6C,EAAW,IAAO,GACvC9C,OAAOC,aAAa6C,EAAW,O,8CCHnCrJ,EAAON,QAAU,SAAuB4J,GACtC,IAD4C,EACxCnF,EAAQ,EADgC,IAE3BmF,GAF2B,IAE5C,2BAAuB,KAAdC,EAAc,QACrBpF,GAAS,GACTA,GAASoF,EAAKC,WAAW,GAAK,IAJY,8BAM5C,OAAOrF,EAAQ,I,iCCyQjBnE,EAAON,QA3QP,SAAe+J,GAqDd,SAASC,EAAY3J,GACpB,IAAI4J,EAEAC,EACAC,EAFAC,EAAiB,KAIrB,SAASjH,IAAe,2BAANjD,EAAM,yBAANA,EAAM,gBAEvB,GAAKiD,EAAMkH,QAAX,CAIA,IAAMC,EAAOnH,EAGPoH,EAAOC,OAAO,IAAIC,MAClBC,EAAKH,GAAQN,GAAYM,GAC/BD,EAAK9J,KAAOkK,EACZJ,EAAKK,KAAOV,EACZK,EAAKC,KAAOA,EACZN,EAAWM,EAEXrK,EAAK,GAAK8J,EAAYY,OAAO1K,EAAK,IAEX,kBAAZA,EAAK,IAEfA,EAAK2K,QAAQ,MAId,IAAIjK,EAAQ,EACZV,EAAK,GAAKA,EAAK,GAAGY,QAAQ,iBAAiB,SAACC,EAAO+J,GAElD,GAAc,OAAV/J,EACH,MAAO,IAERH,IACA,IAAMmK,EAAYf,EAAY3G,WAAWyH,GACzC,GAAyB,oBAAdC,EAA0B,CACpC,IAAMC,EAAM9K,EAAKU,GACjBG,EAAQgK,EAAUpF,KAAK2E,EAAMU,GAG7B9K,EAAKS,OAAOC,EAAO,GACnBA,IAED,OAAOG,KAIRiJ,EAAY/J,WAAW0F,KAAK2E,EAAMpK,GAElC,IAAM+K,EAAQX,EAAKpH,KAAO8G,EAAY9G,IACtC+H,EAAMC,MAAMZ,EAAMpK,IAiCnB,OA9BAiD,EAAM9C,UAAYA,EAClB8C,EAAM/C,UAAY4J,EAAY5J,YAC9B+C,EAAMzC,MAAQsJ,EAAYmB,YAAY9K,GACtC8C,EAAMiI,OAASA,EACfjI,EAAML,QAAUkH,EAAYlH,QAE5B0C,OAAO6F,eAAelI,EAAO,UAAW,CACvCmI,YAAY,EACZC,cAAc,EACdC,IAAK,WACJ,OAAuB,OAAnBpB,EACIA,GAEJF,IAAoBF,EAAY/I,aACnCiJ,EAAkBF,EAAY/I,WAC9BkJ,EAAeH,EAAYK,QAAQhK,IAG7B8J,IAERsB,IAAK,SAAAlI,GACJ6G,EAAiB7G,KAKa,oBAArByG,EAAY0B,MACtB1B,EAAY0B,KAAKvI,GAGXA,EAGR,SAASiI,EAAO/K,EAAWsL,GAC1B,IAAMC,EAAW5B,EAAY7J,KAAKE,WAAkC,qBAAdsL,EAA4B,IAAMA,GAAatL,GAErG,OADAuL,EAAS1I,IAAM/C,KAAK+C,IACb0I,EAyFR,SAASC,EAAYC,GACpB,OAAOA,EAAOpG,WACZwC,UAAU,EAAG4D,EAAOpG,WAAWvB,OAAS,GACxCrD,QAAQ,UAAW,KA2BtB,OAvQAkJ,EAAY7G,MAAQ6G,EACpBA,EAAY+B,QAAU/B,EACtBA,EAAYY,OAoPZ,SAAgBI,GACf,GAAIA,aAAenD,MAClB,OAAOmD,EAAIgB,OAAShB,EAAItH,QAEzB,OAAOsH,GAvPRhB,EAAYiC,QAwLZ,WACC,IAAMhL,EAAa,YACf+I,EAAYkC,MAAMC,IAAIN,IADP,EAEf7B,EAAYoC,MAAMD,IAAIN,GAAaM,KAAI,SAAA9L,GAAS,MAAI,IAAMA,OAC5DgM,KAAK,KAEP,OADArC,EAAYsC,OAAO,IACZrL,GA7LR+I,EAAYsC,OAsJZ,SAAgBrL,GAOf,IAAImD,EANJ4F,EAAYhJ,KAAKC,GACjB+I,EAAY/I,WAAaA,EAEzB+I,EAAYkC,MAAQ,GACpBlC,EAAYoC,MAAQ,GAGpB,IAAMG,GAA+B,kBAAftL,EAA0BA,EAAa,IAAIsL,MAAM,UACjErF,EAAMqF,EAAMpI,OAElB,IAAKC,EAAI,EAAGA,EAAI8C,EAAK9C,IACfmI,EAAMnI,KAOW,OAFtBnD,EAAasL,EAAMnI,GAAGtD,QAAQ,MAAO,QAEtB,GACdkJ,EAAYoC,MAAM1C,KAAK,IAAIhH,OAAO,IAAMzB,EAAW8G,OAAO,GAAK,MAE/DiC,EAAYkC,MAAMxC,KAAK,IAAIhH,OAAO,IAAMzB,EAAa,QA3KxD+I,EAAYK,QAsMZ,SAAiBvE,GAChB,GAA8B,MAA1BA,EAAKA,EAAK3B,OAAS,GACtB,OAAO,EAGR,IAAIC,EACA8C,EAEJ,IAAK9C,EAAI,EAAG8C,EAAM8C,EAAYoC,MAAMjI,OAAQC,EAAI8C,EAAK9C,IACpD,GAAI4F,EAAYoC,MAAMhI,GAAG4B,KAAKF,GAC7B,OAAO,EAIT,IAAK1B,EAAI,EAAG8C,EAAM8C,EAAYkC,MAAM/H,OAAQC,EAAI8C,EAAK9C,IACpD,GAAI4F,EAAYkC,MAAM9H,GAAG4B,KAAKF,GAC7B,OAAO,EAIT,OAAO,GAzNRkE,EAAYzJ,SAAW6C,EAAQ,KAC/B4G,EAAYlH,QA0PZ,WACCT,QAAQW,KAAK,0IAzPdwC,OAAOgH,KAAKzC,GAAK0C,SAAQ,SAAAjD,GACxBQ,EAAYR,GAAOO,EAAIP,MAOxBQ,EAAYkC,MAAQ,GACpBlC,EAAYoC,MAAQ,GAOpBpC,EAAY3G,WAAa,GAkBzB2G,EAAYmB,YAVZ,SAAqB9K,GAGpB,IAFA,IAAIqM,EAAO,EAEFtI,EAAI,EAAGA,EAAI/D,EAAU8D,OAAQC,IACrCsI,GAASA,GAAQ,GAAKA,EAAQrM,EAAUyJ,WAAW1F,GACnDsI,GAAQ,EAGT,OAAO1C,EAAY/G,OAAO8D,KAAK4F,IAAID,GAAQ1C,EAAY/G,OAAOkB,SA4N/D6F,EAAYsC,OAAOtC,EAAY1I,QAExB0I,I,oBC9QR,IAAI4C,EAAoB,EAAQ,KAE5BC,EAAkB,EAAQ,KAE1BlJ,EAA6B,EAAQ,KAErCmJ,EAAoB,EAAQ,KAMhCxM,EAAON,QAJP,SAA4BiH,GAC1B,OAAO2F,EAAkB3F,IAAQ4F,EAAgB5F,IAAQtD,EAA2BsD,IAAQ6F,M,oBCT9F,IAAIxH,EAAmB,EAAQ,KAM/BhF,EAAON,QAJP,SAA4BiH,GAC1B,GAAIhD,MAAMC,QAAQ+C,GAAM,OAAO3B,EAAiB2B,K,kBCClD3G,EAAON,QAJP,SAA0B+M,GACxB,GAAsB,qBAAXhJ,QAA0BA,OAAOC,YAAYwB,OAAOuH,GAAO,OAAO9I,MAAM8B,KAAKgH,K,kBCG1FzM,EAAON,QAJP,WACE,MAAM,IAAI6E,UAAU,0I,kBCGtB,IAAIP,EAAI,IACJ0I,EAAQ,GAAJ1I,EACJ2I,EAAQ,GAAJD,EACJE,EAAQ,GAAJD,EACJE,EAAQ,EAAJD,EACJE,EAAQ,OAAJF,EAqJR,SAASG,EAAO3C,EAAI4C,EAAO/I,EAAGuB,GAC5B,IAAIyH,EAAWD,GAAa,IAAJ/I,EACxB,OAAOwC,KAAKyG,MAAM9C,EAAKnG,GAAK,IAAMuB,GAAQyH,EAAW,IAAM,IAvI7DjN,EAAON,QAAU,SAASgL,EAAKxD,GAC7BA,EAAUA,GAAW,GACrB,IAAI5F,SAAcoJ,EAClB,GAAa,WAATpJ,GAAqBoJ,EAAI7G,OAAS,EACpC,OAkBJ,SAAesJ,GAEb,IADAA,EAAM5G,OAAO4G,IACLtJ,OAAS,IACf,OAEF,IAAIpD,EAAQ,mIAAmI2M,KAC7ID,GAEF,IAAK1M,EACH,OAEF,IAAIwD,EAAIoJ,WAAW5M,EAAM,IAEzB,QADYA,EAAM,IAAM,MAAMiB,eAE5B,IAAK,QACL,IAAK,OACL,IAAK,MACL,IAAK,KACL,IAAK,IACH,OAAOuC,EAAI6I,EACb,IAAK,QACL,IAAK,OACL,IAAK,IACH,OAAO7I,EAAI4I,EACb,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAO5I,EAAI2I,EACb,IAAK,QACL,IAAK,OACL,IAAK,MACL,IAAK,KACL,IAAK,IACH,OAAO3I,EAAI0I,EACb,IAAK,UACL,IAAK,SACL,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAO1I,EAAIyI,EACb,IAAK,UACL,IAAK,SACL,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAOzI,EAAID,EACb,IAAK,eACL,IAAK,cACL,IAAK,QACL,IAAK,OACL,IAAK,KACH,OAAOC,EACT,QACE,QAvEKqJ,CAAM5C,GACR,GAAa,WAATpJ,GAAqBiM,SAAS7C,GACvC,OAAOxD,EAAQsG,KA0GnB,SAAiBpD,GACf,IAAI4C,EAAQvG,KAAK4F,IAAIjC,GACrB,GAAI4C,GAASJ,EACX,OAAOG,EAAO3C,EAAI4C,EAAOJ,EAAG,OAE9B,GAAII,GAASL,EACX,OAAOI,EAAO3C,EAAI4C,EAAOL,EAAG,QAE9B,GAAIK,GAASN,EACX,OAAOK,EAAO3C,EAAI4C,EAAON,EAAG,UAE9B,GAAIM,GAAShJ,EACX,OAAO+I,EAAO3C,EAAI4C,EAAOhJ,EAAG,UAE9B,OAAOoG,EAAK,MAxHYqD,CAAQ/C,GAiFlC,SAAkBN,GAChB,IAAI4C,EAAQvG,KAAK4F,IAAIjC,GACrB,GAAI4C,GAASJ,EACX,OAAOnG,KAAKyG,MAAM9C,EAAKwC,GAAK,IAE9B,GAAII,GAASL,EACX,OAAOlG,KAAKyG,MAAM9C,EAAKuC,GAAK,IAE9B,GAAIK,GAASN,EACX,OAAOjG,KAAKyG,MAAM9C,EAAKsC,GAAK,IAE9B,GAAIM,GAAShJ,EACX,OAAOyC,KAAKyG,MAAM9C,EAAKpG,GAAK,IAE9B,OAAOoG,EAAK,KA/F2BsD,CAAShD,GAEhD,MAAM,IAAInD,MACR,wDACErE,KAAKC,UAAUuH,M,8CCjCf7H,EAAQC,EAAQ,IAARA,CAAiB,+BAEzB8C,EAAoB9C,EAAQ,KAQlC9C,EAAON,QAAU,SAAuByI,GAAsB,MAAdjB,EAAc,uDAAJ,GACpDyG,EAAQxF,EAAO8D,MAAM,WAAW2B,QAAO,SAAC3G,GAAD,OAAUA,KACjD4G,EAAU,GAF8C,IAG3CF,GAH2C,IAG5D,2BAAwB,KAAf1G,EAAe,QAClBK,EAAQ1B,EAAkBqB,EAAMC,GAChCI,GAAOuG,EAAQzE,KAAK9B,IALkC,8BAQ5D,GAAIuG,EAAQhK,OAAS,EAEnB,IADA,IAAIoE,EAAW4F,EAAQ,GAAG5F,SACjBnE,EAAI,EAAGA,EAAI+J,EAAQhK,OAAQC,IAClC,GAAI+J,EAAQ/J,GAAGmE,WAAaA,EAI1B,MAHApF,EAAM,sGAAD,OACmGgL,EAAQ,GAAG5F,SAD9G,aAC2H4F,EAAQ/J,GAAGmE,WAErI,IAAIV,MAAM,qCAItB,OAAOsG,I,iCC7BT,IAAMhL,EAAQC,EAAQ,IAARA,CAAiB,uCAEzBkD,EAAsBlD,EAAQ,KAC9BgE,EAAkBhE,EAAQ,KAC1BgD,EAAyBhD,EAAQ,KACjCiE,EAAajE,EAAQ,KAErBkE,EAAkBlE,EAAQ,KAgBhC9C,EAAON,QAAU,SAA8BuH,EAAMC,GACnD,MAAmDA,EAA7CE,eAAN,WAAmDF,EAA5BG,uBAAvB,SAGAJ,EAAOA,EAAKzG,QAAQ,cAAe,IAEnC,IACImH,EADAL,EAAQ,GAEZ,IAAIR,EAAgBG,GASlB,MADApE,EAAM,oBAAqBoE,GACrB,IAAIM,MAAJ,wCAC6BvB,EAAoBiB,GAAM7B,SAAS,MAYxE,OArBEkC,EAAMI,MAA6C,IAArCvF,SAAS8E,EAAKW,UAAU,EAAG,GAAI,IAC7CD,EAAcX,EAAgBC,EAAKW,UAAU,EAAGX,EAAKpD,OAAS,GAAIqD,GAClEI,EAAMW,SAAWlB,EACfE,EAAKW,UAAUX,EAAKpD,OAAS,EAAGoD,EAAKpD,OAAS,IAEhDyD,EAAMwG,WAAahI,EAAuBwB,EAAMW,UAQ9Cb,EACFlC,OAAO2C,OAAOP,EAAOK,EAAYG,YAEjCR,EAAMQ,WAAaH,EAAYG,WAE7BT,IACFC,EAAMD,gBAAkBM,EAAYN,iBAE/BC,I,iCCrDTtH,EAAON,QAAU,SAAgCqO,GAC/C,QAAiBvF,IAAbuF,EAAJ,CAEA,GAAwB,IAApBA,EAASlK,OACX,OAAgC,IAAzBkK,EAASvE,WAAW,GAAWuE,EAASvE,WAAW,GAE1D,MAAM,IAAIjC,MAAM,kD,iCCNpB,IAAMW,EAAoBpF,EAAQ,KAE5BsD,EAAgBtD,EAAQ,KAE9B9C,EAAON,QAAU,SAA0BmJ,EAAO1E,EAAOoE,GAEvD,OACEpE,GAFwB+D,EAAkBK,GAEfT,WAAW1B,EAAcyC,IAAQC,QAAU,K,iCCM1E,IAAM9C,EAAsBlD,EAAQ,KAC9BkL,EAAalL,EAAQ,KACrBuD,EAAgBvD,EAAQ,KAE9B9C,EAAON,QAAU,WAA4D,IAAlCuO,EAAkC,uDAA3B,GAAIvF,EAAuB,uDAAJ,GAClEuF,EAAKnG,aAAYmG,EAAKnG,WAAa,IACxC,IAAIoG,EAAS,GACbA,GAAUhE,OAAiB,EAAV+D,EAAKzG,IACnBpC,SAAS,IACT+I,SAAS,EAAG,KACfD,GAAUhE,OAAoB,EAAb+D,EAAKvG,OACnBtC,SAAS,IACT+I,SAAS,EAAG,KACf,IAAK,IAAIrK,EAAI,EAAGA,EAAI4E,EAAkB5E,IAAK,CACzC,IAAI+E,EAAQxC,EAAcvC,GAC1BoK,GAAUF,EAAWC,EAAKnG,WAAWe,IAMvC,OAJAqF,GAAUF,EAAWC,EAAKlG,SAC1BmG,GAAUF,EAAWC,EAAKjG,YAC1BkG,GAAUF,EAAWC,EAAKhG,WAC1BiG,GAAUlI,EAAoBkI,GAAQ9I,SAAS,IAAI+I,SAAS,EAAG,MACjDC,gB,iCClChBpO,EAAON,QAAU,WAAkC,IAAdyE,EAAc,uDAAN,KAK3C,OAJIA,EAAQ,OAASA,GAAS,OAAmB,OAAVA,KAAgBA,GAAS,OAC5DA,EAAQ,IACVA,GAAS,OAEJ+F,OAAO/F,GAAOiB,SAAS,IAAI+I,SAAS,EAAG,KAAKC","file":"static/js/2.61105fde.chunk.js","sourcesContent":["/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper;","'use strict';\n\nmodule.exports = function calculateCheckDigit(hexString) {\n  let checkDigit = 0;\n  for (let i = 0; i < hexString.length; i = i + 2) {\n    checkDigit ^= parseInt(`${hexString[i]}${hexString[i + 1]}`, 16);\n  }\n  // console.log(checkDigit.toString(16));\n  return checkDigit;\n};\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","'use strict';\n\nmodule.exports = {\n  parseMultilog: require('./parser/parseMultilog'),\n  parseMultilogLine: require('./parser/parseMultilogLine'),\n  parseCurrentSettings: require('./parser/parseCurrentSettings'),\n  deviceIdNumberToString: require('./util/deviceIdNumberToString'),\n  deviceIdStringToNumber: require('./util/deviceIdStringToNumber'),\n  calculateCheckDigit: require('./util/calculateCheckDigit'),\n  valueToRawNumber: require('./util/valueToRawNumber'),\n  createCompactLog: require('./creator/createCompactLog'),\n  DevicesInfo: require('legoino-device-information'),\n  labelToNumber: require('./util/labelToNumber'),\n  numberToLabel: require('./util/numberToLabel'),\n};\n","'use strict';\n\nmodule.exports = function hexToInt16(hexa) {\n  let value = parseInt(`${hexa}`, 16);\n  if (value > 32767) {\n    return (65536 - value) * -1;\n  }\n  return value;\n};\n","'use strict';\n\nmodule.exports = function numberToLabel(value) {\n  if (value < 26) {\n    return String.fromCharCode(65 + value);\n  } else {\n    return String.fromCharCode(Math.floor(value / 26) + 64, 65 + (value % 26));\n  }\n};\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","'use strict';\n\nconst debug = require('debug')('legoino:parser:processMultilogLine');\n\nconst checkCheckDigit = require('../util/checkCheckDigit');\nconst hexToInt16 = require('../util/hexToInt16');\n\nconst parseParameters = require('./parseParameters');\n\n/**\n * Parse a multilog line.\n * @param {string} line\n * @param {object} [options={}]\n * @param {boolean} [options.hasEvent=true] Specify wether the log contains an event\n * @param {boolean} [options.flatten=false] The parsed log will have all properties at the same level (no sub-object for the parameters)\n * @param {boolean} [options.parametersArray=false] Add an array with all the parameters to the result\n * @param {boolean} [options.parameterLabel=false] Use the variable property of device info as property name\n * @param {boolean} [options.parameterInfo=false] Show all the information about the parameter in the value\n * @param {string} [options.kind=undefined] Specify a device type from those that exist in `legoino-device-information`\n * @param {object} [options.deviceInformation=undefined] Pass information for a device that does not exist in `legoino-device-information`. To use if `options.kind` is undefined.\n * @return {object} The parsed line.\n *\n * Warning: parameters that are undefined are not returned!\n */\nmodule.exports = function parseMultilogLine(line, options) {\n  let { hasEvent = true, flatten = false, parametersArray = false } = options;\n\n  // keep only valid characters\n  line = line.replace(/[^0-9A-F]/gi, '');\n\n  const entry = {};\n\n  if (checkCheckDigit(line)) {\n    entry.id = parseInt(`${line.substr(0, 8)}`, 16);\n    entry.epoch = parseInt(`${line.substr(8, 8)}`, 16) * 1000;\n    let parseResult = parseParameters(\n      line.substring(16, line.length - 6 - (hasEvent ? 8 : 0)),\n      options,\n    );\n    if (flatten) {\n      Object.assign(entry, parseResult.parameters);\n    } else {\n      entry.parameters = parseResult.parameters;\n    }\n    if (parametersArray) {\n      entry.parametersArray = parseResult.parametersArray;\n    }\n\n    if (hasEvent) {\n      entry.eventId = hexToInt16(line.substr(line.length - 14, 4));\n      entry.eventValue = hexToInt16(line.substr(line.length - 10, 4));\n    }\n\n    entry.deviceId = hexToInt16(line.substr(line.length - 6, 4));\n    if (!entry.deviceId) {\n      throw new Error('Could not parse device id in processMultilogLine');\n    }\n  } else {\n    debug('Check digit error', line);\n    throw new Error('Check digit error');\n  }\n  return entry;\n};\n","'use strict';\n\nconst calculateCheckDigit = require('./calculateCheckDigit');\n\nmodule.exports = function checkCheckDigit(line) {\n  if (calculateCheckDigit(line) === 0) return true;\n  return false;\n};\n","'use strict';\n\nconst DeviceInformation = require('legoino-device-information');\n\nconst hexToInt16 = require('../util/hexToInt16');\nconst numberToLabel = require('../util/numberToLabel');\n\n/**\n * Parse a buffer (String) containing 4 hexadecimal symbols per parameter\n * @param {string} buffer\n * @param {object} [options={}]\n * @param {boolean} [options.parameterLabel=false] Use the variable property of device info as property name\n * @param {boolean} [options.parameterInfo=false] Show all the information about the parameter in the value\n * @param {boolean} [options.flagInfo=false] Show all the information about the flags, can only be true if `options.parameterInfo=true`!\n * @param {string} [options.kind=undefined] Specify a device type from those that exist in `legoino-device-information`\n * @param {object} [options.deviceInformation=undefined] Pass information for a device that does not exist in `legoino-device-information`. To use if `options.kind` is undefined.\n * @return {object} The parsed parameters\n */\n\nmodule.exports = function parseParameters(buffer, options = {}) {\n  let {\n    parameterLabel = false,\n    parameterInfo = false,\n    flagInfo = false,\n    kind = undefined,\n    deviceInformation = DeviceInformation[kind],\n  } = options;\n\n  if (parameterInfo === false && flagInfo === true) {\n    throw new Error('parameterInfo must be true when flagInfo is true');\n  }\n\n  // console.log(kind);\n  // console.log(deviceInformation);\n\n  let parameters = {};\n  let parametersArray = [];\n\n  let numberParameters = buffer.length / 4;\n  if (\n    deviceInformation &&\n    numberParameters !== deviceInformation.numberParameters &&\n    numberParameters !== deviceInformation.numberLogParameters\n  ) {\n    throw new Error(\n      'The number of parameters is not equal to the one described in the deviceInformation',\n    );\n  }\n\n  if (!deviceInformation) deviceInformation = { parameters: [] };\n\n  for (let i = 0; i < numberParameters; i++) {\n    if (!deviceInformation.parameters[i]) {\n      deviceInformation.parameters[i] = {\n        variable: numberToLabel(i),\n        label: numberToLabel(i),\n        factor: 1,\n      };\n    }\n\n    let valueNumber = hexToInt16(buffer.substring(i * 4, i * 4 + 4));\n    if (valueNumber === -32768) valueNumber = undefined;\n\n    let label = parameterLabel\n      ? deviceInformation.parameters[i].variable ||\n        deviceInformation.parameters[i].name\n      : numberToLabel(i);\n\n    if (label === undefined) continue;\n\n    let value;\n    if (parameterInfo) {\n      value = Object.assign({}, deviceInformation.parameters[i], {\n        index: i,\n        originalValue: valueNumber,\n        value:\n          valueNumber === undefined\n            ? valueNumber\n            : valueNumber / (deviceInformation.parameters[i].factor || 1),\n      });\n      if (flagInfo) {\n        let flags = deviceInformation.parameters[i].flags;\n\n        if (flags === undefined) continue;\n        for (let key in flags) {\n          flags[key].value =\n            (value.value & (1 << flags[key].bit)) >> flags[key].bit;\n        }\n\n        value.flags = flags;\n      }\n    } else {\n      value =\n        valueNumber === undefined\n          ? valueNumber\n          : valueNumber / (deviceInformation.parameters[i].factor || 1);\n    }\n\n    if (value !== undefined) parameters[label] = value;\n    parametersArray.push(value);\n  }\n\n  return { parameters, parametersArray };\n};\n","'use strict';\n\nmodule.exports = function deviceIdNumberToString(idNumber) {\n  return (\n    String.fromCharCode((idNumber / 256) | 0) +\n    String.fromCharCode(idNumber % 256)\n  );\n};\n","'use strict';\n\nmodule.exports = function labelToNumber(code) {\n  let value = 0;\n  for (let char of code) {\n    value *= 26;\n    value += char.charCodeAt(0) - 64;\n  }\n  return value - 1;\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","'use strict';\n\nconst debug = require('debug')('legoino:parser:parseMutilog');\n\nconst parseMultilogLine = require('./parseMultilogLine');\n\n/**\n * Parse a multilog string\n * @param {*} buffer\n * @param {object} [options={}]\n */\n\nmodule.exports = function parseMultiLog(buffer, options = {}) {\n  let lines = buffer.split(/[\\r\\n]+/).filter((line) => line);\n  let entries = [];\n  for (let line of lines) {\n    let entry = parseMultilogLine(line, options);\n    if (entry) entries.push(entry);\n  }\n  // Check that all entries come from the same device!!\n  if (entries.length > 0) {\n    let deviceId = entries[0].deviceId;\n    for (let i = 1; i < entries.length; i++) {\n      if (entries[i].deviceId !== deviceId) {\n        debug(\n          `checkdigit is ok but all lines did not come from the same device. There are at least 2 device ids: ${entries[0].deviceId}, ${entries[i].deviceId}`,\n        );\n        throw new Error('all lines do not have the same id');\n      }\n    }\n  }\n  return entries;\n};\n","'use strict';\n\nconst debug = require('debug')('legoino:parser:parseCurrentSettings');\n\nconst calculateCheckDigit = require('../util/calculateCheckDigit');\nconst checkCheckDigit = require('../util/checkCheckDigit');\nconst deviceIdNumberToString = require('../util/deviceIdNumberToString');\nconst hexToInt16 = require('../util/hexToInt16');\n\nconst parseParameters = require('./parseParameters');\n\n/**\n * Parse a current settings log.\n * @param {string} line\n * @param {object} [options={}]\n * @param {boolean} [options.flatten=false] The parsed log will have all properties at the same level (no sub-object for the parameters)\n * @param {boolean} [options.parametersArray=false] Add an array with all the parameters to the result\n * @param {boolean} [options.parameterLabel=false] Use the variable property of device info as property name\n * @param {boolean} [options.parameterInfo=false] Show all the information about the parameter in the value\n * @param {string} [options.kind=undefined] Specify a device type from those that exist in `legoino-device-information`\n * @param {object} [options.deviceInformation=undefined] Pass information for a device that does not exist in `legoino-device-information`. To use if `options.kind` is undefined.\n * @return {object} The parsed settings.\n *\n * Warning: parameters that are undefined are not returned!\n */\nmodule.exports = function parseCurrentSettings(line, options) {\n  let { flatten = false, parametersArray = false } = options;\n\n  // keep only valid characters\n  line = line.replace(/[^0-9A-F]/gi, '');\n\n  let entry = {};\n  let parseResult;\n  if (checkCheckDigit(line)) {\n    entry.epoch = parseInt(line.substring(0, 8), 16) * 1000;\n    parseResult = parseParameters(line.substring(8, line.length - 6), options);\n    entry.deviceId = hexToInt16(\n      line.substring(line.length - 6, line.length - 2),\n    );\n    entry.deviceCode = deviceIdNumberToString(entry.deviceId);\n  } else {\n    debug('Check digit error', line);\n    throw new Error(\n      `Check digit error. Should be: ${calculateCheckDigit(line).toString(16)}`,\n    );\n  }\n\n  if (flatten) {\n    Object.assign(entry, parseResult.parameters);\n  } else {\n    entry.parameters = parseResult.parameters;\n  }\n  if (parametersArray) {\n    entry.parametersArray = parseResult.parametersArray;\n  }\n  return entry;\n};\n","'use strict';\n\nmodule.exports = function deviceIdStringToNumber(idString) {\n  if (idString === undefined) return undefined;\n\n  if (idString.length === 2) {\n    return idString.charCodeAt(0) * 256 + idString.charCodeAt(1);\n  } else {\n    throw new Error('Id does not have the expected 2 char format');\n  }\n  // return idString;\n};\n","'use strict';\n\nconst DeviceInformation = require('legoino-device-information');\n\nconst labelToNumber = require('./labelToNumber');\n\nmodule.exports = function valueToRawNumber(label, value, kind) {\n  const deviceInformation = DeviceInformation[kind];\n  return (\n    value * (deviceInformation.parameters[labelToNumber(label)].factor || 1)\n  );\n};\n","'use strict';\n\n/**\n * A log entry is a hexadecimal line composed of :\n * - a sequential ID (8)\n * - epoch (8)\n * - a list of parameters values (n * 4)\n * - a log event ID (4)\n * - a log event value (4)\n * - a device ID (4)\n * - a checkdigit (2)\n *\n * This means that for 26 parameters, the length of a log is 134 hexadecimal characters.\n */\n\nconst calculateCheckDigit = require('../util/calculateCheckDigit');\nconst int16ToHex = require('../util/int16ToHex');\nconst numberToLabel = require('../util/numberToLabel');\n\nmodule.exports = function createCompactLog(data = {}, numberParameters = 26) {\n  if (!data.parameters) data.parameters = [];\n  let result = '';\n  result += Number(data.id | 0)\n    .toString(16)\n    .padStart(8, '0');\n  result += Number(data.epoch | 0)\n    .toString(16)\n    .padStart(8, '0');\n  for (let i = 0; i < numberParameters; i++) {\n    let label = numberToLabel(i);\n    result += int16ToHex(data.parameters[label]);\n  }\n  result += int16ToHex(data.eventId);\n  result += int16ToHex(data.eventValue);\n  result += int16ToHex(data.deviceId);\n  result += calculateCheckDigit(result).toString(16).padStart(2, '0');\n  return result.toUpperCase();\n};\n","'use strict';\n\nmodule.exports = function int16ToHex(value = null) {\n  if (value > 32767 || value < -32767 || value === null) value = -32768;\n  if (value < 0) {\n    value += 65536;\n  }\n  return Number(value).toString(16).padStart(4, '0').toUpperCase();\n};\n"],"sourceRoot":""}