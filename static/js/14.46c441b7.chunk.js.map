{"version":3,"sources":["assets/icons/treeDots.svg","pages/LocalDeviceDetails/GeneralTab.jsx","pages/LocalDeviceDetails/HistoryTab.jsx","pages/LocalDeviceDetails/ConfigTab.jsx","pages/LocalDeviceDetails/AdvancedTab.jsx","pages/LocalDeviceDetails/index.jsx"],"names":["_path","GeneralTab","data","device","useNotification","addInfoNotification","addErrorNotification","onSendCommand","command","a","sendCommand","id","resultMsg","console","log","document","activeElement","blur","className","onClick","COMMANDS","runExperiment","kinetic","epoch","title","parametersArray","map","param","index","name","label","value","factor","unit","info","description","HistoryTab","refreshInterval","useState","headers","setHeaders","setData","useEffect","_id","getSavedData","then","rows","initHeaders","connected","timeout","setInterval","clearInterval","dataArray","length","heads","h","Row","useCallback","val","classnames","compact","p","headerValues","useTable","itemsPerPage","withText","pagination","sliceData","size","variant","clearSavedData","d","Header","Tr","intervals","v","type","ConfigTab","setRefreshInterval","refreshData","writableParams","setWritableParams","_refreshInterval","_setRefreshInterval","parameters","values","Object","keys","filter","key","writable","onSaveValue","setParameter","message","onReset","reset","onSleep","sleep","options","onSelect","option","initialValue","placeholder","onSave","_excluded","_extends","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgTreeDots","_ref","svgRef","titleId","props","viewBox","ref","ForwardRef","AdvancedTab","deviceId","setDeviceId","setCommand","results","setResults","init","help","onSend","onHelp","setTimeout","onSettings","settings","style","fontFamily","onChange","event","onKeyDown","fill","disabled","tabs","LocalDevices","match","history","currentDevice","setCurrentDevice","selectedTab","setSelectedTab","isModalOpen","setIsModalOpen","currentData","setCurrentData","addWarningNotification","params","getDevice","_device","getCurrentData","compactSettings","compressedResults","parseCurrentSettings","kind","parameterInfo","saveDataRow","getLastSavedData","row","setDeviceConnectivity","cleanUp","continuousUpdateDevices","connectedDevices","isConnected","intervalId","getConnectedDevices","onRequest","requestDevices","onSaveDevice","deviceInfo","updateDevice","goBack","dot","rounded","BadgeSize","SMALL","color","selected","tab","renderTabContent","LocalDeviceModal","isOpen","onClose","initialValues"],"mappings":"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","file":"static/js/14.46c441b7.chunk.js","sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTreeDots(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 20 20\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTreeDots);\nexport default __webpack_public_path__ + \"static/media/treeDots.68360f32.svg\";\nexport { ForwardRef as ReactComponent };","import useNotification from '../../hooks/useNotification';\nimport { sendCommand } from '../../services/localDeviceService';\nimport { COMMANDS } from '../../services/devicesOptions';\n\nimport { DividerCustom, CardValue } from '../../components';\nimport { Button } from '../../components/tailwind-ui';\n\nconst GeneralTab = ({ data, device }) => {\n  const { addInfoNotification, addErrorNotification } = useNotification();\n\n  const onSendCommand = async (command) => {\n    try {\n      const resultMsg = await sendCommand(device.id, command);\n      console.log('runExperiment');\n      console.log(resultMsg);\n      addInfoNotification(resultMsg);\n    } catch (e) {\n      console.log('runExperiment error');\n      console.log(e);\n      addErrorNotification(e);\n    }\n    document.activeElement.blur();\n  };\n\n  return (\n    <div className=\"flex flex-col mt-2\">\n      <div className=\"flex flex-row justify-end\">\n        <Button\n          className=\"mx-2\"\n          onClick={() => onSendCommand(COMMANDS.runExperiment)}\n        >\n          Run experiment\n        </Button>\n        <Button\n          className=\"mx-2\"\n          onClick={() => onSendCommand(COMMANDS.kinetic)}\n        >\n          Run Kinetic\n        </Button>\n      </div>\n      {data?.epoch && (\n        <DividerCustom\n          title={\n            <p className=\" text-base font-medium text-black self-start\">\n              Awake time:\n              <span className=\"mx-1 text-sm text-neutral-500\">\n                {data?.epoch / 1000 + 's'}\n              </span>\n            </p>\n          }\n        />\n      )}\n      <div className=\" flex flex-row justify-around flex-wrap\">\n        {data?.parametersArray?.map((param, index) => (\n          <CardValue\n            key={index}\n            title={param.name || param.label}\n            value={param.value * param.factor}\n            unit={param.unit}\n            info={param.description}\n            className=\"w-full sm:w-1/2  md:w-1/4 lg:w-1/5 flex\"\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default GeneralTab;\n","import { useCallback, useState, useEffect } from 'react';\nimport { Button, Table, Td, Th, useTable } from '../../components/tailwind-ui';\nimport {\n  getSavedData,\n  clearSavedData,\n} from '../../services/localDeviceService';\n\nconst ROWS_BY_PAGE = 10;\n\nconst HistoryTab = ({ device, refreshInterval }) => {\n  const [headers, setHeaders] = useState([]);\n  const [data, setData] = useState([]);\n\n  // extract headers from the first element on data\n  useEffect(() => {\n    if (device?._id) {\n      getSavedData(device?._id).then((rows) => {\n        initHeaders(rows);\n        setData(rows);\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [device?._id]);\n\n  useEffect(() => {\n    if (device?._id && device?.connected) {\n      const timeout = setInterval(\n        () =>\n          getSavedData(device?._id).then((rows) => {\n            initHeaders(rows);\n            setData(rows);\n          }),\n        refreshInterval,\n      );\n      return () => clearInterval(timeout);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [device?._id, device?.connected, refreshInterval]);\n\n  const initHeaders = (dataArray) => {\n    if (headers.length === 0 && dataArray && dataArray.length > 0) {\n      const heads = dataArray[0].parametersArray?.map((h) => h.name || h.label);\n      setHeaders(['Epoch', ...heads]);\n    }\n  };\n\n  const onClear = () => {\n    clearSavedData(device?._id).then(() => setData([]));\n  };\n\n  const Row = useCallback((val) => {\n    const classnames = 'text-xs text-center p-2';\n    return (\n      <tr>\n        <Td compact={true} className={classnames + ' font-medium'}>\n          {val.value.epoch}\n        </Td>\n        {val.value.parametersArray?.map((p, index) => (\n          <Td key={index} compact={true} className={classnames}>\n            {p.value}\n          </Td>\n        ))}\n      </tr>\n    );\n  }, []);\n\n  const headerValues = useCallback(() => {\n    return (\n      <tr>\n        {headers?.map((h) => (\n          <Th\n            key={h}\n            className=\"p-2 text-center font-normal normal-case\"\n            compact={true}\n          >\n            {h}\n          </Th>\n        ))}\n      </tr>\n    );\n  }, [headers]);\n\n  const { pagination, data: sliceData } = useTable(data, {\n    itemsPerPage: ROWS_BY_PAGE,\n    withText: true,\n  });\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"w-full p-2 flex flex-row justify-end\">\n        <Button size=\"small\" variant=\"white\" onClick={onClear}>\n          Clear\n        </Button>\n      </div>\n      <div className=\"w-full p-1 pb-4 overflow-x-auto\">\n        <Table\n          pagination={pagination}\n          data={sliceData.map((d, index) => ({\n            ...d,\n            id: d.epoch + index,\n          }))}\n          Header={headerValues}\n          Tr={Row}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default HistoryTab;\n","import { useState, useEffect } from 'react';\n\nimport { Button, Dropdown } from '../../components/tailwind-ui';\nimport { CardInput, DividerCustom } from '../../components';\nimport useNotification from '../../hooks/useNotification';\nimport { sendCommand } from '../../services/localDeviceService';\nimport { COMMANDS } from '../../services/devicesOptions';\n\nconst intervals = [1, 2, 5, 10, 30, 60, 120, 300].map((v) => ({\n  label: v > 59 ? `${v / 60} m` : `${v} s`,\n  value: v * 1000,\n  type: 'option',\n}));\n\n/**\n *\n * @param {Object} device\n * @param {number} refreshInterval\n * @param {function} setRefreshInterval\n * @param {Object} data\n * @param {function} refreshData\n */\n\nconst ConfigTab = ({\n  device,\n  refreshInterval,\n  setRefreshInterval,\n  data,\n  refreshData,\n}) => {\n  const [writableParams, setWritableParams] = useState([]);\n  const [_refreshInterval, _setRefreshInterval] = useState({\n    label: refreshInterval / 1000 + ' s',\n    value: refreshInterval,\n    type: 'option',\n  });\n\n  const { addInfoNotification, addErrorNotification } = useNotification();\n\n  // get Writable params from data\n  useEffect(() => {\n    const parameters = data?.parameters;\n    const values =\n      parameters &&\n      Object.keys(parameters)\n        .filter((key) => parameters[key].writable)\n        .map((key) => ({ ...parameters[key], key })); // the key is used to send the update command\n    setWritableParams(values);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  const onSaveValue = async (key, value) => {\n    try {\n      console.log(key + ' is set to: ' + value);\n      await sendCommand(device.id, COMMANDS.setParameter(key, value));\n      refreshData();\n      addInfoNotification('saved', '', 1000);\n    } catch (e) {\n      addErrorNotification(e.message);\n    }\n  };\n\n  const OnRefreshIntervalChanged = (option) => {\n    _setRefreshInterval(option);\n    setRefreshInterval(option.value);\n    document.activeElement.blur();\n  };\n\n  const onReset = async () => {\n    try {\n      const resultMsg = await sendCommand(device.id, COMMANDS.reset);\n      addInfoNotification(resultMsg);\n      refreshData();\n    } catch (e) {\n      addErrorNotification(e.message);\n    }\n    document.activeElement.blur();\n  };\n\n  const onSleep = async () => {\n    try {\n      await sendCommand(device.id, COMMANDS.sleep);\n    } catch (e) {\n      addErrorNotification(e.message);\n    }\n    document.activeElement.blur();\n  };\n\n  return (\n    <div className=\"w-full flex flex-col \">\n      <div className=\"mt-2 flex flex-col sm:flex-row justify-between\">\n        <div className=\"my-1 mx-2 flex flex-row items-center justify-end\">\n          <p className=\"mx-1 text-sm font-medium text-neutral-700\">\n            Refresh interval :\n          </p>\n          <Dropdown\n            title={_refreshInterval.label}\n            options={[intervals]}\n            onSelect={OnRefreshIntervalChanged}\n          />\n        </div>\n        <div className=\"my-1 flex flex-row justify-end\">\n          <Button className=\"mx-2\" variant=\"white\" onClick={onSleep}>\n            Sleep\n          </Button>\n          <Button className=\"mx-2 \" variant=\"white\" onClick={onReset}>\n            Reset Device\n          </Button>\n        </div>\n      </div>\n\n      {writableParams?.length > 0 && (\n        <>\n          <DividerCustom title=\"Edit parameters\" />\n          <div className=\"flex flex-row justify-start flex-wrap\">\n            {writableParams.map((p, index) => (\n              <CardInput\n                key={index}\n                id={p.key}\n                title={p.name || p.label}\n                initialValue={p.value * p.factor}\n                placeholder={p.name}\n                unit={p.unit}\n                info={p.description}\n                onSave={onSaveValue}\n                className=\"w-full sm:w-1/2  md:w-1/4 lg:w-1/5 flex\"\n              />\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ConfigTab;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Dropdown } from '../../components/tailwind-ui';\nimport { ReactComponent as TreeDotsIcon } from '../../assets/icons/treeDots.svg';\nimport { sendCommand } from '../../services/localDeviceService';\nimport { COMMANDS } from '../../services/devicesOptions';\nimport useNotification from '../../hooks/useNotification';\n\nconst AdvancedTab = ({ device }) => {\n  const [deviceId, setDeviceId] = useState();\n  const [command, setCommand] = useState('');\n  const [results, setResults] = useState('');\n\n  const { addErrorNotification } = useNotification();\n\n  useEffect(() => {\n    setDeviceId(device?.id);\n    init();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [device?.id]);\n\n  const init = async () => {\n    if (device?.id && device?.connected) {\n      setCommand(COMMANDS.help);\n      const data = await sendCommand(device?.id, COMMANDS.help);\n      setResults(data);\n    }\n  };\n\n  const onSend = async () => {\n    if (command) {\n      try {\n        const data = await sendCommand(deviceId, command);\n        setResults(data);\n      } catch (e) {\n        addErrorNotification(\n          e.name,\n          !device?.connected ? `${device?.name} is disconnected` : e.message,\n        );\n      }\n    }\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      onSend();\n    }\n  };\n\n  const onHelp = async () => {\n    try {\n      setCommand(COMMANDS.help);\n      const data = await sendCommand(deviceId, COMMANDS.help);\n      setResults(data);\n    } catch (e) {\n      addErrorNotification(\n        e.name,\n        !device?.connected ? `${device?.name} is disconnected` : e.message,\n      );\n    }\n    setTimeout(() => document.activeElement.blur(), 100);\n  };\n\n  const onSettings = async () => {\n    try {\n      setCommand(COMMANDS.settings);\n      const data = await sendCommand(deviceId, COMMANDS.settings);\n      setResults(data);\n    } catch (e) {\n      addErrorNotification(\n        e.name,\n        !device?.connected ? `${device?.name} is disconnected` : e.message,\n      );\n    }\n    setTimeout(() => document.activeElement.blur(), 100);\n  };\n\n  const handleDropdownSelect = (option) =>\n    option.label === 'Help'\n      ? onHelp()\n      : option.label === 'Settings'\n      ? onSettings()\n      : null;\n\n  return (\n    <div className=\"w-full   \">\n      <div className=\"flex flex-col\">\n        <div className=\"w-full my-1 md:max-w-md flex flex-row\">\n          <input\n            className=\"w-full py-1 px-2 border rounded-md text-base\"\n            placeholder=\"h (for help)\"\n            style={{ fontFamily: 'monospace' }}\n            value={command}\n            onChange={(event) => setCommand(event.target.value)}\n            onKeyDown={handleKeyDown}\n          />\n          <Button\n            className=\"mx-2 md:mr-0\"\n            variant=\"primary\"\n            size=\"small\"\n            onClick={onSend}\n          >\n            Send\n          </Button>\n          {/* display just in small screens */}\n          <div className=\"flex ml-4 self-center md:hidden\">\n            <Dropdown\n              options={[\n                [\n                  { label: 'Help', type: 'option' },\n                  { label: 'Settings', type: 'option' },\n                ],\n              ]}\n              onSelect={handleDropdownSelect}\n            >\n              <TreeDotsIcon className=\"w-5 h-5\" fill=\"currentColor\" />\n            </Dropdown>\n          </div>\n        </div>\n        <div className=\"w-full mt-2 flex flex-col md:flex-row md:max-w-2xl\">\n          <div className=\"w-full h-96 md:mr-2 flex md:flex-1 border rounded-md overflow-auto overflow-x-auto\">\n            <textarea\n              className=\"w-full text-sm font-semibold text-success-400 bg-neutral-900\"\n              style={{ fontFamily: 'monospace' }}\n              value={results}\n              onChange={(event) => console.log(event.target.value)}\n              disabled\n            />\n          </div>\n          <div className=\"hidden flex-col md:flex\">\n            <Button\n              className=\"m-1\"\n              variant=\"white\"\n              size=\"xSmall\"\n              onClick={onHelp}\n            >\n              Help\n            </Button>\n            <Button\n              className=\"m-1\"\n              variant=\"white\"\n              size=\"xSmall\"\n              onClick={onSettings}\n            >\n              Settings\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdvancedTab;\n","import { useState, useEffect } from 'react';\nimport { parseCurrentSettings } from 'legoino-util';\n\nimport {\n  BadgeSize,\n  Badge,\n  HorizontalNavigation,\n  Button,\n  SvgSolidPencilAlt,\n} from '../../components/tailwind-ui';\nimport useNotification from '../../hooks/useNotification';\nimport {\n  sendCommand,\n  requestDevices,\n  getConnectedDevices,\n  continuousUpdateDevices,\n  saveDataRow,\n  getLastSavedData,\n} from '../../services/localDeviceService';\nimport { COMMANDS } from '../../services/devicesOptions';\nimport { getDevice, updateDevice } from '../../services/devicesService';\nimport GeneralTab from './GeneralTab';\nimport HistoryTab from './HistoryTab';\nimport ConfigTab from './ConfigTab';\nimport AdvancedTab from './AdvancedTab';\nimport LocalDeviceModal from '../LocalDevices/LocalDeviceModal';\nimport { useCallback } from 'react';\n\nconst SCAN_INTERVAL = 1000;\n\nconst tabs = ['General', 'History', 'Advanced', 'Configuration'].map((v) => ({\n  value: v,\n  label: v,\n}));\n\nconst LocalDevices = ({ match, history }) => {\n  const [currentDevice, setCurrentDevice] = useState();\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const [currentData, setCurrentData] = useState({}); // data to display\n  const [refreshInterval, setRefreshInterval] = useState(2000);\n\n  const { addWarningNotification } = useNotification();\n\n  // get device from DB just in the first render\n  useEffect(() => {\n    const deviceId = `${match.params.id}`;\n    getDevice(deviceId).then((_device) => {\n      setCurrentDevice(_device);\n    });\n  }, [match.params.id]);\n\n  // get data from device\n  const getCurrentData = useCallback(async () => {\n    if (currentDevice?.id) {\n      if (currentDevice?.connected) {\n        try {\n          const compressedResults = await sendCommand(\n            currentDevice?.id,\n            COMMANDS.compactSettings,\n          );\n          const results = parseCurrentSettings(compressedResults, {\n            kind: currentDevice?.kind?.kind,\n            parameterInfo: true,\n            parametersArray: true,\n          });\n          setCurrentData(results);\n          saveDataRow(currentDevice._id, results);\n        } catch (e) {\n          //  console.log(e.message);\n        }\n      } else {\n        // get local saved data\n        getLastSavedData(currentDevice._id).then((row) => {\n          console.log(row);\n          if (row.length > 0) {\n            setCurrentData(row[0]);\n          }\n        });\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentDevice?.id, currentDevice?.connected]);\n\n  // get data immediately after getting device\n  useEffect(() => {\n    getCurrentData();\n  }, [getCurrentData]);\n\n  // Listen to data from device every {refreshInterval}\n  useEffect(() => {\n    if (currentDevice?.id && currentDevice?.connected) {\n      const timeout = setInterval(() => getCurrentData(), refreshInterval);\n      return () => clearInterval(timeout);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getCurrentData, refreshInterval]);\n\n  // Listen continuously to device connectivity\n  useEffect(() => {\n    setDeviceConnectivity();\n    const cleanUp = continuousUpdateDevices((connectedDevices) => {\n      const isConnected =\n        connectedDevices.filter((d) => d.id === currentDevice?.id).length > 0;\n      if (isConnected && !currentDevice?.connected) {\n        setCurrentDevice({ ...currentDevice, connected: true });\n      } else if (!isConnected && currentDevice?.connected) {\n        addWarningNotification(`${currentDevice?.name} is disconnected`);\n        setCurrentDevice({ ...currentDevice, connected: false });\n      }\n    }, SCAN_INTERVAL);\n\n    return () => cleanUp.then((intervalId) => clearInterval(intervalId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentDevice?.id, currentDevice?.connected]);\n\n  const setDeviceConnectivity = async () => {\n    const connectedDevices = await getConnectedDevices();\n    if (connectedDevices.filter((d) => d.id === currentDevice?.id).length > 0) {\n      setCurrentDevice({ ...currentDevice, connected: true });\n    }\n  };\n\n  const onRequest = async () => {\n    document.activeElement.blur();\n    await requestDevices();\n    setDeviceConnectivity();\n  };\n\n  const onSaveDevice = async (device) => {\n    const { connected, ...deviceInfo } = device;\n    updateDevice(deviceInfo).then(() => {\n      setIsModalOpen(false);\n      setCurrentDevice(device);\n    });\n  };\n\n  const renderTabContent = (tab) => {\n    switch (tab.value) {\n      case 'General':\n        return <GeneralTab data={currentData} device={currentDevice} />;\n      case 'History':\n        return (\n          <HistoryTab\n            device={currentDevice}\n            refreshInterval={refreshInterval}\n          />\n        );\n      case 'Advanced':\n        return <AdvancedTab device={currentDevice} />;\n      case 'Configuration':\n        return (\n          <ConfigTab\n            device={currentDevice}\n            refreshInterval={refreshInterval}\n            setRefreshInterval={setRefreshInterval}\n            data={currentData}\n            refreshData={() => getCurrentData()}\n          />\n        );\n      default:\n        return <div />;\n    }\n  };\n\n  return (\n    <div className=\"mx-4 pb-4\">\n      <div className=\"my-4 py-3 px-4 flex flex-col rounded-md bg-white shadow \">\n        <p\n          className=\"text-xs font-semibold underline text-primary-500 cursor-pointer\"\n          onClick={() => history.goBack()}\n        >\n          {'<< Back to devices list'}\n        </p>\n        <div className=\"mt-4 flex flex-col\">\n          <div className=\"flex flex-row items-center\">\n            <h1 className=\"mr-4 text-lg font-semibold truncate text-primary-800\">\n              {currentDevice?.name}\n            </h1>\n            <Badge\n              dot\n              rounded\n              label={currentDevice?.connected ? 'Active' : 'Inactive'}\n              size={BadgeSize.SMALL}\n              color={currentDevice?.connected ? 'success' : 'neutral'}\n              className=\"w-min h-min\"\n            />\n          </div>\n          <div className=\"flex flex-row flex-wrap justify-between items-center\">\n            <h3 className=\"mt-2 text-xs font-italic text-neutral-600 font-semibold truncate\">\n              {`${currentDevice?.kind?.name} (${currentDevice?.kind?.kind})`}\n            </h3>\n            <div className=\"flex flex-row mt-2 \">\n              <Button\n                size=\"small\"\n                variant=\"white\"\n                className=\"mr-2 \"\n                onClick={() => setIsModalOpen(true)}\n              >\n                <SvgSolidPencilAlt className=\"text-gray-700\" />\n              </Button>\n              {!currentDevice?.connected && (\n                <Button size=\"xSmall\" onClick={onRequest}>\n                  Request\n                </Button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <HorizontalNavigation\n        onSelect={setSelectedTab}\n        selected={selectedTab}\n        options={tabs}\n      />\n      <div className=\"p-3 mt-4 sm:m-0 flex flex-col items-center rounded-md sm:rounded-t-none bg-white shadow \">\n        {renderTabContent(selectedTab)}\n      </div>\n\n      <LocalDeviceModal\n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        initialValues={currentDevice}\n        onSave={onSaveDevice}\n      />\n    </div>\n  );\n};\n\nexport default LocalDevices;\n"],"sourceRoot":""}