{"version":3,"sources":["services/devicesOptions.js","hooks/useNotification.js","services/localDeviceService.js","pages/LocalDevices/SelectDeviceComponent.jsx","components/DividerCustom.jsx","assets/icons/information.svg","components/ValueCard.jsx","pages/LocalDevices/GeneralTab.jsx","pages/LocalDevices/HistoryTab.jsx","pages/LocalDevices/ConfigTab.jsx","pages/LocalDevices/index.jsx"],"names":["DEVICES_DB","DEFAULT_PORT","DEFAULT_PROTOCOL","DEVICE_PROTOCOLS","DEVICE_KINDS","Object","keys","legoinoDeviceInformation","map","key","kind","COMMANDS","compactSettings","runExpirement","kinetic","reset","sleep","setParameter","label","value","useNotification","notificationContext","useNotificationCenter","addNotification","title","message","textColor","Icon","timeout","className","clsx","content","icon","addErrorNotification","SvgSolidExclamation","addWarningNotification","addInfoNotification","SvgOutlineExclamationCircle","devicesManager","DevicesManager","navigator","serial","requestDevices","a","getConnectedDevices","updateDevices","getDevicesList","ready","connectedDevices","continuousUpdateDevices","callback","scanInterval","interval","setInterval","isFunction","sendCommand","deviceId","command","typeOptions","type","SelectDeviceComponent","device","deviceType","filter","o","onSelectDevice","onSelectType","useState","devices","setDevices","useEffect","updateConnectedDevices","cleanUp","newList","handleDevicesListChange","then","intervalId","clearInterval","length","id","renderOptions","onRequest","document","activeElement","blur","list","options","onSelect","onClick","DividerCustom","justify","_extends","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","cx","cy","r","d","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","SvgInformation","_ref","svgRef","titleId","props","xmlns","xmlnsXlink","x","y","viewBox","style","enableBackground","xmlSpace","ref","ForwardRef","ValueCard","unit","placeholder","info","editable","onChange","height","width","max-content","name","event","GeneralTab","data","onSendCommand","resultMsg","console","log","epoch","parametersArray","param","index","factor","description","HistoryTab","headers","setHeaders","heads","h","Row","useCallback","val","classnames","compact","p","headerValues","useTable","itemsPerPage","withText","pagination","sliceData","Header","Tr","intervals","v","ConfigTab","refreshInterval","setRefreshInterval","writableParams","setWritableParams","_refreshInterval","_setRefreshInterval","render","setRender","showSpinner","setShowSpinner","parameters","values","writable","reRender","setTimeout","onReset","onSleep","onSave","saved","edited","option","variant","newValue","newValues","onValueChanged","tabs","LocalDevices","selectedDevice","setSelectedDevice","selectedType","setSelectedType","selectedTab","setSelectedTab","currentData","setCurrentData","allData","setAlltData","getData","compressedResults","results","parseCurrentSettings","parameterInfo","newDevice","selected","tab","renderTabContent"],"mappings":"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","file":"static/js/8.1d9e8614.chunk.js","sourcesContent":["import legoinoDeviceInformation from 'legoino-device-information';\n\n// Default Values\n\nexport const DEVICES_DB = 'BIOREACTOR_devices';\nexport const DEFAULT_PORT = '9001';\nexport const DEFAULT_PROTOCOL = 'tcp';\n\n// Static Values\n\nexport const DEVICE_TYPE = {\n  broadcast: 'broadcast',\n  interactive: 'interactive',\n  local: 'local',\n};\n\nexport const DEVICE_PROTOCOLS = ['tcp', 'http','wss'];\n\nexport const DEVICE_KINDS = Object.keys(legoinoDeviceInformation).map(\n  (key) => legoinoDeviceInformation[key].kind,\n);\n\nexport const DEVICE_STATUS = {\n  opening: 1,\n  opened: 2,\n  closed: 3,\n  missing: 9,\n  error: 10,\n};\n\nexport const COMMANDS = {\n  compactSettings: 'uc',\n  runExpirement: 'r',\n  kinetic: 'k',\n  reset: 'ur1234',\n  sleep: 'l',\n  setParameter: (label, value) => `${label}${value}`,\n};\n","import clsx from 'clsx';\nimport {\n  SvgOutlineExclamationCircle,\n  SvgSolidExclamation,\n  useNotificationCenter,\n} from '../components/tailwind-ui';\n\nexport default function useNotification() {\n  const notificationContext = useNotificationCenter();\n\n  const addNotification = (title, message, { textColor, Icon, timeout }) => {\n    notificationContext.addNotification(\n      {\n        title: (\n          <span className={clsx('text-base font-semibold', textColor + '500')}>\n            {title}\n          </span>\n        ),\n        content: <span className=\"text-sm text-neutral-500\">{message}</span>,\n        icon: <Icon className={clsx('w-8 h-8', textColor + '600')} />,\n      },\n      timeout,\n    );\n  };\n\n  const addInfoNotification = (title, message) => {\n    addNotification(title, message, {\n      textColor: 'text-primary-',\n      Icon: SvgOutlineExclamationCircle,\n      timeout: 1000,\n    });\n  };\n\n  const addWarningNotification = (title, message) => {\n    addNotification(title, message, {\n      textColor: 'text-warning-',\n      Icon: SvgSolidExclamation,\n      timeout: 2500,\n    });\n  };\n\n  const addErrorNotification = (title, message) => {\n    addNotification(title, message, {\n      textColor: 'text-danger-',\n      Icon: SvgSolidExclamation,\n      timeout: 5000,\n    });\n  };\n\n  return { addErrorNotification, addWarningNotification, addInfoNotification };\n}\n","import { isFunction } from 'lodash';\nimport { DevicesManager } from 'legoino-navigator-serial';\n\nconst SCAN_INTERVAL = 3000;\n\nconst devicesManager = new DevicesManager(navigator.serial);\n\n/**\n * By calling this method from a click you give users the possibility to allow access to some devices\n */\nconst requestDevices = async () => {\n  await devicesManager.requestDevices();\n};\n\n/**\n * @returns {Array<object>}\n */\nconst getConnectedDevices = async () => {\n  await devicesManager.updateDevices();\n  const connectedDevices = await devicesManager.getDevicesList({\n    ready: true, // If ready==`true` returns only currently connected device, else returns all devices ever connected.\n  });\n  return connectedDevices;\n};\n\n/**\n * Update updated devices list every `scanInterval` [ms].\n * @param {Function} callback(devicesList): Callback to execute on each update\n * @param {number} scanInterval Delay between calls\n */\nconst continuousUpdateDevices = async (\n  callback,\n  scanInterval = SCAN_INTERVAL,\n) => {\n  const interval = setInterval(async () => {\n    const connectedDevices = await getConnectedDevices();\n    isFunction(callback) && callback(connectedDevices);\n  }, scanInterval);\n  return interval;\n};\n\n/**\n * Send a serial command to a device.\n * @param {number} id ID of the device\n * @param {string} command Command to send\n * @returns ??????\n */\nconst sendCommand = async (deviceId, command) => {\n  return await devicesManager.sendCommand(deviceId, command);\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  requestDevices,\n  getConnectedDevices,\n  continuousUpdateDevices,\n  sendCommand,\n};\n","import { useEffect, useState } from 'react';\n\nimport devicesManager from '../../services/localDeviceService';\nimport { DEVICE_KINDS } from '../../services/devicesOptions';\nimport { Dropdown, Button } from '../../components/tailwind-ui';\nimport useNotification from '../../hooks/useNotification';\n\nconst typeOptions = DEVICE_KINDS.map((type) => ({\n  label: type,\n  type: 'option',\n}));\n\nconst SelectDeviceComponent = ({\n  device = { label: '--' },\n  deviceType = typeOptions.filter((o) => o.label === 'SimpleSpectro')[0],\n  onSelectDevice,\n  onSelectType,\n}) => {\n  const { addInfoNotification, addWarningNotification } = useNotification();\n  const [devices, setDevices] = useState([]);\n\n  useEffect(() => {\n    onSelectType(deviceType);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // continuous update of devices list\n  useEffect(() => {\n    updateConnectedDevices();\n    const cleanUp = devicesManager.continuousUpdateDevices((newList) => {\n      handleDevicesListChange(newList);\n    });\n    return () => cleanUp.then((intervalId) => clearInterval(intervalId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [devices.length]);\n\n  const updateConnectedDevices = async () => {\n    const newList = await devicesManager.getConnectedDevices();\n    if (newList.length > 0) {\n      if (!device?.id) onSelectDevice(renderOptions(newList)[0]);\n      setDevices(newList);\n    }\n  };\n\n  // When connected devices are changed : show notification + set selected + set devicesList\n  const handleDevicesListChange = (newList) => {\n    if (newList.length > devices.length) {\n      addInfoNotification('New device connected');\n      if (!device?.id) onSelectDevice(renderOptions(newList)[0]);\n    } else if (newList.length < devices.length) {\n      addWarningNotification('Device disconnected');\n      if (newList.length === 0) onSelectDevice({ label: '--' });\n    }\n    setDevices(newList);\n  };\n\n  const onRequest = async () => {\n    document.activeElement.blur();\n    await devicesManager.requestDevices();\n    const newList = await devicesManager.getConnectedDevices();\n    handleDevicesListChange(newList);\n  };\n\n  const renderOptions = (list) =>\n    list.map((device) => ({\n      id: device.id,\n      label: 'Device-' + device.id,\n      type: 'option',\n    }));\n\n  return (\n    <div className=\"m-4 py-3 px-4 flex flex-col-reverse sm:flex-row sm:justify-between sm:items-center rounded-md bg-white shadow \">\n      <div className=\"flex flex-row flex-wrap justify-between\">\n        <div className=\"my-1 mx-2 w-full sm:w-max flex items-center justify-end flex-nowrap\">\n          <h3 className=\"mr-2 text-base font-medium text-neutral-800 \">\n            Device Type :\n          </h3>\n          <Dropdown\n            title={deviceType.label}\n            options={[typeOptions]}\n            onSelect={onSelectType}\n          />\n        </div>\n        <div className=\"my-1 mx-2 w-full sm:w-max flex items-center justify-end flex-nowrap\">\n          <h3 className=\"mr-2 text-base font-medium text-neutral-800\">\n            Select device :\n          </h3>\n          <Dropdown\n            title={device.label}\n            options={[renderOptions(devices)]}\n            onSelect={onSelectDevice}\n          />\n        </div>\n      </div>\n      <Button className=\"mb-3 sm:mb-0\" onClick={onRequest}>\n        Request device\n      </Button>\n    </div>\n  );\n};\n\nexport default SelectDeviceComponent;\n","import React from 'react';\nimport { Divider } from './tailwind-ui';\n\nconst DividerCustom = ({ title }) => {\n  return (\n    <div className=\"my-4\">\n      <Divider justify=\"start\">\n        <span className=\"px-2 bg-white text-xs font-medium text-neutral-400\">\n          {title}\n        </span>\n      </Divider>\n    </div>\n  );\n};\n\nexport default DividerCustom;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 265.911,\n  cy: 132.089,\n  r: 25\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M437.02,74.98C388.667,26.629,324.38,0,256,0S123.333,26.629,74.98,74.98C26.629,123.333,0,187.62,0,256 s26.629,132.667,74.98,181.02C123.333,485.371,187.62,512,256,512s132.667-26.629,181.02-74.98 C485.371,388.667,512,324.38,512,256S485.371,123.333,437.02,74.98z M256,472c-119.103,0-216-96.897-216-216S136.897,40,256,40 s216,96.897,216,216S375.103,472,256,472z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M278.528,366.083c-4.024,1.965-7.223,0.347-8.771-0.792c-1.546-1.138-4.041-3.705-3.359-8.17l17.163-114.269 c2.728-17.888-4.633-35.66-19.212-46.381c-14.582-10.724-33.746-12.454-50.01-4.517l-24.695,12.044l17.527,35.955l24.708-12.051 c4.023-1.962,7.223-0.345,8.771,0.793c1.547,1.138,4.041,3.706,3.36,8.17l-17.163,114.269 c-2.729,17.888,4.633,35.659,19.211,46.381c8.508,6.257,18.574,9.451,28.716,9.451c7.24,0,14.519-1.629,21.294-4.935 l24.696-12.045l-17.53-35.955L278.528,366.083z\"\n}))));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nfunction SvgInformation(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgInformation);\nexport default __webpack_public_path__ + \"static/media/information.e80dccce.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from 'clsx';\nimport { ReactComponent as InfoIcon } from '../assets/icons/information.svg';\n\nconst ValueCard = ({\n  title,\n  value,\n  unit,\n  placeholder,\n  info,\n  type = 'text',\n  editable,\n  onChange,\n  className,\n}) => {\n  return (\n    <div className={clsx('flex', className)}>\n      <div className=\"w-full m-1 p-2 flex flex-col justify-between items-center sm:items-start rounded-md bg-white shadow\">\n        <div className=\"w-full py-1 flex flex-row justify-between items-start relative\">\n          <h3 className=\"text-sm font-medium text-gray-500\">{title}</h3>\n          {info && (\n            <div className=\" group\">\n              <InfoIcon\n                height=\"12\"\n                width=\"12\"\n                className=\"my-1 fill-current text-neutral-400 group-hover:text-primary-600\"\n              />\n              <div\n                className=\"absolute bottom-full right-0 hidden group-hover:flex z-10 p-1 bg-neutral-50 shadow-md rounded\"\n                max-content={100}\n              >\n                <span className=\" text-xs text-neutral-500 \">{info}</span>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"w-full mt-2 flex flex-row justify-center sm:justify-end items-center\">\n          {editable ? (\n            <input\n              className=\"w-full p-1 bg-neutral-50 border-neutral-200 text-right text-black text-sm font-bold placeholder-neutral-500 placeholder-opacity-30 rounded  focus:outline-none focus:ring-0 leading-none\"\n              id={title}\n              name={title}\n              type={type}\n              placeholder={placeholder}\n              value={value}\n              onChange={(event) => onChange(event.target.value)}\n            />\n          ) : (\n            <p className=\"text-xl font-bold text-black\">{value}</p>\n          )}\n          <p className=\"ml-1 text-sm font-medium text-gray-400\">{unit}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ValueCard;\n","import useNotification from '../../hooks/useNotification';\nimport devicesManager from '../../services/localDeviceService';\nimport { COMMANDS } from './../../services/devicesOptions';\n\nimport DividerCustom from '../../components/DividerCustom';\nimport { Button } from '../../components/tailwind-ui';\nimport ValueCard from '../../components/ValueCard';\n\nconst GeneralTab = ({ data, device }) => {\n  const { addInfoNotification, addErrorNotification } = useNotification();\n\n  const onSendCommand = async (command) => {\n    try {\n      const resultMsg = await devicesManager.sendCommand(device.id, command);\n      console.log('runExpirement');\n      console.log(resultMsg);\n      addInfoNotification(resultMsg);\n    } catch (e) {\n      console.log('runExpirement error');\n      console.log(e);\n      addErrorNotification(e);\n    }\n    document.activeElement.blur();\n  };\n\n  return (\n    <div className=\"flex flex-col mt-2\">\n      <div className=\"flex flex-row justify-end\">\n        <Button\n          className=\"mx-2\"\n          onClick={() => onSendCommand(COMMANDS.runExpirement)}\n        >\n          Run experiment\n        </Button>\n        <Button\n          className=\"mx-2\"\n          onClick={() => onSendCommand(COMMANDS.kinetic)}\n        >\n          Run Kinetic\n        </Button>\n      </div>\n      {data?.epoch && (\n        <DividerCustom\n          title={\n            <p className=\" text-base font-medium text-black self-start\">\n              Awake time:\n              <span className=\"mx-1 text-sm text-neutral-500\">\n                {data?.epoch / 1000 + 's'}\n              </span>\n            </p>\n          }\n        />\n      )}\n      <div className=\" flex flex-row justify-around flex-wrap\">\n        {data?.parametersArray?.map((param, index) => (\n          <ValueCard\n            key={index}\n            title={param.name || param.label}\n            value={param.value * param.factor}\n            unit={param.unit}\n            info={param.description}\n            className=\"w-full sm:w-1/2  md:w-1/3 lg:w-1/4 flex\"\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default GeneralTab;\n","import { useCallback, useState, useEffect } from 'react';\nimport { Table, Td, Th, useTable } from '../../components/tailwind-ui';\n\nconst HistoryTab = ({ data, deviceType }) => {\n  const [headers, setHeaders] = useState([]);\n\n  // extract headers from the first element on data (just one time whenever deviceType is changed)\n  useEffect(() => {\n    const heads =\n      data && data.length > 0\n        ? data[0].parametersArray?.map((h) => h.name || h.label)\n        : [];\n    setHeaders(['Epoch', ...heads]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [deviceType]);\n\n  const Row = useCallback((val) => {\n    const classnames = 'text-xs text-center p-2';\n    return (\n      <tr>\n        <Td compact={true} className={classnames + ' font-medium'}>\n          {val.value.epoch}\n        </Td>\n        {val.value.parametersArray?.map((p, index) => (\n          <Td key={index} compact={true} className={classnames}>\n            {p.value}\n          </Td>\n        ))}\n      </tr>\n    );\n  }, []);\n\n  const headerValues = useCallback(() => {\n    return (\n      <tr>\n        {headers?.map((h) => (\n          <Th\n            key={h}\n            className=\"p-2 text-center font-normal normal-case\"\n            compact={true}\n          >\n            {h}\n          </Th>\n        ))}\n      </tr>\n    );\n  }, [headers]);\n\n  const { pagination, data: sliceData } = useTable(data, {\n    itemsPerPage: 10,\n    withText: true,\n  });\n\n  return (\n    <div className=\"w-full p-1 overflow-x-auto\">\n      <Table\n        pagination={pagination}\n        data={sliceData.map((d) => ({ ...d, id: d.epoch }))}\n        Header={headerValues}\n        Tr={Row}\n      />\n    </div>\n  );\n};\n\nexport default HistoryTab;\n","import { useState, useEffect } from 'react';\n\nimport { Button, Spinner, Dropdown } from '../../components/tailwind-ui';\nimport DividerCustom from '../../components/DividerCustom';\nimport useNotification from '../../hooks/useNotification';\nimport devicesManager from '../../services/localDeviceService';\nimport { COMMANDS } from './../../services/devicesOptions';\nimport ValueCard from '../../components/ValueCard';\n\nconst intervals = [1, 2, 5, 10, 30, 60, 120, 300].map((v) => ({\n  label: v > 59 ? `${v / 60} m` : `${v} s`,\n  value: v * 1000,\n  type: 'option',\n}));\n\nconst ConfigTab = ({\n  device,\n  data,\n  refreshInterval = 1000,\n  setRefreshInterval,\n}) => {\n  const { addInfoNotification, addErrorNotification } = useNotification();\n  const [writableParams, setWritableParams] = useState([]);\n  const [_refreshInterval, _setRefreshInterval] = useState({\n    label: refreshInterval / 1000 + ' s',\n    value: refreshInterval,\n    type: 'option',\n  });\n  const [render, setRender] = useState(false);\n  const [showSpinner, setShowSpinner] = useState(false);\n\n  useEffect(() => {\n    const parameters = data?.parameters;\n    const values =\n      parameters &&\n      Object.keys(parameters)\n        .filter((key) => parameters[key].writable)\n        .map((key) => ({ ...parameters[key], key }));\n    setWritableParams(values);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [render]);\n\n  const reRender = () => {\n    setTimeout(() => {\n      setRender(!render);\n    }, 1000);\n  };\n\n  const OnRefreshIntervalChanged = (option) => {\n    _setRefreshInterval(option);\n    setRefreshInterval(option.value);\n    document.activeElement.blur();\n  };\n\n  const onReset = async () => {\n    try {\n      const resultMsg = await devicesManager.sendCommand(\n        device.id,\n        COMMANDS.reset,\n      );\n      addInfoNotification(resultMsg);\n      reRender();\n    } catch (e) {\n      addErrorNotification(e.message);\n    }\n    document.activeElement.blur();\n  };\n\n  const onSleep = async () => {\n    try {\n      await devicesManager.sendCommand(device.id, COMMANDS.sleep);\n    } catch (e) {\n      addErrorNotification(e.message);\n    }\n    document.activeElement.blur();\n  };\n\n  const onValueChanged = (label, value) => {\n    const newValues = writableParams.map((v) =>\n      v.label === label ? { ...v, value: value / v.factor, edited: true } : v,\n    );\n    setWritableParams(newValues);\n  };\n\n  const onSave = async () => {\n    setShowSpinner(true);\n    let saved = false;\n    try {\n      for (let v of writableParams) {\n        if (v.edited) {\n          console.log(v.key + v.value);\n          await devicesManager.sendCommand(\n            device.id,\n            COMMANDS.setParameter(v.key, v.value),\n          );\n          saved = true;\n        }\n      }\n      saved\n        ? addInfoNotification('Saved')\n        : addInfoNotification('No changes to save');\n      reRender();\n    } catch (e) {\n      addErrorNotification(e.message);\n    }\n    setShowSpinner(false);\n    document.activeElement.blur();\n  };\n\n  return (\n    <div className=\"w-full flex flex-col \">\n      <div className=\"mt-2 flex flex-col sm:flex-row justify-between\">\n        <div className=\"my-1 mx-2 flex flex-row items-center justify-end\">\n          <p className=\"mx-1 text-sm font-medium text-neutral-700\">\n            Refresh inreval :\n          </p>\n          <Dropdown\n            title={_refreshInterval.label}\n            options={[intervals]}\n            onSelect={OnRefreshIntervalChanged}\n          />\n        </div>\n        <div className=\"my-1 flex flex-row justify-end\">\n          <Button className=\"mx-2\" variant=\"white\" onClick={onSleep}>\n            Sleep\n          </Button>\n          <Button className=\"mx-2 \" variant=\"white\" onClick={onReset}>\n            Reset Device\n          </Button>\n        </div>\n      </div>\n\n      {writableParams?.length > 0 && (\n        <>\n          <DividerCustom title=\"Edit parameters\" />\n          <div className=\"flex flex-row justify-start flex-wrap\">\n            {writableParams.map((p, index) => (\n              <ValueCard\n                key={index}\n                title={p.name || p.label}\n                value={p.value * p.factor}\n                placeholder={p.description}\n                unit={p.unit}\n                info={p.description}\n                editable={true}\n                onChange={(newValue) => onValueChanged(p.label, newValue)}\n                className=\"w-full sm:w-1/2  md:w-1/3 lg:w-1/4 flex\"\n              />\n            ))}\n          </div>\n\n          <Button\n            className=\"mx-2 mt-2 flex self-end\"\n            variant=\"white\"\n            onClick={onSave}\n          >\n            {showSpinner && (\n              <Spinner className=\"text-primary-600 w-5 mr-2\"></Spinner>\n            )}\n            Save\n          </Button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ConfigTab;\n","import { useState, useEffect, useCallback } from 'react';\nimport { parseCurrentSettings } from 'legoino-util';\n\nimport { HorizontalNavigation } from '../../components/tailwind-ui';\nimport useNotification from '../../hooks/useNotification';\nimport devicesManager from '../../services/localDeviceService';\nimport { COMMANDS } from './../../services/devicesOptions';\nimport SelectDeviceComponent from './SelectDeviceComponent';\nimport GeneralTab from './GeneralTab';\nimport HistoryTab from './HistoryTab';\nimport ConfigTab from './ConfigTab';\n\nconst tabs = ['General', 'History', 'Configuration'].map((v) => ({\n  value: v,\n  label: v,\n}));\n\nconst LocalDevices = () => {\n  const [selectedDevice, setSelectedDevice] = useState();\n  const [selectedType, setSelectedType] = useState();\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n  const [currentData, setCurrentData] = useState({});\n  const [allData, setAlltData] = useState([]);\n  const [refreshInterval, setRefreshInterval] = useState(10000);\n  const { addErrorNotification } = useNotification();\n\n  const getData = useCallback(\n    async (deviceId) => {\n      if (deviceId) {\n        try {\n          const compressedResults = await devicesManager.sendCommand(\n            deviceId,\n            COMMANDS.compactSettings,\n          );\n          const results = parseCurrentSettings(compressedResults, {\n            kind: selectedType?.label, // parameterLabel: true,\n            parameterInfo: true,\n            parametersArray: true,\n          });\n\n          setCurrentData(results);\n          const d = [results, ...allData];\n          console.log(d);\n          setAlltData(d);\n        } catch (e) {\n          addErrorNotification(e.message);\n        }\n      } else {\n        setCurrentData({});\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [allData, selectedType?.label, selectedDevice?.id],\n  );\n\n  useEffect(() => {\n    if (selectedDevice?.id) {\n      const timeout = setInterval(\n        () => getData(selectedDevice?.id),\n        refreshInterval,\n      );\n      return () => {\n        clearInterval(timeout);\n      };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [refreshInterval, getData]);\n\n  // if selectedType or selectedDevice: delete HistoryData + get the new data\n  useEffect(() => {\n    setAlltData([]);\n    getData(selectedDevice?.id);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedType?.label, selectedDevice?.id]);\n\n  const renderTabContent = (tab) => {\n    switch (tab.value) {\n      case 'General':\n        return <GeneralTab data={currentData} device={selectedDevice} />;\n      case 'History':\n        return <HistoryTab data={allData} deviceType={selectedType?.label} />;\n      case 'Configuration':\n        return (\n          <ConfigTab\n            device={selectedDevice}\n            data={currentData}\n            refreshInterval={refreshInterval}\n            setRefreshInterval={setRefreshInterval}\n          />\n        );\n      default:\n        return <div />;\n    }\n  };\n\n  return (\n    <>\n      <SelectDeviceComponent\n        deviceType={selectedType}\n        onSelectType={setSelectedType}\n        device={selectedDevice}\n        onSelectDevice={(newDevice) => {\n          setSelectedDevice(newDevice);\n          getData(newDevice?.id);\n        }}\n      />\n      {selectedDevice?.id ? (\n        <div className=\"mx-4 pb-4\">\n          <HorizontalNavigation\n            onSelect={setSelectedTab}\n            selected={selectedTab}\n            options={tabs}\n          />\n          <div className=\"p-3 mt-4 sm:m-0 flex flex-col items-center rounded-md sm:rounded-t-none bg-white shadow \">\n            {renderTabContent(selectedTab)}\n          </div>\n        </div>\n      ) : (\n        <div className=\"mx-5 mt-16 flex flex-col items-center\">\n          <h3 className=\"text-base font-bold text-gray-300 leading-loose\">\n            No connected Device\n          </h3>\n          <h3 className=\"text-sm font-base text-gray-300\">\n            Please plug your device into the computer\n          </h3>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default LocalDevices;\n"],"sourceRoot":""}