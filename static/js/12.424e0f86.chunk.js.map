{"version":3,"sources":["assets/icons/treeDots.svg","pages/LocalDeviceDetails/GeneralTab.jsx","pages/LocalDeviceDetails/HistoryTab.jsx","pages/LocalDeviceDetails/ConfigTab.jsx","pages/LocalDeviceDetails/AdvancedTab.jsx","pages/LocalDeviceDetails/DeviceCardInfo.jsx","pages/LocalDeviceDetails/index.jsx"],"names":["_path","GeneralTab","data","className","epoch","msToTime","parametersArray","map","param","index","title","name","label","value","factor","unit","info","description","HistoryTab","device","refreshInterval","useState","headers","setHeaders","setData","useEffect","_id","getSavedData","then","rows","initHeaders","connected","timeout","setInterval","clearInterval","dataArray","length","heads","h","Row","useCallback","val","classnames","compact","p","headerValues","useTable","itemsPerPage","withText","pagination","sliceData","size","variant","onClick","clearSavedData","d","id","Header","Tr","intervals","v","type","ConfigTab","setRefreshInterval","refreshData","writableParams","setWritableParams","_refreshInterval","_setRefreshInterval","useNotification","addInfoNotification","addErrorNotification","parameters","values","Object","keys","filter","key","writable","onSaveValue","a","console","log","sendCommand","COMMANDS","setParameter","message","onReset","reset","resultMsg","document","activeElement","blur","onSleep","sleep","options","onSelect","option","initialValue","placeholder","onSave","_excluded","_extends","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgTreeDots","_ref","svgRef","titleId","props","viewBox","ref","ForwardRef","AdvancedTab","deviceId","setDeviceId","command","setCommand","results","setResults","init","help","onSend","onHelp","setTimeout","onSettings","settings","style","fontFamily","onChange","event","onKeyDown","fill","disabled","DeviceCardInfo","goBack","onOpenModel","onRequest","dot","rounded","BadgeSize","SMALL","color","kind","tabs","LocalDevices","match","history","currentDevice","setCurrentDevice","selectedTab","setSelectedTab","isModalOpen","setIsModalOpen","forceRender","setForceRender","currentData","setCurrentData","addWarningNotification","params","getDevice","_device","getCurrentData","compactSettings","compressedResults","parseCurrentSettings","parameterInfo","saveDataRow","getLastSavedData","row","setDeviceConnectivity","cleanUp","continuousUpdateDevices","connectedDevices","isConnected","intervalId","getConnectedDevices","requestDevices","onSaveDevice","deviceInfo","updateDevice","selected","tab","renderTabContent","LocalDeviceModal","isOpen","onClose","initialValues"],"mappings":"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","file":"static/js/12.424e0f86.chunk.js","sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTreeDots(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 20 20\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTreeDots);\nexport default __webpack_public_path__ + \"static/media/treeDots.68360f32.svg\";\nexport { ForwardRef as ReactComponent };","import { CardValue } from '../../components';\nimport { msToTime } from '../../services/util';\n\nconst GeneralTab = ({ data }) => {\n  return (\n    <div className=\"flex flex-col\">\n      {data?.epoch && (\n        <p className=\"mx-2 my-2 text-base font-medium text-black self-end\">\n          Awake time:\n          <span className=\"mx-1 text-sm text-neutral-500\">\n            {msToTime(data?.epoch)}\n          </span>\n        </p>\n      )}\n      <div className=\" flex flex-row justify-around flex-wrap\">\n        {data?.parametersArray?.map((param, index) => (\n          <CardValue\n            key={index}\n            title={param.name || param.label}\n            value={param.value * param.factor}\n            unit={param.unit}\n            info={param.description}\n            className=\"w-full sm:w-1/2  md:w-1/4 lg:w-1/5 flex\"\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default GeneralTab;\n","import { useCallback, useState, useEffect } from 'react';\nimport { Button, Table, Td, Th, useTable } from '../../components/tailwind-ui';\nimport { getSavedData, clearSavedData } from '../../services/devicesService';\nimport { msToTime } from '../../services/util';\n\nconst ROWS_BY_PAGE = 10;\n\nconst HistoryTab = ({ device, refreshInterval }) => {\n  const [headers, setHeaders] = useState([]);\n  const [data, setData] = useState([]);\n\n  // extract headers from the first element on data\n  useEffect(() => {\n    if (device?._id) {\n      getSavedData(device?._id).then((rows) => {\n        initHeaders(rows);\n        setData(rows);\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [device?._id]);\n\n  useEffect(() => {\n    if (device?._id && device?.connected) {\n      const timeout = setInterval(\n        () =>\n          getSavedData(device?._id).then((rows) => {\n            initHeaders(rows);\n            setData(rows);\n          }),\n        refreshInterval,\n      );\n      return () => clearInterval(timeout);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [device?._id, device?.connected, refreshInterval]);\n\n  const initHeaders = (dataArray) => {\n    if (headers.length === 0 && dataArray && dataArray.length > 0) {\n      const heads = dataArray[0].parametersArray?.map((h) => h.name || h.label);\n      setHeaders(['Time', ...heads]);\n    }\n  };\n\n  const onClear = () => {\n    clearSavedData(device?._id).then(() => setData([]));\n  };\n\n  const Row = useCallback((val) => {\n    const classnames = 'text-xs text-center p-2';\n    return (\n      <tr>\n        <Td compact={true} className={classnames + ' font-medium'}>\n          {msToTime(val.value.epoch)}\n        </Td>\n        {val.value.parametersArray?.map((p, index) => (\n          <Td key={index} compact={true} className={classnames}>\n            {p.value}\n          </Td>\n        ))}\n      </tr>\n    );\n  }, []);\n\n  const headerValues = useCallback(() => {\n    return (\n      <tr>\n        {headers?.map((h) => (\n          <Th\n            key={h}\n            className=\"p-2 text-center font-normal normal-case\"\n            compact={true}\n          >\n            {h}\n          </Th>\n        ))}\n      </tr>\n    );\n  }, [headers]);\n\n  const { pagination, data: sliceData } = useTable(data, {\n    itemsPerPage: ROWS_BY_PAGE,\n    withText: true,\n  });\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"w-full p-2 flex flex-row justify-end\">\n        <Button size=\"small\" variant=\"white\" onClick={onClear}>\n          Clear\n        </Button>\n      </div>\n      <div className=\"w-full p-1 pb-4 overflow-x-auto\">\n        <Table\n          pagination={pagination}\n          data={sliceData.map((d, index) => ({\n            ...d,\n            id: d.epoch + index,\n          }))}\n          Header={headerValues}\n          Tr={Row}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default HistoryTab;\n","import { useState, useEffect } from 'react';\n\nimport { Button, Dropdown } from '../../components/tailwind-ui';\nimport { CardInput, DividerCustom } from '../../components';\nimport useNotification from '../../hooks/useNotification';\nimport { sendCommand } from '../../services/localDeviceService';\nimport { COMMANDS } from '../../services/devicesOptions';\n\nconst intervals = [1, 2, 5, 10, 30, 60, 120, 300].map((v) => ({\n  label: v > 59 ? `${v / 60} m` : `${v} s`,\n  value: v * 1000,\n  type: 'option',\n}));\n\n/**\n *\n * @param {Object} device\n * @param {number} refreshInterval\n * @param {function} setRefreshInterval\n * @param {Object} data\n * @param {function} refreshData\n */\n\nconst ConfigTab = ({\n  device,\n  refreshInterval,\n  setRefreshInterval,\n  data,\n  refreshData,\n}) => {\n  const [writableParams, setWritableParams] = useState([]);\n  const [_refreshInterval, _setRefreshInterval] = useState({\n    label: refreshInterval / 1000 + ' s',\n    value: refreshInterval,\n    type: 'option',\n  });\n\n  const { addInfoNotification, addErrorNotification } = useNotification();\n\n  // get Writable params from data\n  useEffect(() => {\n    const parameters = data?.parameters;\n    const values =\n      parameters &&\n      Object.keys(parameters)\n        .filter((key) => parameters[key].writable)\n        .map((key) => ({ ...parameters[key], key })); // the key is used to send the update command\n    setWritableParams(values);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  const onSaveValue = async (key, value) => {\n    try {\n      console.log(key + ' is set to: ' + value);\n      await sendCommand(device.id, COMMANDS.setParameter(key, value));\n      refreshData();\n      addInfoNotification('saved', '', 1000);\n    } catch (e) {\n      addErrorNotification(e.message);\n    }\n  };\n\n  const OnRefreshIntervalChanged = (option) => {\n    _setRefreshInterval(option);\n    setRefreshInterval(option.value);\n    document.activeElement.blur();\n  };\n\n  const onReset = async () => {\n    try {\n      const resultMsg = await sendCommand(device.id, COMMANDS.reset);\n      addInfoNotification(resultMsg);\n      refreshData();\n    } catch (e) {\n      addErrorNotification(e.message);\n    }\n    document.activeElement.blur();\n  };\n\n  const onSleep = async () => {\n    try {\n      await sendCommand(device.id, COMMANDS.sleep);\n    } catch (e) {\n      addErrorNotification(e.message);\n    }\n    document.activeElement.blur();\n  };\n\n  return (\n    <div className=\"w-full flex flex-col \">\n      <div className=\"mt-2 flex flex-col sm:flex-row justify-between\">\n        <div className=\"my-1 mx-2 flex flex-row items-center justify-end\">\n          <p className=\"mx-1 text-sm font-medium text-neutral-700\">\n            Refresh interval :\n          </p>\n          <Dropdown\n            title={_refreshInterval.label}\n            options={[intervals]}\n            onSelect={OnRefreshIntervalChanged}\n          />\n        </div>\n        <div className=\"my-1 flex flex-row justify-end\">\n          <Button className=\"mx-2\" variant=\"white\" onClick={onSleep}>\n            Sleep\n          </Button>\n          <Button className=\"mx-2 \" variant=\"white\" onClick={onReset}>\n            Reset Device\n          </Button>\n        </div>\n      </div>\n\n      {writableParams?.length > 0 && (\n        <>\n          <DividerCustom title=\"Edit parameters\" />\n          <div className=\"flex flex-row justify-start flex-wrap\">\n            {writableParams.map((p, index) => (\n              <CardInput\n                key={index}\n                id={p.key}\n                title={p.name || p.label}\n                initialValue={p.value * p.factor}\n                placeholder={p.name}\n                unit={p.unit}\n                info={p.description}\n                onSave={onSaveValue}\n                className=\"w-full sm:w-1/2  md:w-1/4 lg:w-1/5 flex\"\n              />\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ConfigTab;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Dropdown } from '../../components/tailwind-ui';\nimport { ReactComponent as TreeDotsIcon } from '../../assets/icons/treeDots.svg';\nimport { sendCommand } from '../../services/localDeviceService';\nimport { COMMANDS } from '../../services/devicesOptions';\nimport useNotification from '../../hooks/useNotification';\n\nconst AdvancedTab = ({ device }) => {\n  const [deviceId, setDeviceId] = useState();\n  const [command, setCommand] = useState('');\n  const [results, setResults] = useState('');\n\n  const { addErrorNotification } = useNotification();\n\n  useEffect(() => {\n    setDeviceId(device?.id);\n    init();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [device?.id]);\n\n  const init = async () => {\n    if (device?.id && device?.connected) {\n      setCommand(COMMANDS.help);\n      const data = await sendCommand(device?.id, COMMANDS.help);\n      setResults(data);\n    }\n  };\n\n  const onSend = async () => {\n    if (command) {\n      try {\n        const data = await sendCommand(deviceId, command);\n        setResults(data);\n      } catch (e) {\n        addErrorNotification(\n          e.name,\n          !device?.connected ? `${device?.name} is disconnected` : e.message,\n        );\n      }\n    }\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      onSend();\n    }\n  };\n\n  const onHelp = async () => {\n    try {\n      setCommand(COMMANDS.help);\n      const data = await sendCommand(deviceId, COMMANDS.help);\n      setResults(data);\n    } catch (e) {\n      addErrorNotification(\n        e.name,\n        !device?.connected ? `${device?.name} is disconnected` : e.message,\n      );\n    }\n    setTimeout(() => document.activeElement.blur(), 100);\n  };\n\n  const onSettings = async () => {\n    try {\n      setCommand(COMMANDS.settings);\n      const data = await sendCommand(deviceId, COMMANDS.settings);\n      setResults(data);\n    } catch (e) {\n      addErrorNotification(\n        e.name,\n        !device?.connected ? `${device?.name} is disconnected` : e.message,\n      );\n    }\n    setTimeout(() => document.activeElement.blur(), 100);\n  };\n\n  const handleDropdownSelect = (option) =>\n    option.label === 'Help'\n      ? onHelp()\n      : option.label === 'Settings'\n      ? onSettings()\n      : null;\n\n  return (\n    <div className=\"w-full   \">\n      <div className=\"flex flex-col\">\n        <div className=\"w-full my-1 md:max-w-md flex flex-row\">\n          <input\n            className=\"w-full py-1 px-2 border rounded-md text-base\"\n            placeholder=\"h (for help)\"\n            style={{ fontFamily: 'monospace' }}\n            value={command}\n            onChange={(event) => setCommand(event.target.value)}\n            onKeyDown={handleKeyDown}\n          />\n          <Button\n            className=\"mx-2 md:mr-0\"\n            variant=\"primary\"\n            size=\"small\"\n            onClick={onSend}\n          >\n            Send\n          </Button>\n          {/* display just in small screens */}\n          <div className=\"flex ml-4 self-center md:hidden\">\n            <Dropdown\n              options={[\n                [\n                  { label: 'Help', type: 'option' },\n                  { label: 'Settings', type: 'option' },\n                ],\n              ]}\n              onSelect={handleDropdownSelect}\n            >\n              <TreeDotsIcon className=\"w-5 h-5\" fill=\"currentColor\" />\n            </Dropdown>\n          </div>\n        </div>\n        <div className=\"w-full mt-2 flex flex-col md:flex-row md:max-w-2xl\">\n          <div className=\"w-full h-96 md:mr-2 flex md:flex-1 border rounded-md overflow-auto overflow-x-auto\">\n            <textarea\n              className=\"w-full text-sm font-semibold text-success-400 bg-neutral-900\"\n              style={{ fontFamily: 'monospace' }}\n              value={results}\n              onChange={(event) => console.log(event.target.value)}\n              disabled\n            />\n          </div>\n          <div className=\"hidden flex-col md:flex\">\n            <Button\n              className=\"m-1\"\n              variant=\"white\"\n              size=\"xSmall\"\n              onClick={onHelp}\n            >\n              Help\n            </Button>\n            <Button\n              className=\"m-1\"\n              variant=\"white\"\n              size=\"xSmall\"\n              onClick={onSettings}\n            >\n              Settings\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdvancedTab;\n","import React from 'react';\nimport {\n  Badge,\n  BadgeSize,\n  Button,\n  SvgSolidArrowCircleLeft,\n  SvgSolidPencilAlt,\n} from '../../components/tailwind-ui';\n\nconst DeviceCardInfo = ({ device, goBack, onOpenModel, onRequest }) => {\n  return (\n    <div className=\"my-2 p-2 flex flex-row items-start rounded-md bg-white shadow\">\n      <SvgSolidArrowCircleLeft\n        className=\"my-3 mr-2 h-6 w-6 text-neutral-300 cursor-pointer\"\n        onClick={goBack}\n      />\n      <div className=\"w-full my-2 flex flex-col\">\n        <div className=\"flex flex-row items-center\">\n          <h1 className=\"mr-4 text-lg font-semibold truncate text-primary-800\">\n            {device?.name}\n          </h1>\n          <Badge\n            dot\n            rounded\n            label={device?.connected ? 'Active' : 'Inactive'}\n            size={BadgeSize.SMALL}\n            color={device?.connected ? 'success' : 'neutral'}\n            className=\"w-min h-min\"\n          />\n        </div>\n        <div className=\"flex flex-row flex-wrap justify-between items-center\">\n          <h3 className=\"mt-2 text-xs font-italic text-neutral-600 font-semibold truncate\">\n            {`${device?.kind?.name} (${device?.kind?.kind})`}\n          </h3>\n          <div className=\"flex flex-row mt-2 \">\n            <Button\n              size=\"small\"\n              variant=\"white\"\n              className=\"mr-2 \"\n              onClick={() => onOpenModel(true)}\n            >\n              <SvgSolidPencilAlt className=\"text-gray-700\" />\n            </Button>\n            {!device?.connected && (\n              <Button size=\"xSmall\" onClick={onRequest}>\n                Request\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DeviceCardInfo;\n","import { useState, useEffect, useCallback } from 'react';\nimport { parseCurrentSettings } from 'legoino-util';\n\nimport GeneralTab from './GeneralTab';\nimport HistoryTab from './HistoryTab';\nimport ConfigTab from './ConfigTab';\nimport AdvancedTab from './AdvancedTab';\nimport DeviceCardInfo from './DeviceCardInfo';\nimport LocalDeviceModal from '../LocalDevices/LocalDeviceModal';\nimport useNotification from '../../hooks/useNotification';\nimport { COMMANDS } from '../../services/devicesOptions';\nimport { HorizontalNavigation } from '../../components/tailwind-ui';\nimport {\n  sendCommand,\n  requestDevices,\n  getConnectedDevices,\n  continuousUpdateDevices,\n} from '../../services/localDeviceService';\nimport {\n  getDevice,\n  updateDevice,\n  saveDataRow,\n  getLastSavedData,\n} from '../../services/devicesService';\n\nconst SCAN_INTERVAL = 1000;\n\nconst tabs = ['General', 'History', 'Advanced', 'Configuration'].map((v) => ({\n  value: v,\n  label: v,\n}));\n\nconst LocalDevices = ({ match, history }) => {\n  const [currentDevice, setCurrentDevice] = useState();\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [forceRender, setForceRender] = useState(false);\n\n  const [currentData, setCurrentData] = useState({}); // data to display\n  const [refreshInterval, setRefreshInterval] = useState(2000);\n\n  const { addWarningNotification } = useNotification();\n\n  // get device from DB just in the first render\n  useEffect(() => {\n    const deviceId = `${match.params.id}`;\n    getDevice(deviceId).then((_device) => {\n      setCurrentDevice(_device);\n    });\n  }, [match.params.id]);\n\n  // get data from device\n  const getCurrentData = useCallback(async () => {\n    if (currentDevice?.id) {\n      if (currentDevice?.connected) {\n        try {\n          const compressedResults = await sendCommand(\n            currentDevice?.id,\n            COMMANDS.compactSettings,\n          );\n          const results = parseCurrentSettings(compressedResults, {\n            kind: currentDevice?.kind?.kind,\n            parameterInfo: true,\n            parametersArray: true,\n          });\n          setCurrentData(results);\n          saveDataRow(currentDevice._id, results);\n        } catch (e) {\n          //  console.log(e.message);\n        }\n      } else {\n        // get local saved data\n        getLastSavedData(currentDevice._id).then((row) => {\n          console.log(row);\n          if (row.length > 0) {\n            setCurrentData(row[0]);\n          }\n        });\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentDevice?.id, currentDevice?.connected]);\n\n  // get data immediately after getting device\n  useEffect(() => {\n    getCurrentData();\n  }, [getCurrentData]);\n\n  // Listen continuously to data from device every {refreshInterval}\n  useEffect(() => {\n    if (currentDevice?.id && currentDevice?.connected) {\n      const timeout = setInterval(() => getCurrentData(), refreshInterval);\n      return () => clearInterval(timeout);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getCurrentData, refreshInterval]);\n\n  // Listen continuously to device connectivity\n  useEffect(() => {\n    setDeviceConnectivity();\n    const cleanUp = continuousUpdateDevices((connectedDevices) => {\n      const isConnected =\n        connectedDevices.filter((d) => d.id === currentDevice?.id).length > 0;\n      if (isConnected && !currentDevice?.connected) {\n        setCurrentDevice({ ...currentDevice, connected: true });\n      } else if (!isConnected && currentDevice?.connected) {\n        addWarningNotification(`${currentDevice?.name} is disconnected`);\n        setCurrentDevice({ ...currentDevice, connected: false });\n      }\n    }, SCAN_INTERVAL);\n\n    return () => cleanUp.then((intervalId) => clearInterval(intervalId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentDevice?.id, currentDevice?.connected, forceRender]);\n\n  const setDeviceConnectivity = async () => {\n    const connectedDevices = await getConnectedDevices();\n    if (connectedDevices.filter((d) => d.id === currentDevice?.id).length > 0) {\n      setCurrentDevice({ ...currentDevice, connected: true });\n    }\n  };\n\n  const onRequest = async () => {\n    document.activeElement.blur();\n    await requestDevices();\n    setDeviceConnectivity();\n  };\n\n  const onSaveDevice = async (device) => {\n    const { connected, ...deviceInfo } = device;\n    updateDevice(deviceInfo).then(() => {\n      setCurrentDevice(device);\n      setForceRender(!forceRender);\n      setIsModalOpen(false);\n    });\n  };\n\n  const renderTabContent = (tab) => {\n    switch (tab.value) {\n      case 'General':\n        return <GeneralTab data={currentData} />;\n      case 'History':\n        return (\n          <HistoryTab\n            device={currentDevice}\n            refreshInterval={refreshInterval}\n          />\n        );\n      case 'Advanced':\n        return <AdvancedTab device={currentDevice} />;\n      case 'Configuration':\n        return (\n          <ConfigTab\n            device={currentDevice}\n            refreshInterval={refreshInterval}\n            setRefreshInterval={setRefreshInterval}\n            data={currentData}\n            refreshData={() => getCurrentData()}\n          />\n        );\n      default:\n        return <div />;\n    }\n  };\n\n  return (\n    <div className=\"mx-4 pb-4\">\n      <DeviceCardInfo\n        device={currentDevice}\n        goBack={() => history.goBack()}\n        onOpenModel={setIsModalOpen}\n        onRequest={onRequest}\n      />\n\n      <HorizontalNavigation\n        onSelect={setSelectedTab}\n        selected={selectedTab}\n        options={tabs}\n      />\n      <div className=\"p-3 mt-4 sm:m-0 flex flex-col items-center rounded-md sm:rounded-t-none bg-white shadow \">\n        {renderTabContent(selectedTab)}\n      </div>\n\n      <LocalDeviceModal\n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        initialValues={currentDevice}\n        onSave={onSaveDevice}\n      />\n    </div>\n  );\n};\n\nexport default LocalDevices;\n"],"sourceRoot":""}